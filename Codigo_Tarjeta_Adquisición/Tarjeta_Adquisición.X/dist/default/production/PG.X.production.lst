

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Nov 13 23:55:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59     0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F1936 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95     0000                     	;# 
    96     0001                     	;# 
    97     0002                     	;# 
    98     0003                     	;# 
    99     0004                     	;# 
   100     0005                     	;# 
   101     0006                     	;# 
   102     0007                     	;# 
   103     0008                     	;# 
   104     0009                     	;# 
   105     000A                     	;# 
   106     000B                     	;# 
   107     000C                     	;# 
   108     000D                     	;# 
   109     000E                     	;# 
   110     0010                     	;# 
   111     0011                     	;# 
   112     0012                     	;# 
   113     0013                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0016                     	;# 
   117     0017                     	;# 
   118     0018                     	;# 
   119     0019                     	;# 
   120     001A                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001E                     	;# 
   124     001F                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     0090                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     0110                     	;# 
   147     0111                     	;# 
   148     0112                     	;# 
   149     0113                     	;# 
   150     0114                     	;# 
   151     0115                     	;# 
   152     0116                     	;# 
   153     0117                     	;# 
   154     0118                     	;# 
   155     0119                     	;# 
   156     011A                     	;# 
   157     011B                     	;# 
   158     011D                     	;# 
   159     018C                     	;# 
   160     018D                     	;# 
   161     0191                     	;# 
   162     0191                     	;# 
   163     0192                     	;# 
   164     0193                     	;# 
   165     0193                     	;# 
   166     0193                     	;# 
   167     0194                     	;# 
   168     0195                     	;# 
   169     0196                     	;# 
   170     0199                     	;# 
   171     019A                     	;# 
   172     019B                     	;# 
   173     019B                     	;# 
   174     019B                     	;# 
   175     019B                     	;# 
   176     019C                     	;# 
   177     019C                     	;# 
   178     019D                     	;# 
   179     019E                     	;# 
   180     019F                     	;# 
   181     020D                     	;# 
   182     0210                     	;# 
   183     0211                     	;# 
   184     0212                     	;# 
   185     0213                     	;# 
   186     0214                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0216                     	;# 
   190     0217                     	;# 
   191     0291                     	;# 
   192     0291                     	;# 
   193     0292                     	;# 
   194     0293                     	;# 
   195     0294                     	;# 
   196     0295                     	;# 
   197     0295                     	;# 
   198     0296                     	;# 
   199     0298                     	;# 
   200     0298                     	;# 
   201     0299                     	;# 
   202     029A                     	;# 
   203     029B                     	;# 
   204     029C                     	;# 
   205     029C                     	;# 
   206     029D                     	;# 
   207     029E                     	;# 
   208     029F                     	;# 
   209     0311                     	;# 
   210     0311                     	;# 
   211     0312                     	;# 
   212     0313                     	;# 
   213     0314                     	;# 
   214     0315                     	;# 
   215     0315                     	;# 
   216     0316                     	;# 
   217     0318                     	;# 
   218     0318                     	;# 
   219     0319                     	;# 
   220     031A                     	;# 
   221     031C                     	;# 
   222     031C                     	;# 
   223     031D                     	;# 
   224     031E                     	;# 
   225     0394                     	;# 
   226     0395                     	;# 
   227     0396                     	;# 
   228     0415                     	;# 
   229     0416                     	;# 
   230     0417                     	;# 
   231     041C                     	;# 
   232     041D                     	;# 
   233     041E                     	;# 
   234     0791                     	;# 
   235     0792                     	;# 
   236     0793                     	;# 
   237     0794                     	;# 
   238     0795                     	;# 
   239     0798                     	;# 
   240     0799                     	;# 
   241     07A0                     	;# 
   242     07A1                     	;# 
   243     07A3                     	;# 
   244     07A4                     	;# 
   245     07A6                     	;# 
   246     07A7                     	;# 
   247     07A9                     	;# 
   248     07AA                     	;# 
   249     0FE4                     	;# 
   250     0FE5                     	;# 
   251     0FE6                     	;# 
   252     0FE7                     	;# 
   253     0FE8                     	;# 
   254     0FE9                     	;# 
   255     0FEA                     	;# 
   256     0FEB                     	;# 
   257     0FED                     	;# 
   258     0FEE                     	;# 
   259     0FEF                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     0010                     	;# 
   276     0011                     	;# 
   277     0012                     	;# 
   278     0013                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0016                     	;# 
   282     0017                     	;# 
   283     0018                     	;# 
   284     0019                     	;# 
   285     001A                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001E                     	;# 
   289     001F                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     008E                     	;# 
   293     0090                     	;# 
   294     0091                     	;# 
   295     0092                     	;# 
   296     0093                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     0110                     	;# 
   312     0111                     	;# 
   313     0112                     	;# 
   314     0113                     	;# 
   315     0114                     	;# 
   316     0115                     	;# 
   317     0116                     	;# 
   318     0117                     	;# 
   319     0118                     	;# 
   320     0119                     	;# 
   321     011A                     	;# 
   322     011B                     	;# 
   323     011D                     	;# 
   324     018C                     	;# 
   325     018D                     	;# 
   326     0191                     	;# 
   327     0191                     	;# 
   328     0192                     	;# 
   329     0193                     	;# 
   330     0193                     	;# 
   331     0193                     	;# 
   332     0194                     	;# 
   333     0195                     	;# 
   334     0196                     	;# 
   335     0199                     	;# 
   336     019A                     	;# 
   337     019B                     	;# 
   338     019B                     	;# 
   339     019B                     	;# 
   340     019B                     	;# 
   341     019C                     	;# 
   342     019C                     	;# 
   343     019D                     	;# 
   344     019E                     	;# 
   345     019F                     	;# 
   346     020D                     	;# 
   347     0210                     	;# 
   348     0211                     	;# 
   349     0212                     	;# 
   350     0213                     	;# 
   351     0214                     	;# 
   352     0215                     	;# 
   353     0215                     	;# 
   354     0216                     	;# 
   355     0217                     	;# 
   356     0291                     	;# 
   357     0291                     	;# 
   358     0292                     	;# 
   359     0293                     	;# 
   360     0294                     	;# 
   361     0295                     	;# 
   362     0295                     	;# 
   363     0296                     	;# 
   364     0298                     	;# 
   365     0298                     	;# 
   366     0299                     	;# 
   367     029A                     	;# 
   368     029B                     	;# 
   369     029C                     	;# 
   370     029C                     	;# 
   371     029D                     	;# 
   372     029E                     	;# 
   373     029F                     	;# 
   374     0311                     	;# 
   375     0311                     	;# 
   376     0312                     	;# 
   377     0313                     	;# 
   378     0314                     	;# 
   379     0315                     	;# 
   380     0315                     	;# 
   381     0316                     	;# 
   382     0318                     	;# 
   383     0318                     	;# 
   384     0319                     	;# 
   385     031A                     	;# 
   386     031C                     	;# 
   387     031C                     	;# 
   388     031D                     	;# 
   389     031E                     	;# 
   390     0394                     	;# 
   391     0395                     	;# 
   392     0396                     	;# 
   393     0415                     	;# 
   394     0416                     	;# 
   395     0417                     	;# 
   396     041C                     	;# 
   397     041D                     	;# 
   398     041E                     	;# 
   399     0791                     	;# 
   400     0792                     	;# 
   401     0793                     	;# 
   402     0794                     	;# 
   403     0795                     	;# 
   404     0798                     	;# 
   405     0799                     	;# 
   406     07A0                     	;# 
   407     07A1                     	;# 
   408     07A3                     	;# 
   409     07A4                     	;# 
   410     07A6                     	;# 
   411     07A7                     	;# 
   412     07A9                     	;# 
   413     07AA                     	;# 
   414     0FE4                     	;# 
   415     0FE5                     	;# 
   416     0FE6                     	;# 
   417     0FE7                     	;# 
   418     0FE8                     	;# 
   419     0FE9                     	;# 
   420     0FEA                     	;# 
   421     0FEB                     	;# 
   422     0FED                     	;# 
   423     0FEE                     	;# 
   424     0FEF                     	;# 
   425     0000                     	;# 
   426     0001                     	;# 
   427     0002                     	;# 
   428     0003                     	;# 
   429     0004                     	;# 
   430     0005                     	;# 
   431     0006                     	;# 
   432     0007                     	;# 
   433     0008                     	;# 
   434     0009                     	;# 
   435     000A                     	;# 
   436     000B                     	;# 
   437     000C                     	;# 
   438     000D                     	;# 
   439     000E                     	;# 
   440     0010                     	;# 
   441     0011                     	;# 
   442     0012                     	;# 
   443     0013                     	;# 
   444     0015                     	;# 
   445     0016                     	;# 
   446     0016                     	;# 
   447     0017                     	;# 
   448     0018                     	;# 
   449     0019                     	;# 
   450     001A                     	;# 
   451     001B                     	;# 
   452     001C                     	;# 
   453     001E                     	;# 
   454     001F                     	;# 
   455     008C                     	;# 
   456     008D                     	;# 
   457     008E                     	;# 
   458     0090                     	;# 
   459     0091                     	;# 
   460     0092                     	;# 
   461     0093                     	;# 
   462     0095                     	;# 
   463     0096                     	;# 
   464     0097                     	;# 
   465     0098                     	;# 
   466     0099                     	;# 
   467     009A                     	;# 
   468     009B                     	;# 
   469     009B                     	;# 
   470     009C                     	;# 
   471     009D                     	;# 
   472     009E                     	;# 
   473     010C                     	;# 
   474     010D                     	;# 
   475     010E                     	;# 
   476     0110                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     018C                     	;# 
   490     018D                     	;# 
   491     0191                     	;# 
   492     0191                     	;# 
   493     0192                     	;# 
   494     0193                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0194                     	;# 
   498     0195                     	;# 
   499     0196                     	;# 
   500     0199                     	;# 
   501     019A                     	;# 
   502     019B                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019C                     	;# 
   507     019C                     	;# 
   508     019D                     	;# 
   509     019E                     	;# 
   510     019F                     	;# 
   511     020D                     	;# 
   512     0210                     	;# 
   513     0211                     	;# 
   514     0212                     	;# 
   515     0213                     	;# 
   516     0214                     	;# 
   517     0215                     	;# 
   518     0215                     	;# 
   519     0216                     	;# 
   520     0217                     	;# 
   521     0291                     	;# 
   522     0291                     	;# 
   523     0292                     	;# 
   524     0293                     	;# 
   525     0294                     	;# 
   526     0295                     	;# 
   527     0295                     	;# 
   528     0296                     	;# 
   529     0298                     	;# 
   530     0298                     	;# 
   531     0299                     	;# 
   532     029A                     	;# 
   533     029B                     	;# 
   534     029C                     	;# 
   535     029C                     	;# 
   536     029D                     	;# 
   537     029E                     	;# 
   538     029F                     	;# 
   539     0311                     	;# 
   540     0311                     	;# 
   541     0312                     	;# 
   542     0313                     	;# 
   543     0314                     	;# 
   544     0315                     	;# 
   545     0315                     	;# 
   546     0316                     	;# 
   547     0318                     	;# 
   548     0318                     	;# 
   549     0319                     	;# 
   550     031A                     	;# 
   551     031C                     	;# 
   552     031C                     	;# 
   553     031D                     	;# 
   554     031E                     	;# 
   555     0394                     	;# 
   556     0395                     	;# 
   557     0396                     	;# 
   558     0415                     	;# 
   559     0416                     	;# 
   560     0417                     	;# 
   561     041C                     	;# 
   562     041D                     	;# 
   563     041E                     	;# 
   564     0791                     	;# 
   565     0792                     	;# 
   566     0793                     	;# 
   567     0794                     	;# 
   568     0795                     	;# 
   569     0798                     	;# 
   570     0799                     	;# 
   571     07A0                     	;# 
   572     07A1                     	;# 
   573     07A3                     	;# 
   574     07A4                     	;# 
   575     07A6                     	;# 
   576     07A7                     	;# 
   577     07A9                     	;# 
   578     07AA                     	;# 
   579     0FE4                     	;# 
   580     0FE5                     	;# 
   581     0FE6                     	;# 
   582     0FE7                     	;# 
   583     0FE8                     	;# 
   584     0FE9                     	;# 
   585     0FEA                     	;# 
   586     0FEB                     	;# 
   587     0FED                     	;# 
   588     0FEE                     	;# 
   589     0FEF                     	;# 
   590     0000                     	;# 
   591     0001                     	;# 
   592     0002                     	;# 
   593     0003                     	;# 
   594     0004                     	;# 
   595     0005                     	;# 
   596     0006                     	;# 
   597     0007                     	;# 
   598     0008                     	;# 
   599     0009                     	;# 
   600     000A                     	;# 
   601     000B                     	;# 
   602     000C                     	;# 
   603     000D                     	;# 
   604     000E                     	;# 
   605     0010                     	;# 
   606     0011                     	;# 
   607     0012                     	;# 
   608     0013                     	;# 
   609     0015                     	;# 
   610     0016                     	;# 
   611     0016                     	;# 
   612     0017                     	;# 
   613     0018                     	;# 
   614     0019                     	;# 
   615     001A                     	;# 
   616     001B                     	;# 
   617     001C                     	;# 
   618     001E                     	;# 
   619     001F                     	;# 
   620     008C                     	;# 
   621     008D                     	;# 
   622     008E                     	;# 
   623     0090                     	;# 
   624     0091                     	;# 
   625     0092                     	;# 
   626     0093                     	;# 
   627     0095                     	;# 
   628     0096                     	;# 
   629     0097                     	;# 
   630     0098                     	;# 
   631     0099                     	;# 
   632     009A                     	;# 
   633     009B                     	;# 
   634     009B                     	;# 
   635     009C                     	;# 
   636     009D                     	;# 
   637     009E                     	;# 
   638     010C                     	;# 
   639     010D                     	;# 
   640     010E                     	;# 
   641     0110                     	;# 
   642     0111                     	;# 
   643     0112                     	;# 
   644     0113                     	;# 
   645     0114                     	;# 
   646     0115                     	;# 
   647     0116                     	;# 
   648     0117                     	;# 
   649     0118                     	;# 
   650     0119                     	;# 
   651     011A                     	;# 
   652     011B                     	;# 
   653     011D                     	;# 
   654     018C                     	;# 
   655     018D                     	;# 
   656     0191                     	;# 
   657     0191                     	;# 
   658     0192                     	;# 
   659     0193                     	;# 
   660     0193                     	;# 
   661     0193                     	;# 
   662     0194                     	;# 
   663     0195                     	;# 
   664     0196                     	;# 
   665     0199                     	;# 
   666     019A                     	;# 
   667     019B                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019B                     	;# 
   671     019C                     	;# 
   672     019C                     	;# 
   673     019D                     	;# 
   674     019E                     	;# 
   675     019F                     	;# 
   676     020D                     	;# 
   677     0210                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0213                     	;# 
   681     0214                     	;# 
   682     0215                     	;# 
   683     0215                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0291                     	;# 
   687     0291                     	;# 
   688     0292                     	;# 
   689     0293                     	;# 
   690     0294                     	;# 
   691     0295                     	;# 
   692     0295                     	;# 
   693     0296                     	;# 
   694     0298                     	;# 
   695     0298                     	;# 
   696     0299                     	;# 
   697     029A                     	;# 
   698     029B                     	;# 
   699     029C                     	;# 
   700     029C                     	;# 
   701     029D                     	;# 
   702     029E                     	;# 
   703     029F                     	;# 
   704     0311                     	;# 
   705     0311                     	;# 
   706     0312                     	;# 
   707     0313                     	;# 
   708     0314                     	;# 
   709     0315                     	;# 
   710     0315                     	;# 
   711     0316                     	;# 
   712     0318                     	;# 
   713     0318                     	;# 
   714     0319                     	;# 
   715     031A                     	;# 
   716     031C                     	;# 
   717     031C                     	;# 
   718     031D                     	;# 
   719     031E                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     0415                     	;# 
   724     0416                     	;# 
   725     0417                     	;# 
   726     041C                     	;# 
   727     041D                     	;# 
   728     041E                     	;# 
   729     0791                     	;# 
   730     0792                     	;# 
   731     0793                     	;# 
   732     0794                     	;# 
   733     0795                     	;# 
   734     0798                     	;# 
   735     0799                     	;# 
   736     07A0                     	;# 
   737     07A1                     	;# 
   738     07A3                     	;# 
   739     07A4                     	;# 
   740     07A6                     	;# 
   741     07A7                     	;# 
   742     07A9                     	;# 
   743     07AA                     	;# 
   744     0FE4                     	;# 
   745     0FE5                     	;# 
   746     0FE6                     	;# 
   747     0FE7                     	;# 
   748     0FE8                     	;# 
   749     0FE9                     	;# 
   750     0FEA                     	;# 
   751     0FEB                     	;# 
   752     0FED                     	;# 
   753     0FEE                     	;# 
   754     0FEF                     	;# 
   755     0000                     	;# 
   756     0001                     	;# 
   757     0002                     	;# 
   758     0003                     	;# 
   759     0004                     	;# 
   760     0005                     	;# 
   761     0006                     	;# 
   762     0007                     	;# 
   763     0008                     	;# 
   764     0009                     	;# 
   765     000A                     	;# 
   766     000B                     	;# 
   767     000C                     	;# 
   768     000D                     	;# 
   769     000E                     	;# 
   770     0010                     	;# 
   771     0011                     	;# 
   772     0012                     	;# 
   773     0013                     	;# 
   774     0015                     	;# 
   775     0016                     	;# 
   776     0016                     	;# 
   777     0017                     	;# 
   778     0018                     	;# 
   779     0019                     	;# 
   780     001A                     	;# 
   781     001B                     	;# 
   782     001C                     	;# 
   783     001E                     	;# 
   784     001F                     	;# 
   785     008C                     	;# 
   786     008D                     	;# 
   787     008E                     	;# 
   788     0090                     	;# 
   789     0091                     	;# 
   790     0092                     	;# 
   791     0093                     	;# 
   792     0095                     	;# 
   793     0096                     	;# 
   794     0097                     	;# 
   795     0098                     	;# 
   796     0099                     	;# 
   797     009A                     	;# 
   798     009B                     	;# 
   799     009B                     	;# 
   800     009C                     	;# 
   801     009D                     	;# 
   802     009E                     	;# 
   803     010C                     	;# 
   804     010D                     	;# 
   805     010E                     	;# 
   806     0110                     	;# 
   807     0111                     	;# 
   808     0112                     	;# 
   809     0113                     	;# 
   810     0114                     	;# 
   811     0115                     	;# 
   812     0116                     	;# 
   813     0117                     	;# 
   814     0118                     	;# 
   815     0119                     	;# 
   816     011A                     	;# 
   817     011B                     	;# 
   818     011D                     	;# 
   819     018C                     	;# 
   820     018D                     	;# 
   821     0191                     	;# 
   822     0191                     	;# 
   823     0192                     	;# 
   824     0193                     	;# 
   825     0193                     	;# 
   826     0193                     	;# 
   827     0194                     	;# 
   828     0195                     	;# 
   829     0196                     	;# 
   830     0199                     	;# 
   831     019A                     	;# 
   832     019B                     	;# 
   833     019B                     	;# 
   834     019B                     	;# 
   835     019B                     	;# 
   836     019C                     	;# 
   837     019C                     	;# 
   838     019D                     	;# 
   839     019E                     	;# 
   840     019F                     	;# 
   841     020D                     	;# 
   842     0210                     	;# 
   843     0211                     	;# 
   844     0212                     	;# 
   845     0213                     	;# 
   846     0214                     	;# 
   847     0215                     	;# 
   848     0215                     	;# 
   849     0216                     	;# 
   850     0217                     	;# 
   851     0291                     	;# 
   852     0291                     	;# 
   853     0292                     	;# 
   854     0293                     	;# 
   855     0294                     	;# 
   856     0295                     	;# 
   857     0295                     	;# 
   858     0296                     	;# 
   859     0298                     	;# 
   860     0298                     	;# 
   861     0299                     	;# 
   862     029A                     	;# 
   863     029B                     	;# 
   864     029C                     	;# 
   865     029C                     	;# 
   866     029D                     	;# 
   867     029E                     	;# 
   868     029F                     	;# 
   869     0311                     	;# 
   870     0311                     	;# 
   871     0312                     	;# 
   872     0313                     	;# 
   873     0314                     	;# 
   874     0315                     	;# 
   875     0315                     	;# 
   876     0316                     	;# 
   877     0318                     	;# 
   878     0318                     	;# 
   879     0319                     	;# 
   880     031A                     	;# 
   881     031C                     	;# 
   882     031C                     	;# 
   883     031D                     	;# 
   884     031E                     	;# 
   885     0394                     	;# 
   886     0395                     	;# 
   887     0396                     	;# 
   888     0415                     	;# 
   889     0416                     	;# 
   890     0417                     	;# 
   891     041C                     	;# 
   892     041D                     	;# 
   893     041E                     	;# 
   894     0791                     	;# 
   895     0792                     	;# 
   896     0793                     	;# 
   897     0794                     	;# 
   898     0795                     	;# 
   899     0798                     	;# 
   900     0799                     	;# 
   901     07A0                     	;# 
   902     07A1                     	;# 
   903     07A3                     	;# 
   904     07A4                     	;# 
   905     07A6                     	;# 
   906     07A7                     	;# 
   907     07A9                     	;# 
   908     07AA                     	;# 
   909     0FE4                     	;# 
   910     0FE5                     	;# 
   911     0FE6                     	;# 
   912     0FE7                     	;# 
   913     0FE8                     	;# 
   914     0FE9                     	;# 
   915     0FEA                     	;# 
   916     0FEB                     	;# 
   917     0FED                     	;# 
   918     0FEE                     	;# 
   919     0FEF                     	;# 
   920                           
   921                           	psect	idataBANK1
   922     07FC                     __pidataBANK1:
   923                           
   924                           ;initializer for _COM
   925     07FC  3427               	retlw	39
   926     07FD  3430               	retlw	48
   927     07FE  3427               	retlw	39
   928     07FF  343A               	retlw	58
   929                           
   930                           	psect	idataBANK2
   931     1543                     __pidataBANK2:
   932                           
   933                           ;initializer for INTERRUPT_InterruptManager@plb
   934     1543  344E               	retlw	78
   935     1544  3400               	retlw	0
   936                           
   937                           ;initializer for _LOAD_CELL
   938     1545  347B               	retlw	123
   939     1546  3427               	retlw	39
   940     1547  3477               	retlw	119
   941     1548  3427               	retlw	39
   942     1549  343A               	retlw	58
   943     154A  3427               	retlw	39
   944     154B  344E               	retlw	78
   945     154C  344E               	retlw	78
   946     154D  344E               	retlw	78
   947     154E  344E               	retlw	78
   948     154F  344E               	retlw	78
   949     1550  344E               	retlw	78
   950     1551  344E               	retlw	78
   951     1552  344E               	retlw	78
   952     1553  3427               	retlw	39
   953     1554  347D               	retlw	125
   954                           
   955                           ;initializer for _VEML7700
   956     1555  347B               	retlw	123
   957     1556  3427               	retlw	39
   958     1557  346C               	retlw	108
   959     1558  3427               	retlw	39
   960     1559  343A               	retlw	58
   961     155A  3427               	retlw	39
   962     155B  344E               	retlw	78
   963     155C  344E               	retlw	78
   964     155D  344E               	retlw	78
   965     155E  344E               	retlw	78
   966     155F  344E               	retlw	78
   967     1560  3427               	retlw	39
   968     1561  347D               	retlw	125
   969                           
   970                           ;initializer for _DS18B
   971     1562  347B               	retlw	123
   972     1563  3427               	retlw	39
   973     1564  3454               	retlw	84
   974     1565  3427               	retlw	39
   975     1566  343A               	retlw	58
   976     1567  3427               	retlw	39
   977     1568  344E               	retlw	78
   978     1569  344E               	retlw	78
   979     156A  344E               	retlw	78
   980     156B  344E               	retlw	78
   981     156C  3427               	retlw	39
   982     156D  347D               	retlw	125
   983                           
   984                           	psect	idataBANK3
   985     144B                     __pidataBANK3:
   986                           
   987                           ;initializer for _DHTS
   988     144B  347B               	retlw	123
   989     144C  3427               	retlw	39
   990     144D  3468               	retlw	104
   991     144E  3427               	retlw	39
   992     144F  343A               	retlw	58
   993     1450  3427               	retlw	39
   994     1451  344E               	retlw	78
   995     1452  344E               	retlw	78
   996     1453  344E               	retlw	78
   997     1454  344E               	retlw	78
   998     1455  3427               	retlw	39
   999     1456  342C               	retlw	44
  1000     1457  3427               	retlw	39
  1001     1458  3474               	retlw	116
  1002     1459  3427               	retlw	39
  1003     145A  343A               	retlw	58
  1004     145B  3427               	retlw	39
  1005     145C  344E               	retlw	78
  1006     145D  344E               	retlw	78
  1007     145E  344E               	retlw	78
  1008     145F  344E               	retlw	78
  1009     1460  3427               	retlw	39
  1010     1461  347D               	retlw	125
  1011     001C                     _T2CON	set	28
  1012     0018                     _T1CON	set	24
  1013     000B                     _INTCON	set	11
  1014     000D                     _PORTB	set	13
  1015     001A                     _TMR2	set	26
  1016     0011                     _PIR1bits	set	17
  1017     000B                     _INTCONbits	set	11
  1018     0003                     _STATUSbits	set	3
  1019     000E                     _PORTC	set	14
  1020     000C                     _PORTA	set	12
  1021     00E2                     _TMR2ON	set	226
  1022     0089                     _TMR2IF	set	137
  1023     008C                     _TXIF	set	140
  1024     008D                     _RCIF	set	141
  1025     006F                     _RB7	set	111
  1026     0068                     _RB0	set	104
  1027     0065                     _RA5	set	101
  1028     006C                     _RB4	set	108
  1029     0067                     _RA7	set	103
  1030     006B                     _RB3	set	107
  1031     0066                     _RA6	set	102
  1032     006D                     _RB5	set	109
  1033     0070                     _RC0	set	112
  1034     0069                     _RB1	set	105
  1035     0064                     _RA4	set	100
  1036     006A                     _RB2	set	106
  1037     0063                     _RA3	set	99
  1038     0075                     _RC5	set	117
  1039     0062                     _RA2	set	98
  1040     0072                     _RC2	set	114
  1041     0061                     _RA1	set	97
  1042     0071                     _RC1	set	113
  1043     0060                     _RA0	set	96
  1044     0098                     _OSCTUNE	set	152
  1045     0099                     _OSCCON	set	153
  1046     0097                     _WDTCON	set	151
  1047     008D                     _TRISB	set	141
  1048     0091                     _PIE1bits	set	145
  1049     008E                     _TRISC	set	142
  1050     008C                     _TRISA	set	140
  1051     0116                     _BORCON	set	278
  1052     011D                     _APFCON	set	285
  1053     010D                     _LATB	set	269
  1054     010E                     _LATC	set	270
  1055     010C                     _LATA	set	268
  1056     0191                     _EEADR	set	401
  1057     019E                     _TXSTA	set	414
  1058     019D                     _RCSTA	set	413
  1059     019B                     _SPBRG	set	411
  1060     019F                     _BAUDCON	set	415
  1061     018C                     _ANSELA	set	396
  1062     018D                     _ANSELB	set	397
  1063     0199                     _RCREG	set	409
  1064     019A                     _TXREG	set	410
  1065     0196                     _EECON2	set	406
  1066     0193                     _EEDATA	set	403
  1067     0195                     _EECON1bits	set	405
  1068     0195                     _EECON1	set	405
  1069     0215                     _SSPCON1bits	set	533
  1070     0212                     _SSPADD	set	530
  1071     0216                     _SSPCON2	set	534
  1072     0215                     _SSPCON1	set	533
  1073     0214                     _SSPSTAT	set	532
  1074     020D                     _WPUB	set	525
  1075     0210                     _WPUE	set	528
  1076     0216                     _SSPCON2bits	set	534
  1077     0211                     _SSPBUF	set	529
  1078                           
  1079                           	psect	stringtext1
  1080     1800                     __pstringtext1:
  1081     1800                     STR_1:
  1082     1800  3425               	retlw	37	;'%'
  1083     1801  3475               	retlw	117	;'u'
  1084     1802  3400               	retlw	0
  1085                           
  1086                           	psect	stringtext2
  1087     0000                     __pstringtext2:
  1088     1800                     
  1089                           	psect	cinit
  1090     025B                     start_initialization:	
  1091                           ; #config settings
  1092                           
  1093     025B                     __initialization:
  1094                           
  1095                           ; Initialize objects allocated to BANK1
  1096     025B  30FC               	movlw	low __pidataBANK1
  1097     025C  0084               	movwf	4
  1098     025D  3087               	movlw	(high __pidataBANK1)| (0+128)
  1099     025E  0085               	movwf	5
  1100     025F  30EC               	movlw	low __pdataBANK1
  1101     0260  0086               	movwf	6
  1102     0261  3000               	movlw	high __pdataBANK1
  1103     0262  0087               	movwf	7
  1104     0263  3004               	movlw	4
  1105     0264  3187  27F6  3182   	fcall	init_ram
  1106                           
  1107                           ; Initialize objects allocated to BANK2
  1108     0267  3043               	movlw	low __pidataBANK2
  1109     0268  0084               	movwf	4
  1110     0269  3095               	movlw	(high __pidataBANK2)| (0+128)
  1111     026A  0085               	movwf	5
  1112     026B  3020               	movlw	low __pdataBANK2
  1113     026C  0086               	movwf	6
  1114     026D  3001               	movlw	high __pdataBANK2
  1115     026E  0087               	movwf	7
  1116     026F  302B               	movlw	43
  1117     0270  3187  27F6  3182   	fcall	init_ram
  1118                           
  1119                           ; Initialize objects allocated to BANK3
  1120     0273  304B               	movlw	low __pidataBANK3
  1121     0274  0084               	movwf	4
  1122     0275  3094               	movlw	(high __pidataBANK3)| (0+128)
  1123     0276  0085               	movwf	5
  1124     0277  30C0               	movlw	low __pdataBANK3
  1125     0278  0086               	movwf	6
  1126     0279  3001               	movlw	high __pdataBANK3
  1127     027A  0087               	movwf	7
  1128     027B  3017               	movlw	23
  1129     027C  3187  27F6  3182   	fcall	init_ram
  1130                           
  1131                           ; Clear objects allocated to COMMON
  1132     027F  01FC               	clrf	__pbssCOMMON& (0+127)
  1133     0280  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1134                           
  1135                           ; Clear objects allocated to BANK1
  1136     0281  30A0               	movlw	low __pbssBANK1
  1137     0282  0084               	movwf	4
  1138     0283  3000               	movlw	high __pbssBANK1
  1139     0284  0085               	movwf	5
  1140     0285  302D               	movlw	45
  1141     0286  3188  2010  3182   	fcall	clear_ram0
  1142                           
  1143                           ; Clear objects allocated to BANK2
  1144     0289  304B               	movlw	low __pbssBANK2
  1145     028A  0084               	movwf	4
  1146     028B  3001               	movlw	high __pbssBANK2
  1147     028C  0085               	movwf	5
  1148     028D  3025               	movlw	37
  1149     028E  3188  2010  3182   	fcall	clear_ram0
  1150                           
  1151                           ; Clear objects allocated to BANK3
  1152     0291  30A0               	movlw	low __pbssBANK3
  1153     0292  0084               	movwf	4
  1154     0293  3001               	movlw	high __pbssBANK3
  1155     0294  0085               	movwf	5
  1156     0295  3020               	movlw	32
  1157     0296  3188  2010  3182   	fcall	clear_ram0
  1158     0299                     end_of_initialization:	
  1159                           ;End of C runtime variable initialization code
  1160                           
  1161     0299                     __end_of__initialization:
  1162     0299  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1163     029A  0020               	movlb	0
  1164     029B  3182  2A9D         	ljmp	_main	;jump to C main() function
  1165                           
  1166                           	psect	bssCOMMON
  1167     007C                     __pbssCOMMON:
  1168     007C                     INTERRUPT_InterruptManager@h:
  1169     007C                     	ds	1
  1170     007D                     TXsend@i:
  1171     007D                     	ds	1
  1172                           
  1173                           	psect	bssBANK1
  1174     00A0                     __pbssBANK1:
  1175     00A0                     _prec:
  1176     00A0                     	ds	2
  1177     00A2                     _meddone:
  1178     00A2                     	ds	2
  1179     00A4                     _Temp:
  1180     00A4                     	ds	2
  1181     00A6                     _flags:
  1182     00A6                     	ds	1
  1183     00A7                     _macro_delay:
  1184     00A7                     	ds	1
  1185     00A8                     DHT22READ@check:
  1186     00A8                     	ds	1
  1187     00A9                     INTERRUPT_InterruptManager@sspo:
  1188     00A9                     	ds	1
  1189     00AA                     INTERRUPT_InterruptManager@rp:
  1190     00AA                     	ds	1
  1191     00AB                     INTERRUPT_InterruptManager@i2cstep:
  1192     00AB                     	ds	1
  1193     00AC                     i2cread3byte@si2:
  1194     00AC                     	ds	1
  1195     00AD                     i2creadbyte@si2:
  1196     00AD                     	ds	1
  1197     00AE                     i2cwritebyte@si3:
  1198     00AE                     	ds	1
  1199     00AF                     i2cwrite2byte@si3:
  1200     00AF                     	ds	1
  1201     00B0                     _act_com:
  1202     00B0                     	ds	1
  1203     00B1                     _i2busy:
  1204     00B1                     	ds	1
  1205     00B2                     _i2select:
  1206     00B2                     	ds	1
  1207     00B3                     _i2cqt:
  1208     00B3                     	ds	1
  1209     00B4                     _i2cena:
  1210     00B4                     	ds	1
  1211     00B5                     _i2cfinish:
  1212     00B5                     	ds	1
  1213     00B6                     _i2cbgin:
  1214     00B6                     	ds	1
  1215     00B7                     _endi2c:
  1216     00B7                     	ds	1
  1217     00B8                     _med_sl:
  1218     00B8                     	ds	1
  1219     00B9                     _Lectura:
  1220     00B9                     	ds	1
  1221     00BA                     _TOUT:
  1222     00BA                     	ds	1
  1223     00BB                     _cs:
  1224     00BB                     	ds	1
  1225     00BC                     _port_save:
  1226     00BC                     	ds	1
  1227     00BD                     _sport:
  1228     00BD                     	ds	10
  1229     00C7                     _tempar:
  1230     00C7                     	ds	4
  1231     00CB                     _Lum:
  1232     00CB                     	ds	2
  1233                           
  1234                           	psect	dataBANK1
  1235     00EC                     __pdataBANK1:
  1236     00EC                     _COM:
  1237     00EC                     	ds	4
  1238                           
  1239                           	psect	bssBANK2
  1240     014B                     __pbssBANK2:
  1241     014B                     _width:
  1242     014B                     	ds	2
  1243     014D                     DHTRESULT@hum:
  1244     014D                     	ds	2
  1245     014F                     DHTRESULT@temp:
  1246     014F                     	ds	2
  1247     0151                     _debug:
  1248     0151                     	ds	2
  1249     0153                     _KG:
  1250     0153                     	ds	8
  1251     015B                     _LUX:
  1252     015B                     	ds	5
  1253     0160                     _TEMPDS:
  1254     0160                     	ds	4
  1255     0164                     _humar:
  1256     0164                     	ds	4
  1257     0168                     _dhtresult:
  1258     0168                     	ds	4
  1259     016C                     _weight:
  1260     016C                     	ds	4
  1261                           
  1262                           	psect	dataBANK2
  1263     0120                     __pdataBANK2:
  1264     0120                     INTERRUPT_InterruptManager@plb:
  1265     0120                     	ds	2
  1266     0122                     _LOAD_CELL:
  1267     0122                     	ds	16
  1268     0132                     _VEML7700:
  1269     0132                     	ds	13
  1270     013F                     _DS18B:
  1271     013F                     	ds	12
  1272                           
  1273                           	psect	bssBANK3
  1274     01A0                     __pbssBANK3:
  1275     01A0                     _dbuf:
  1276     01A0                     	ds	32
  1277                           
  1278                           	psect	dataBANK3
  1279     01C0                     __pdataBANK3:
  1280     01C0                     _DHTS:
  1281     01C0                     	ds	23
  1282                           
  1283                           	psect	inittext
  1284     07F6                     init_ram:
  1285     07F6  00FE               	movwf	btemp
  1286     07F7                     initloop:
  1287     07F7  0012               	moviw fsr0++
  1288     07F8  001E               	movwi fsr1++
  1289     07F9  0BFE               	decfsz	btemp,f
  1290     07FA  2FF7               	goto	initloop
  1291     07FB  3400               	retlw	0
  1292                           
  1293                           	psect	clrtext
  1294     0810                     clear_ram0:	
  1295                           ;	Called with FSR0 containing the base address, and
  1296                           ;	WREG with the size to clear
  1297                           
  1298     0810  0064               	clrwdt	;clear the watchdog before getting into this loop
  1299     0811                     clrloop0:
  1300     0811  0180               	clrf	0	;clear RAM location pointed to by FSR
  1301     0812  3101               	addfsr 0,1
  1302     0813  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1303     0814  2811               	goto	clrloop0	;have we reached the end yet?
  1304     0815  3400               	retlw	0	;all done for this memory range, return
  1305                           
  1306                           	psect	cstackBANK1
  1307     00CD                     __pcstackBANK1:
  1308     00CD                     ?_sprintf:
  1309     00CD                     sprintf@s:	
  1310                           ; 2 bytes @ 0x0
  1311                           
  1312                           
  1313                           ; 2 bytes @ 0x0
  1314     00CD                     	ds	2
  1315     00CF                     sprintf@fmt:
  1316                           
  1317                           ; 2 bytes @ 0x2
  1318     00CF                     	ds	6
  1319     00D5                     sprintf@ap:
  1320                           
  1321                           ; 1 bytes @ 0x8
  1322     00D5                     	ds	1
  1323     00D6                     sprintf@f:
  1324                           
  1325                           ; 10 bytes @ 0x9
  1326     00D6                     	ds	10
  1327     00E0                     ?_DHTRESULT:
  1328     00E0                     ?_DS18B20_Read:	
  1329                           ; 1 bytes @ 0x13
  1330                           
  1331     00E0                     DHTRESULT@tris:	
  1332                           ; 1 bytes @ 0x13
  1333                           
  1334     00E0                     i2c_Read@com:	
  1335                           ; 1 bytes @ 0x13
  1336                           
  1337     00E0                     DS18B20_Read@TRIS:	
  1338                           ; 1 bytes @ 0x13
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0x13
  1342     00E0                     	ds	1
  1343     00E1                     DHTRESULT@conector:
  1344     00E1                     i2c_Read@j:	
  1345                           ; 1 bytes @ 0x14
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0x14
  1349     00E1                     	ds	1
  1350     00E2                     DHTRESULT@TOUT:
  1351     00E2                     DS18B20_Read@PORT:	
  1352                           ; 1 bytes @ 0x15
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0x15
  1356     00E2                     	ds	1
  1357     00E3                     DHTRESULT@dht:
  1358     00E3                     i2c_Read@j_361:	
  1359                           ; 1 bytes @ 0x16
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x16
  1363     00E3                     	ds	1
  1364     00E4                     DHTRESULT@COM:
  1365     00E4                     DS18B20_Read@LAT:	
  1366                           ; 1 bytes @ 0x17
  1367                           
  1368                           
  1369                           ; 2 bytes @ 0x17
  1370     00E4                     	ds	1
  1371     00E5                     DHTRESULT@port:
  1372                           
  1373                           ; 1 bytes @ 0x18
  1374     00E5                     	ds	1
  1375     00E6                     DS18B20_Read@PIN:
  1376     00E6                     DHTRESULT@j:	
  1377                           ; 1 bytes @ 0x19
  1378                           
  1379                           
  1380                           ; 2 bytes @ 0x19
  1381     00E6                     	ds	1
  1382     00E7                     DS18B20_Read@entry:
  1383                           
  1384                           ; 1 bytes @ 0x1A
  1385     00E7                     	ds	1
  1386     00E8                     ??_main:
  1387                           
  1388                           ; 1 bytes @ 0x1B
  1389     00E8                     	ds	2
  1390     00EA                     main@i_379:
  1391                           
  1392                           ; 1 bytes @ 0x1D
  1393     00EA                     	ds	1
  1394     00EB                     main@i:
  1395                           
  1396                           ; 1 bytes @ 0x1E
  1397     00EB                     	ds	1
  1398                           
  1399                           	psect	cstackCOMMON
  1400     0070                     __pcstackCOMMON:
  1401     0070                     ?_Sys_Init:
  1402     0070                     ?_putch:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405     0070                     ?_i2cwrite2byte:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408     0070                     ?_i2cwritebyte:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411     0070                     ?_i2c_Read:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0070                     ?_port_config:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0070                     ?_main:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0070                     ?_TXsend:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0070                     ?_INTERRUPT_InterruptManager:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0070                     ?_Pin_init:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0070                     ?_Reg_init:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0070                     ?_i2creadbyte:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0070                     ?_i2cread3byte:	
  1436                           ; 2 bytes @ 0x0
  1437                           
  1438     0070                     i2cwrite2byte@dir:	
  1439                           ; 4 bytes @ 0x0
  1440                           
  1441     0070                     i2cwritebyte@dir:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0070                     i2creadbyte@dir:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447     0070                     i2cread3byte@dir:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0070                     putch@c:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453     0070                     TXsend@word:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456                           
  1457                           ; 2 bytes @ 0x0
  1458     0070                     	ds	1
  1459     0071                     i2cwritebyte@data:
  1460     0071                     i2creadbyte@value:	
  1461                           ; 1 bytes @ 0x1
  1462                           
  1463     0071                     i2cread3byte@value:	
  1464                           ; 1 bytes @ 0x1
  1465                           
  1466     0071                     i2cwrite2byte@data:	
  1467                           ; 1 bytes @ 0x1
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x1
  1471     0071                     	ds	1
  1472     0072                     ??_i2cwritebyte:
  1473     0072                     ??_i2creadbyte:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476     0072                     ??_i2cread3byte:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479     0072                     TXsend@size:	
  1480                           ; 1 bytes @ 0x2
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x2
  1484     0072                     	ds	1
  1485     0073                     ??_i2cwrite2byte:
  1486     0073                     ??_TXsend:	
  1487                           ; 1 bytes @ 0x3
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x3
  1491     0073                     	ds	1
  1492     0074                     i2cwritebyte@add:
  1493                           
  1494                           ; 1 bytes @ 0x4
  1495     0074                     	ds	1
  1496     0075                     i2cwrite2byte@add:
  1497     0075                     i2creadbyte@add:	
  1498                           ; 1 bytes @ 0x5
  1499                           
  1500                           
  1501                           ; 1 bytes @ 0x5
  1502     0075                     	ds	4
  1503     0079                     i2cread3byte@add:
  1504                           
  1505                           ; 1 bytes @ 0x9
  1506     0079                     	ds	1
  1507     007A                     ??_INTERRUPT_InterruptManager:
  1508                           
  1509                           ; 1 bytes @ 0xA
  1510     007A                     	ds	2
  1511                           
  1512                           	psect	cstackBANK0
  1513     0020                     __pcstackBANK0:
  1514     0020                     ??_putch:
  1515     0020                     ??_port_config:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     0020                     ??_Pin_init:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     0020                     ??_Reg_init:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524     0020                     ?_start_signal:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527     0020                     ?_check_response:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530     0020                     ?_read_byte:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533     0020                     ?_read_OW:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536     0020                     ?_OW_write_bit:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539     0020                     ?_fputc:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542     0020                     ?___lodiv:	
  1543                           ; 2 bytes @ 0x0
  1544                           
  1545     0020                     ?___lomod:	
  1546                           ; 8 bytes @ 0x0
  1547                           
  1548     0020                     start_signal@tris:	
  1549                           ; 8 bytes @ 0x0
  1550                           
  1551     0020                     check_response@tris:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554     0020                     read_byte@tris:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557     0020                     read_OW@TRIS:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560     0020                     OW_write_bit@TRIS:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563     0020                     fputc@c:	
  1564                           ; 2 bytes @ 0x0
  1565                           
  1566     0020                     ___lodiv@divisor:	
  1567                           ; 2 bytes @ 0x0
  1568                           
  1569     0020                     ___lomod@divisor:	
  1570                           ; 8 bytes @ 0x0
  1571                           
  1572                           
  1573                           ; 8 bytes @ 0x0
  1574     0020                     	ds	1
  1575     0021                     ??_Sys_Init:
  1576     0021                     ??_start_signal:	
  1577                           ; 1 bytes @ 0x1
  1578                           
  1579     0021                     ??_read_byte:	
  1580                           ; 1 bytes @ 0x1
  1581                           
  1582     0021                     port_config@stype:	
  1583                           ; 1 bytes @ 0x1
  1584                           
  1585     0021                     check_response@TOUT:	
  1586                           ; 1 bytes @ 0x1
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x1
  1590     0021                     	ds	1
  1591     0022                     ??_check_response:
  1592     0022                     start_signal@port:	
  1593                           ; 1 bytes @ 0x2
  1594                           
  1595     0022                     check_response@port:	
  1596                           ; 1 bytes @ 0x2
  1597                           
  1598     0022                     fputc@fp:	
  1599                           ; 1 bytes @ 0x2
  1600                           
  1601     0022                     read_OW@PORT:	
  1602                           ; 1 bytes @ 0x2
  1603                           
  1604     0022                     OW_write_bit@LAT:	
  1605                           ; 2 bytes @ 0x2
  1606                           
  1607                           
  1608                           ; 2 bytes @ 0x2
  1609     0022                     	ds	1
  1610     0023                     ??_fputc:
  1611     0023                     read_byte@num:	
  1612                           ; 1 bytes @ 0x3
  1613                           
  1614                           
  1615                           ; 1 bytes @ 0x3
  1616     0023                     	ds	1
  1617     0024                     read_byte@port:
  1618     0024                     read_OW@PIN:	
  1619                           ; 1 bytes @ 0x4
  1620                           
  1621     0024                     OW_write_bit@PIN:	
  1622                           ; 1 bytes @ 0x4
  1623                           
  1624                           
  1625                           ; 1 bytes @ 0x4
  1626     0024                     	ds	1
  1627     0025                     ??_read_OW:
  1628     0025                     ??_OW_write_bit:	
  1629                           ; 1 bytes @ 0x5
  1630                           
  1631     0025                     read_byte@i:	
  1632                           ; 1 bytes @ 0x5
  1633                           
  1634                           
  1635                           ; 1 bytes @ 0x5
  1636     0025                     	ds	1
  1637     0026                     ?_DHT22READ:
  1638     0026                     DHT22READ@tris:	
  1639                           ; 1 bytes @ 0x6
  1640                           
  1641     0026                     read_OW@read_data:	
  1642                           ; 1 bytes @ 0x6
  1643                           
  1644     0026                     OW_write_bit@write_bit:	
  1645                           ; 1 bytes @ 0x6
  1646                           
  1647                           
  1648                           ; 1 bytes @ 0x6
  1649     0026                     	ds	1
  1650     0027                     ?_OW_reset_pulse:
  1651     0027                     ?_OW_write_byte:	
  1652                           ; 1 bytes @ 0x7
  1653                           
  1654     0027                     ?_OW_read_bit:	
  1655                           ; 1 bytes @ 0x7
  1656                           
  1657     0027                     DHT22READ@entry:	
  1658                           ; 1 bytes @ 0x7
  1659                           
  1660     0027                     OW_reset_pulse@TRIS:	
  1661                           ; 1 bytes @ 0x7
  1662                           
  1663     0027                     OW_read_bit@TRIS:	
  1664                           ; 2 bytes @ 0x7
  1665                           
  1666     0027                     OW_write_byte@TRIS:	
  1667                           ; 2 bytes @ 0x7
  1668                           
  1669                           
  1670                           ; 2 bytes @ 0x7
  1671     0027                     	ds	1
  1672     0028                     ?_fputs:
  1673     0028                     DHT22READ@TOUT:	
  1674                           ; 2 bytes @ 0x8
  1675                           
  1676     0028                     fputs@fp:	
  1677                           ; 1 bytes @ 0x8
  1678                           
  1679     0028                     ___lodiv@dividend:	
  1680                           ; 1 bytes @ 0x8
  1681                           
  1682     0028                     ___lomod@dividend:	
  1683                           ; 8 bytes @ 0x8
  1684                           
  1685                           
  1686                           ; 8 bytes @ 0x8
  1687     0028                     	ds	1
  1688     0029                     ??_fputs:
  1689     0029                     DHT22READ@dhtresult:	
  1690                           ; 1 bytes @ 0x9
  1691                           
  1692     0029                     OW_reset_pulse@PORT:	
  1693                           ; 1 bytes @ 0x9
  1694                           
  1695     0029                     OW_read_bit@PORT:	
  1696                           ; 2 bytes @ 0x9
  1697                           
  1698     0029                     OW_write_byte@LAT:	
  1699                           ; 2 bytes @ 0x9
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x9
  1703     0029                     	ds	1
  1704     002A                     DHT22READ@COM:
  1705                           
  1706                           ; 1 bytes @ 0xA
  1707     002A                     	ds	1
  1708     002B                     ??_DHT22READ:
  1709     002B                     DHT22READ@port:	
  1710                           ; 1 bytes @ 0xB
  1711                           
  1712     002B                     OW_write_byte@PIN:	
  1713                           ; 1 bytes @ 0xB
  1714                           
  1715     002B                     fputs@s:	
  1716                           ; 1 bytes @ 0xB
  1717                           
  1718     002B                     OW_reset_pulse@LAT:	
  1719                           ; 1 bytes @ 0xB
  1720                           
  1721     002B                     OW_read_bit@LAT:	
  1722                           ; 2 bytes @ 0xB
  1723                           
  1724                           
  1725                           ; 2 bytes @ 0xB
  1726     002B                     	ds	1
  1727     002C                     ??_OW_write_byte:
  1728     002C                     fputs@c:	
  1729                           ; 1 bytes @ 0xC
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0xC
  1733     002C                     	ds	1
  1734     002D                     OW_reset_pulse@PIN:
  1735     002D                     OW_read_bit@PIN:	
  1736                           ; 1 bytes @ 0xD
  1737                           
  1738     002D                     OW_write_byte@write_data:	
  1739                           ; 1 bytes @ 0xD
  1740                           
  1741     002D                     fputs@i:	
  1742                           ; 1 bytes @ 0xD
  1743                           
  1744                           
  1745                           ; 2 bytes @ 0xD
  1746     002D                     	ds	1
  1747     002E                     ??_OW_reset_pulse:
  1748     002E                     ??_OW_read_bit:	
  1749                           ; 1 bytes @ 0xE
  1750                           
  1751     002E                     OW_write_byte@loop:	
  1752                           ; 1 bytes @ 0xE
  1753                           
  1754                           
  1755                           ; 1 bytes @ 0xE
  1756     002E                     	ds	1
  1757     002F                     ?_pad:
  1758     002F                     OW_read_bit@read_data:	
  1759                           ; 1 bytes @ 0xF
  1760                           
  1761     002F                     pad@buf:	
  1762                           ; 1 bytes @ 0xF
  1763                           
  1764                           
  1765                           ; 1 bytes @ 0xF
  1766     002F                     	ds	1
  1767     0030                     ?_OW_read_byte:
  1768     0030                     ??___lodiv:	
  1769                           ; 1 bytes @ 0x10
  1770                           
  1771     0030                     ??___lomod:	
  1772                           ; 1 bytes @ 0x10
  1773                           
  1774     0030                     OW_read_byte@TRIS:	
  1775                           ; 1 bytes @ 0x10
  1776                           
  1777     0030                     pad@p:	
  1778                           ; 2 bytes @ 0x10
  1779                           
  1780                           
  1781                           ; 2 bytes @ 0x10
  1782     0030                     	ds	1
  1783     0031                     ___lomod@counter:
  1784     0031                     ___lodiv@quotient:	
  1785                           ; 1 bytes @ 0x11
  1786                           
  1787                           
  1788                           ; 8 bytes @ 0x11
  1789     0031                     	ds	1
  1790     0032                     ??_pad:
  1791     0032                     OW_read_byte@PORT:	
  1792                           ; 1 bytes @ 0x12
  1793                           
  1794                           
  1795                           ; 2 bytes @ 0x12
  1796     0032                     	ds	1
  1797     0033                     pad@i:
  1798                           
  1799                           ; 2 bytes @ 0x13
  1800     0033                     	ds	1
  1801     0034                     OW_read_byte@LAT:
  1802                           
  1803                           ; 2 bytes @ 0x14
  1804     0034                     	ds	1
  1805     0035                     pad@w:
  1806                           
  1807                           ; 2 bytes @ 0x15
  1808     0035                     	ds	1
  1809     0036                     OW_read_byte@PIN:
  1810                           
  1811                           ; 1 bytes @ 0x16
  1812     0036                     	ds	1
  1813     0037                     ??_OW_read_byte:
  1814     0037                     pad@fp:	
  1815                           ; 1 bytes @ 0x17
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0x17
  1819     0037                     	ds	1
  1820     0038                     OW_read_byte@result:
  1821                           
  1822                           ; 1 bytes @ 0x18
  1823     0038                     	ds	1
  1824     0039                     OW_read_byte@loop:
  1825     0039                     ___lodiv@counter:	
  1826                           ; 1 bytes @ 0x19
  1827                           
  1828                           
  1829                           ; 1 bytes @ 0x19
  1830     0039                     	ds	1
  1831     003A                     ?_utoa:
  1832     003A                     utoa@d:	
  1833                           ; 1 bytes @ 0x1A
  1834                           
  1835                           
  1836                           ; 8 bytes @ 0x1A
  1837     003A                     	ds	8
  1838     0042                     ??_utoa:
  1839                           
  1840                           ; 1 bytes @ 0x22
  1841     0042                     	ds	1
  1842     0043                     utoa@fp:
  1843                           
  1844                           ; 1 bytes @ 0x23
  1845     0043                     	ds	1
  1846     0044                     utoa@w:
  1847                           
  1848                           ; 2 bytes @ 0x24
  1849     0044                     	ds	2
  1850     0046                     utoa@p:
  1851                           
  1852                           ; 2 bytes @ 0x26
  1853     0046                     	ds	2
  1854     0048                     utoa@n:
  1855                           
  1856                           ; 8 bytes @ 0x28
  1857     0048                     	ds	8
  1858     0050                     utoa@i:
  1859                           
  1860                           ; 2 bytes @ 0x30
  1861     0050                     	ds	2
  1862     0052                     ?_vfpfcnvrt:
  1863     0052                     vfpfcnvrt@fmt:	
  1864                           ; 1 bytes @ 0x32
  1865                           
  1866                           
  1867                           ; 1 bytes @ 0x32
  1868     0052                     	ds	1
  1869     0053                     vfpfcnvrt@ap:
  1870                           
  1871                           ; 1 bytes @ 0x33
  1872     0053                     	ds	1
  1873     0054                     ??_vfpfcnvrt:
  1874                           
  1875                           ; 1 bytes @ 0x34
  1876     0054                     	ds	4
  1877     0058                     vfpfcnvrt@convarg:
  1878                           
  1879                           ; 8 bytes @ 0x38
  1880     0058                     	ds	8
  1881     0060                     vfpfcnvrt@fp:
  1882                           
  1883                           ; 1 bytes @ 0x40
  1884     0060                     	ds	1
  1885     0061                     vfpfcnvrt@cp:
  1886                           
  1887                           ; 2 bytes @ 0x41
  1888     0061                     	ds	2
  1889     0063                     ?_vfprintf:
  1890     0063                     vfprintf@fmt:	
  1891                           ; 2 bytes @ 0x43
  1892                           
  1893                           
  1894                           ; 2 bytes @ 0x43
  1895     0063                     	ds	2
  1896     0065                     vfprintf@ap:
  1897                           
  1898                           ; 1 bytes @ 0x45
  1899     0065                     	ds	1
  1900     0066                     ??_vfprintf:
  1901                           
  1902                           ; 1 bytes @ 0x46
  1903     0066                     	ds	1
  1904     0067                     vfprintf@fp:
  1905                           
  1906                           ; 1 bytes @ 0x47
  1907     0067                     	ds	1
  1908     0068                     vfprintf@cfmt:
  1909                           
  1910                           ; 2 bytes @ 0x48
  1911     0068                     	ds	2
  1912     006A                     ??_sprintf:
  1913     006A                     ??_DHTRESULT:	
  1914                           ; 1 bytes @ 0x4A
  1915                           
  1916     006A                     ??_DS18B20_Read:	
  1917                           ; 1 bytes @ 0x4A
  1918                           
  1919     006A                     ??_i2c_Read:	
  1920                           ; 1 bytes @ 0x4A
  1921                           
  1922                           
  1923                           ; 1 bytes @ 0x4A
  1924     006A                     	ds	3
  1925     006D                     DS18B20_Read@j:
  1926                           
  1927                           ; 2 bytes @ 0x4D
  1928     006D                     	ds	2
  1929                           
  1930                           	psect	maintext
  1931     029D                     __pmaintext:	
  1932 ;;
  1933 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1934 ;;
  1935 ;; *************** function _main *****************
  1936 ;; Defined at:
  1937 ;;		line 459 in file "main.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  i               1   29[BANK1 ] unsigned char 
  1942 ;;  i               1   30[BANK1 ] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : B1F/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1952 ;;      Params:         0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       2       0       0       0       0       0
  1954 ;;      Temps:          0       0       2       0       0       0       0       0
  1955 ;;      Totals:         0       0       4       0       0       0       0       0
  1956 ;;Total ram usage:        4 bytes
  1957 ;; Hardware stack levels required when called: 11
  1958 ;; This function calls:
  1959 ;;		_DHTRESULT
  1960 ;;		_DS18B20_Read
  1961 ;;		_Sys_Init
  1962 ;;		_i2c_Read
  1963 ;;		_port_config
  1964 ;; This function is called by:
  1965 ;;		Startup code after reset
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969     029D                     _main:	
  1970                           ;psect for function _main
  1971                           
  1972     029D                     l5747:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1975                           
  1976                           
  1977                           ;main.c: 460:     Sys_Init();
  1978     029D  3187  27EF  3182   	fcall	_Sys_Init
  1979     02A0                     l5749:
  1980                           
  1981                           ;main.c: 461:     WDTCON=0x1B;
  1982     02A0  301B               	movlw	27
  1983     02A1  0021               	movlb	1	; select bank1
  1984     02A2  0097               	movwf	23	;volatile
  1985     02A3                     l5751:
  1986                           
  1987                           ;main.c: 462:     for(unsigned char i=0; i<10; i++) {
  1988     02A3  01EB               	clrf	main@i^(0+128)
  1989     02A4                     l5757:
  1990                           
  1991                           ;main.c: 463:         sport[i]= ( EEADR = i, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  1992     02A4  086B               	movf	main@i^(0+128),w
  1993     02A5  00E8               	movwf	??_main^(0+128)
  1994     02A6  01E9               	clrf	(??_main^(0+128)+1)
  1995     02A7  0868               	movf	??_main^(0+128),w
  1996     02A8  0023               	movlb	3	; select bank3
  1997     02A9  0091               	movwf	17	;volatile
  1998     02AA  0021               	movlb	1	; select bank1
  1999     02AB  0869               	movf	(??_main+1)^(0+128),w
  2000     02AC  0023               	movlb	3	; select bank3
  2001     02AD  0092               	movwf	18	;volatile
  2002     02AE                     l5759:
  2003     02AE  303F               	movlw	63
  2004     02AF  0021               	movlb	1	; select bank1
  2005     02B0  00E8               	movwf	??_main^(0+128)
  2006     02B1  0868               	movf	??_main^(0+128),w
  2007     02B2  0023               	movlb	3	; select bank3
  2008     02B3  0595               	andwf	21,f	;volsfr
  2009     02B4                     l5761:
  2010     02B4  1415               	bsf	21,0	;volsfr
  2011     02B5                     l5763:
  2012     02B5  0021               	movlb	1	; select bank1
  2013     02B6  086B               	movf	main@i^(0+128),w
  2014     02B7  3EBD               	addlw	(low (_sport| 0))& (0+255)
  2015     02B8  0086               	movwf	6
  2016     02B9  0187               	clrf	7
  2017     02BA  0023               	movlb	3	; select bank3
  2018     02BB  0813               	movf	19,w	;volatile
  2019     02BC  0081               	movwf	1
  2020     02BD                     l5765:
  2021                           
  2022                           ;main.c: 464:         if(sport[i]>='3') i2cqt++;
  2023     02BD  0021               	movlb	1	; select bank1
  2024     02BE  086B               	movf	main@i^(0+128),w
  2025     02BF  3EBD               	addlw	(low (_sport| 0))& (0+255)
  2026     02C0  0086               	movwf	6
  2027     02C1  0187               	clrf	7
  2028     02C2  3033               	movlw	51
  2029     02C3  0201               	subwf	1,w
  2030     02C4  1C03               	skipc
  2031     02C5  2AC7               	goto	u4551
  2032     02C6  2AC8               	goto	u4550
  2033     02C7                     u4551:
  2034     02C7  2ACC               	goto	l302
  2035     02C8                     u4550:
  2036     02C8                     l5767:
  2037     02C8  3001               	movlw	1
  2038     02C9  00E8               	movwf	??_main^(0+128)
  2039     02CA  0868               	movf	??_main^(0+128),w
  2040     02CB  07B3               	addwf	_i2cqt^(0+128),f
  2041     02CC                     l302:
  2042                           
  2043                           ;main.c: 465:     }
  2044     02CC  3001               	movlw	1
  2045     02CD  00E8               	movwf	??_main^(0+128)
  2046     02CE  0868               	movf	??_main^(0+128),w
  2047     02CF  07EB               	addwf	main@i^(0+128),f
  2048     02D0                     l5769:
  2049     02D0  300A               	movlw	10
  2050     02D1  026B               	subwf	main@i^(0+128),w
  2051     02D2  1C03               	skipc
  2052     02D3  2AD5               	goto	u4561
  2053     02D4  2AD6               	goto	u4560
  2054     02D5                     u4561:
  2055     02D5  2AA4               	goto	l5757
  2056     02D6                     u4560:
  2057     02D6                     l5771:
  2058                           
  2059                           ;main.c: 466:     port_config(sport);
  2060     02D6  30BD               	movlw	(low (_sport| 0))& (0+255)
  2061     02D7  318C  2444  3182   	fcall	_port_config
  2062     02DA                     l5773:
  2063                           
  2064                           ;main.c: 467:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2065     02DA  3005               	movlw	5
  2066     02DB  0021               	movlb	1	; select bank1
  2067     02DC  00E9               	movwf	(??_main^(0+128)+1)
  2068     02DD  300F               	movlw	15
  2069     02DE  00E8               	movwf	??_main^(0+128)
  2070     02DF  30F1               	movlw	241
  2071     02E0                     u5787:
  2072     02E0  0B89               	decfsz	9,f
  2073     02E1  2AE0               	goto	u5787
  2074     02E2  0BE8               	decfsz	??_main^(0+128),f
  2075     02E3  2AE0               	goto	u5787
  2076     02E4  0BE9               	decfsz	(??_main^(0+128)+1),f
  2077     02E5  2AE0               	goto	u5787
  2078     02E6                     l303:	
  2079                           ;main.c: 469:     while(1){
  2080                           
  2081     02E6  0064               	clrwdt	;# 
  2082     02E7                     l5775:
  2083                           
  2084                           ;main.c: 471:     if(port_save==1){
  2085     02E7  0021               	movlb	1	; select bank1
  2086     02E8  033C               	decf	_port_save^(0+128),w
  2087     02E9  1D03               	btfss	3,2
  2088     02EA  2AEC               	goto	u4571
  2089     02EB  2AED               	goto	u4570
  2090     02EC                     u4571:
  2091     02EC  2B3F               	goto	l5815
  2092     02ED                     u4570:
  2093     02ED                     l5777:
  2094                           
  2095                           ;main.c: 472:         for(unsigned char i=0; i<10; i++)
  2096     02ED  01EA               	clrf	main@i_379^(0+128)
  2097     02EE                     l308:
  2098     02EE  0023               	movlb	3	; select bank3
  2099     02EF  1895               	btfsc	21,1	;volsfr
  2100     02F0  2AF2               	goto	u4581
  2101     02F1  2AF3               	goto	u4580
  2102     02F2                     u4581:
  2103     02F2  2AEE               	goto	l308
  2104     02F3                     u4580:
  2105     02F3                     l5783:
  2106     02F3  0021               	movlb	1	; select bank1
  2107     02F4  086A               	movf	main@i_379^(0+128),w
  2108     02F5  00E8               	movwf	??_main^(0+128)
  2109     02F6  01E9               	clrf	(??_main^(0+128)+1)
  2110     02F7  0868               	movf	??_main^(0+128),w
  2111     02F8  0023               	movlb	3	; select bank3
  2112     02F9  0091               	movwf	17	;volatile
  2113     02FA  0021               	movlb	1	; select bank1
  2114     02FB  0869               	movf	(??_main+1)^(0+128),w
  2115     02FC  0023               	movlb	3	; select bank3
  2116     02FD  0092               	movwf	18	;volatile
  2117     02FE                     l5785:
  2118     02FE  0021               	movlb	1	; select bank1
  2119     02FF  086A               	movf	main@i_379^(0+128),w
  2120     0300  3EBD               	addlw	(low (_sport| 0))& (0+255)
  2121     0301  0086               	movwf	6
  2122     0302  0187               	clrf	7
  2123     0303  0801               	movf	1,w
  2124     0304  0023               	movlb	3	; select bank3
  2125     0305  0093               	movwf	19	;volatile
  2126     0306                     l5787:
  2127     0306  303F               	movlw	63
  2128     0307  0021               	movlb	1	; select bank1
  2129     0308  00E8               	movwf	??_main^(0+128)
  2130     0309  0868               	movf	??_main^(0+128),w
  2131     030A  0023               	movlb	3	; select bank3
  2132     030B  0595               	andwf	21,f	;volsfr
  2133     030C                     l5789:
  2134     030C  0020               	movlb	0	; select bank0
  2135     030D  1003               	bcf	3,0	;volatile
  2136     030E                     l5791:
  2137     030E  1F8B               	btfss	11,7	;volatile
  2138     030F  2B11               	goto	u4591
  2139     0310  2B12               	goto	u4590
  2140     0311                     u4591:
  2141     0311  2B13               	goto	l311
  2142     0312                     u4590:
  2143     0312                     l5793:
  2144     0312  1403               	bsf	3,0	;volatile
  2145     0313                     l311:
  2146     0313  138B               	bcf	11,7	;volatile
  2147     0314  0023               	movlb	3	; select bank3
  2148     0315  1515               	bsf	21,2	;volsfr
  2149     0316                     l5795:
  2150     0316  3055               	movlw	85
  2151     0317  0096               	movwf	22	;volsfr
  2152     0318  30AA               	movlw	170
  2153     0319  0096               	movwf	22	;volsfr
  2154     031A                     l5797:
  2155     031A  1495               	bsf	21,1	;volsfr
  2156     031B                     l5799:
  2157     031B  1115               	bcf	21,2	;volsfr
  2158     031C                     l5801:
  2159     031C  0020               	movlb	0	; select bank0
  2160     031D  1C03               	btfss	3,0	;volatile
  2161     031E  2B20               	goto	u4601
  2162     031F  2B21               	goto	u4600
  2163     0320                     u4601:
  2164     0320  2B22               	goto	l5805
  2165     0321                     u4600:
  2166     0321                     l5803:
  2167     0321  178B               	bsf	11,7	;volatile
  2168     0322                     l5805:
  2169     0322  3001               	movlw	1
  2170     0323  0021               	movlb	1	; select bank1
  2171     0324  00E8               	movwf	??_main^(0+128)
  2172     0325  0868               	movf	??_main^(0+128),w
  2173     0326  07EA               	addwf	main@i_379^(0+128),f
  2174     0327                     l5807:
  2175     0327  300A               	movlw	10
  2176     0328  026A               	subwf	main@i_379^(0+128),w
  2177     0329  1C03               	skipc
  2178     032A  2B2C               	goto	u4611
  2179     032B  2B2D               	goto	u4610
  2180     032C                     u4611:
  2181     032C  2AEE               	goto	l308
  2182     032D                     u4610:
  2183     032D                     l5809:
  2184                           
  2185                           ;main.c: 474:         port_config(sport);
  2186     032D  30BD               	movlw	(low (_sport| 0))& (0+255)
  2187     032E  318C  2444  3182   	fcall	_port_config
  2188     0331                     l5811:
  2189                           
  2190                           ;main.c: 475:         _delay((unsigned long)((100)*(32000000/4000.0)));
  2191     0331  3005               	movlw	5
  2192     0332  0021               	movlb	1	; select bank1
  2193     0333  00E9               	movwf	(??_main^(0+128)+1)
  2194     0334  300F               	movlw	15
  2195     0335  00E8               	movwf	??_main^(0+128)
  2196     0336  30F1               	movlw	241
  2197     0337                     u5797:
  2198     0337  0B89               	decfsz	9,f
  2199     0338  2B37               	goto	u5797
  2200     0339  0BE8               	decfsz	??_main^(0+128),f
  2201     033A  2B37               	goto	u5797
  2202     033B  0BE9               	decfsz	(??_main^(0+128)+1),f
  2203     033C  2B37               	goto	u5797
  2204     033D                     l5813:
  2205                           
  2206                           ;main.c: 476:         port_save=0;
  2207     033D  0021               	movlb	1	; select bank1
  2208     033E  01BC               	clrf	_port_save^(0+128)
  2209     033F                     l5815:
  2210                           
  2211                           ;main.c: 478:         if(Lectura==1){
  2212     033F  0339               	decf	_Lectura^(0+128),w
  2213     0340  1D03               	btfss	3,2
  2214     0341  2B43               	goto	u4621
  2215     0342  2B44               	goto	u4620
  2216     0343                     u4621:
  2217     0343  2B48               	goto	l5821
  2218     0344                     u4620:
  2219     0344                     l5817:
  2220                           
  2221                           ;main.c: 480:             i2cfinish=0;
  2222     0344  01B5               	clrf	_i2cfinish^(0+128)
  2223     0345                     l5819:
  2224                           
  2225                           ;main.c: 481:             i2cbgin=1;
  2226     0345  01B6               	clrf	_i2cbgin^(0+128)
  2227     0346  0AB6               	incf	_i2cbgin^(0+128),f
  2228                           
  2229                           ;main.c: 482:             Lectura=0;
  2230     0347  01B9               	clrf	_Lectura^(0+128)
  2231     0348                     l5821:
  2232                           
  2233                           ;main.c: 485:     i2c_Read(act_com);
  2234     0348  0830               	movf	_act_com^(0+128),w
  2235     0349  318D  2521  3182   	fcall	_i2c_Read
  2236     034C                     l5823:
  2237                           
  2238                           ;main.c: 501:     if(((meddone & 0x01)>0)){
  2239     034C  0021               	movlb	1	; select bank1
  2240     034D  1C22               	btfss	_meddone^(0+128),0
  2241     034E  2B50               	goto	u4631
  2242     034F  2B51               	goto	u4630
  2243     0350                     u4631:
  2244     0350  2BCB               	goto	l5875
  2245     0351                     u4630:
  2246     0351                     l5825:
  2247                           
  2248                           ;main.c: 502:         if(sport[0]=='1' && i2busy==0){
  2249     0351  3031               	movlw	49
  2250     0352  063D               	xorwf	_sport^(0+128),w
  2251     0353  1D03               	btfss	3,2
  2252     0354  2B56               	goto	u4641
  2253     0355  2B57               	goto	u4640
  2254     0356                     u4641:
  2255     0356  2B78               	goto	l5835
  2256     0357                     u4640:
  2257     0357                     l5827:
  2258     0357  0831               	movf	_i2busy^(0+128),w
  2259     0358  1D03               	btfss	3,2
  2260     0359  2B5B               	goto	u4651
  2261     035A  2B5C               	goto	u4650
  2262     035B                     u4651:
  2263     035B  2B78               	goto	l5835
  2264     035C                     u4650:
  2265     035C                     l5829:
  2266                           
  2267                           ;main.c: 503:            _delay((unsigned long)((10)*(32000000/4000.0)));
  2268     035C  3068               	movlw	104
  2269     035D  0021               	movlb	1	; select bank1
  2270     035E  00E8               	movwf	??_main^(0+128)
  2271     035F  30E4               	movlw	228
  2272     0360                     u5807:
  2273     0360  0B89               	decfsz	9,f
  2274     0361  2B60               	goto	u5807
  2275     0362  0BE8               	decfsz	??_main^(0+128),f
  2276     0363  2B60               	goto	u5807
  2277     0364  0000               	nop
  2278     0365                     l5831:
  2279                           
  2280                           ;main.c: 504:            DHTRESULT(0x01, 0, 1, TOUT, dhtresult, COM);
  2281     0365  0021               	movlb	1	; select bank1
  2282     0366  01E0               	clrf	DHTRESULT@tris^(0+128)
  2283     0367  01E1               	clrf	DHTRESULT@conector^(0+128)
  2284     0368  0AE1               	incf	DHTRESULT@conector^(0+128),f
  2285     0369  083A               	movf	_TOUT^(0+128),w
  2286     036A  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2287     036B  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2288     036C  00E3               	movwf	DHTRESULT@dht^(0+128)
  2289     036D  30EC               	movlw	(low (_COM| 0))& (0+255)
  2290     036E  00E4               	movwf	DHTRESULT@COM^(0+128)
  2291     036F  3001               	movlw	1
  2292     0370  318D  25FF  3182   	fcall	_DHTRESULT
  2293     0373                     l5833:
  2294                           
  2295                           ;main.c: 505:            meddone &= ~0x01 ;
  2296     0373  30FE               	movlw	254
  2297     0374  0021               	movlb	1	; select bank1
  2298     0375  05A2               	andwf	_meddone^(0+128),f
  2299     0376  30FF               	movlw	255
  2300     0377  05A3               	andwf	(_meddone+1)^(0+128),f
  2301     0378                     l5835:
  2302     0378  3032               	movlw	50
  2303     0379  063D               	xorwf	_sport^(0+128),w
  2304     037A  1D03               	btfss	3,2
  2305     037B  2B7D               	goto	u4661
  2306     037C  2B7E               	goto	u4660
  2307     037D                     u4661:
  2308     037D  2B9B               	goto	l5843
  2309     037E                     u4660:
  2310     037E                     l5837:
  2311     037E  0831               	movf	_i2busy^(0+128),w
  2312     037F  1D03               	btfss	3,2
  2313     0380  2B82               	goto	u4671
  2314     0381  2B83               	goto	u4670
  2315     0382                     u4671:
  2316     0382  2B9B               	goto	l5843
  2317     0383                     u4670:
  2318     0383                     l5839:
  2319                           
  2320                           ;main.c: 507:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x01, 1);
  2321     0383  308C               	movlw	140
  2322     0384  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2323     0385  3000               	movlw	0
  2324     0386  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2325     0387  300C               	movlw	12
  2326     0388  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2327     0389  3000               	movlw	0
  2328     038A  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2329     038B  300C               	movlw	12
  2330     038C  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2331     038D  3001               	movlw	1
  2332     038E  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2333     038F  01E6               	clrf	DS18B20_Read@PIN^(0+128)
  2334     0390  0AE6               	incf	DS18B20_Read@PIN^(0+128),f
  2335     0391  01E7               	clrf	DS18B20_Read@entry^(0+128)
  2336     0392  0AE7               	incf	DS18B20_Read@entry^(0+128),f
  2337     0393  318E  26E5  3182   	fcall	_DS18B20_Read
  2338     0396                     l5841:
  2339                           
  2340                           ;main.c: 508:            meddone &= ~0x01 ;
  2341     0396  30FE               	movlw	254
  2342     0397  0021               	movlb	1	; select bank1
  2343     0398  05A2               	andwf	_meddone^(0+128),f
  2344     0399  30FF               	movlw	255
  2345     039A  05A3               	andwf	(_meddone+1)^(0+128),f
  2346     039B                     l5843:
  2347     039B  3033               	movlw	51
  2348     039C  063D               	xorwf	_sport^(0+128),w
  2349     039D  1D03               	btfss	3,2
  2350     039E  2BA0               	goto	u4681
  2351     039F  2BA1               	goto	u4680
  2352     03A0                     u4681:
  2353     03A0  2BB3               	goto	l5859
  2354     03A1                     u4680:
  2355     03A1                     l5845:
  2356     03A1  0831               	movf	_i2busy^(0+128),w
  2357     03A2  1D03               	btfss	3,2
  2358     03A3  2BA5               	goto	u4691
  2359     03A4  2BA6               	goto	u4690
  2360     03A5                     u4691:
  2361     03A5  2BB3               	goto	l5859
  2362     03A6                     u4690:
  2363     03A6                     l5847:
  2364                           
  2365                           ;main.c: 510:            i2cfinish=0;
  2366     03A6  01B5               	clrf	_i2cfinish^(0+128)
  2367     03A7                     l5849:
  2368                           
  2369                           ;main.c: 511:            i2cbgin=1;
  2370     03A7  01B6               	clrf	_i2cbgin^(0+128)
  2371     03A8  0AB6               	incf	_i2cbgin^(0+128),f
  2372     03A9                     l5851:
  2373                           
  2374                           ;main.c: 512:            i2select=1;
  2375     03A9  01B2               	clrf	_i2select^(0+128)
  2376     03AA  0AB2               	incf	_i2select^(0+128),f
  2377     03AB                     l5853:
  2378                           
  2379                           ;main.c: 513:            i2busy=1;
  2380     03AB  01B1               	clrf	_i2busy^(0+128)
  2381     03AC  0AB1               	incf	_i2busy^(0+128),f
  2382     03AD                     l5855:
  2383                           
  2384                           ;main.c: 514:            act_com=1;
  2385     03AD  01B0               	clrf	_act_com^(0+128)
  2386     03AE  0AB0               	incf	_act_com^(0+128),f
  2387     03AF                     l5857:
  2388                           
  2389                           ;main.c: 515:            meddone &= ~0x01;
  2390     03AF  30FE               	movlw	254
  2391     03B0  05A2               	andwf	_meddone^(0+128),f
  2392     03B1  30FF               	movlw	255
  2393     03B2  05A3               	andwf	(_meddone+1)^(0+128),f
  2394     03B3                     l5859:
  2395     03B3  3034               	movlw	52
  2396     03B4  063D               	xorwf	_sport^(0+128),w
  2397     03B5  1D03               	btfss	3,2
  2398     03B6  2BB8               	goto	u4701
  2399     03B7  2BB9               	goto	u4700
  2400     03B8                     u4701:
  2401     03B8  2BCB               	goto	l5875
  2402     03B9                     u4700:
  2403     03B9                     l5861:
  2404     03B9  0831               	movf	_i2busy^(0+128),w
  2405     03BA  1D03               	btfss	3,2
  2406     03BB  2BBD               	goto	u4711
  2407     03BC  2BBE               	goto	u4710
  2408     03BD                     u4711:
  2409     03BD  2BCB               	goto	l5875
  2410     03BE                     u4710:
  2411     03BE                     l5863:
  2412                           
  2413                           ;main.c: 517:            i2cfinish=0;
  2414     03BE  01B5               	clrf	_i2cfinish^(0+128)
  2415     03BF                     l5865:
  2416                           
  2417                           ;main.c: 518:            i2cbgin=1;
  2418     03BF  01B6               	clrf	_i2cbgin^(0+128)
  2419     03C0  0AB6               	incf	_i2cbgin^(0+128),f
  2420     03C1                     l5867:
  2421                           
  2422                           ;main.c: 519:            i2select=2;
  2423     03C1  3002               	movlw	2
  2424     03C2  00B2               	movwf	_i2select^(0+128)
  2425     03C3                     l5869:
  2426                           
  2427                           ;main.c: 520:            i2busy=1;
  2428     03C3  01B1               	clrf	_i2busy^(0+128)
  2429     03C4  0AB1               	incf	_i2busy^(0+128),f
  2430     03C5                     l5871:
  2431                           
  2432                           ;main.c: 521:            act_com=1;
  2433     03C5  01B0               	clrf	_act_com^(0+128)
  2434     03C6  0AB0               	incf	_act_com^(0+128),f
  2435     03C7                     l5873:
  2436                           
  2437                           ;main.c: 522:            meddone &= ~0x01;
  2438     03C7  30FE               	movlw	254
  2439     03C8  05A2               	andwf	_meddone^(0+128),f
  2440     03C9  30FF               	movlw	255
  2441     03CA  05A3               	andwf	(_meddone+1)^(0+128),f
  2442     03CB                     l5875:
  2443     03CB  1CA2               	btfss	_meddone^(0+128),1
  2444     03CC  2BCE               	goto	u4721
  2445     03CD  2BCF               	goto	u4720
  2446     03CE                     u4721:
  2447     03CE  2C3F               	goto	l5925
  2448     03CF                     u4720:
  2449     03CF                     l5877:
  2450                           
  2451                           ;main.c: 525:         if(sport[1]=='1' && i2busy==0){
  2452     03CF  3031               	movlw	49
  2453     03D0  063E               	xorwf	(_sport^(0+128)+1),w
  2454     03D1  1D03               	btfss	3,2
  2455     03D2  2BD4               	goto	u4731
  2456     03D3  2BD5               	goto	u4730
  2457     03D4                     u4731:
  2458     03D4  2BEC               	goto	l5885
  2459     03D5                     u4730:
  2460     03D5                     l5879:
  2461     03D5  0831               	movf	_i2busy^(0+128),w
  2462     03D6  1D03               	btfss	3,2
  2463     03D7  2BD9               	goto	u4741
  2464     03D8  2BDA               	goto	u4740
  2465     03D9                     u4741:
  2466     03D9  2BEC               	goto	l5885
  2467     03DA                     u4740:
  2468     03DA                     l5881:
  2469                           
  2470                           ;main.c: 526:            DHTRESULT(0x02, 0, 2, TOUT, dhtresult, COM);
  2471     03DA  01E0               	clrf	DHTRESULT@tris^(0+128)
  2472     03DB  3002               	movlw	2
  2473     03DC  00E1               	movwf	DHTRESULT@conector^(0+128)
  2474     03DD  083A               	movf	_TOUT^(0+128),w
  2475     03DE  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2476     03DF  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2477     03E0  00E3               	movwf	DHTRESULT@dht^(0+128)
  2478     03E1  30EC               	movlw	(low (_COM| 0))& (0+255)
  2479     03E2  00E4               	movwf	DHTRESULT@COM^(0+128)
  2480     03E3  3002               	movlw	2
  2481     03E4  318D  25FF  3182   	fcall	_DHTRESULT
  2482     03E7                     l5883:
  2483                           
  2484                           ;main.c: 527:            meddone &= ~0x02;
  2485     03E7  30FD               	movlw	253
  2486     03E8  0021               	movlb	1	; select bank1
  2487     03E9  05A2               	andwf	_meddone^(0+128),f
  2488     03EA  30FF               	movlw	255
  2489     03EB  05A3               	andwf	(_meddone+1)^(0+128),f
  2490     03EC                     l5885:
  2491     03EC  3032               	movlw	50
  2492     03ED  063E               	xorwf	(_sport^(0+128)+1),w
  2493     03EE  1D03               	btfss	3,2
  2494     03EF  2BF1               	goto	u4751
  2495     03F0  2BF2               	goto	u4750
  2496     03F1                     u4751:
  2497     03F1  2C0F               	goto	l5893
  2498     03F2                     u4750:
  2499     03F2                     l5887:
  2500     03F2  0831               	movf	_i2busy^(0+128),w
  2501     03F3  1D03               	btfss	3,2
  2502     03F4  2BF6               	goto	u4761
  2503     03F5  2BF7               	goto	u4760
  2504     03F6                     u4761:
  2505     03F6  2C0F               	goto	l5893
  2506     03F7                     u4760:
  2507     03F7                     l5889:
  2508                           
  2509                           ;main.c: 529:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x02, 2);
  2510     03F7  308C               	movlw	140
  2511     03F8  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2512     03F9  3000               	movlw	0
  2513     03FA  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2514     03FB  300C               	movlw	12
  2515     03FC  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2516     03FD  3000               	movlw	0
  2517     03FE  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2518     03FF  300C               	movlw	12
  2519     0400  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2520     0401  3001               	movlw	1
  2521     0402  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2522     0403  3002               	movlw	2
  2523     0404  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  2524     0405  3002               	movlw	2
  2525     0406  00E7               	movwf	DS18B20_Read@entry^(0+128)
  2526     0407  318E  26E5  3182   	fcall	_DS18B20_Read
  2527     040A                     l5891:
  2528                           
  2529                           ;main.c: 530:            meddone &= ~0x02;
  2530     040A  30FD               	movlw	253
  2531     040B  0021               	movlb	1	; select bank1
  2532     040C  05A2               	andwf	_meddone^(0+128),f
  2533     040D  30FF               	movlw	255
  2534     040E  05A3               	andwf	(_meddone+1)^(0+128),f
  2535     040F                     l5893:
  2536     040F  3033               	movlw	51
  2537     0410  063E               	xorwf	(_sport^(0+128)+1),w
  2538     0411  1D03               	btfss	3,2
  2539     0412  2C14               	goto	u4771
  2540     0413  2C15               	goto	u4770
  2541     0414                     u4771:
  2542     0414  2C27               	goto	l5909
  2543     0415                     u4770:
  2544     0415                     l5895:
  2545     0415  0831               	movf	_i2busy^(0+128),w
  2546     0416  1D03               	btfss	3,2
  2547     0417  2C19               	goto	u4781
  2548     0418  2C1A               	goto	u4780
  2549     0419                     u4781:
  2550     0419  2C27               	goto	l5909
  2551     041A                     u4780:
  2552     041A                     l5897:
  2553                           
  2554                           ;main.c: 532:            i2cfinish=0;
  2555     041A  01B5               	clrf	_i2cfinish^(0+128)
  2556     041B                     l5899:
  2557                           
  2558                           ;main.c: 533:            i2cbgin=1;
  2559     041B  01B6               	clrf	_i2cbgin^(0+128)
  2560     041C  0AB6               	incf	_i2cbgin^(0+128),f
  2561     041D                     l5901:
  2562                           
  2563                           ;main.c: 534:            i2select=1;
  2564     041D  01B2               	clrf	_i2select^(0+128)
  2565     041E  0AB2               	incf	_i2select^(0+128),f
  2566     041F                     l5903:
  2567                           
  2568                           ;main.c: 535:            i2busy=1;
  2569     041F  01B1               	clrf	_i2busy^(0+128)
  2570     0420  0AB1               	incf	_i2busy^(0+128),f
  2571     0421                     l5905:
  2572                           
  2573                           ;main.c: 536:            act_com=2;
  2574     0421  3002               	movlw	2
  2575     0422  00B0               	movwf	_act_com^(0+128)
  2576     0423                     l5907:
  2577                           
  2578                           ;main.c: 537:            meddone &= ~0x02;
  2579     0423  30FD               	movlw	253
  2580     0424  05A2               	andwf	_meddone^(0+128),f
  2581     0425  30FF               	movlw	255
  2582     0426  05A3               	andwf	(_meddone+1)^(0+128),f
  2583     0427                     l5909:
  2584     0427  3034               	movlw	52
  2585     0428  063E               	xorwf	(_sport^(0+128)+1),w
  2586     0429  1D03               	btfss	3,2
  2587     042A  2C2C               	goto	u4791
  2588     042B  2C2D               	goto	u4790
  2589     042C                     u4791:
  2590     042C  2C3F               	goto	l5925
  2591     042D                     u4790:
  2592     042D                     l5911:
  2593     042D  0831               	movf	_i2busy^(0+128),w
  2594     042E  1D03               	btfss	3,2
  2595     042F  2C31               	goto	u4801
  2596     0430  2C32               	goto	u4800
  2597     0431                     u4801:
  2598     0431  2C3F               	goto	l5925
  2599     0432                     u4800:
  2600     0432                     l5913:
  2601                           
  2602                           ;main.c: 539:            i2cfinish=0;
  2603     0432  01B5               	clrf	_i2cfinish^(0+128)
  2604     0433                     l5915:
  2605                           
  2606                           ;main.c: 540:            i2cbgin=1;
  2607     0433  01B6               	clrf	_i2cbgin^(0+128)
  2608     0434  0AB6               	incf	_i2cbgin^(0+128),f
  2609     0435                     l5917:
  2610                           
  2611                           ;main.c: 541:            i2select=2;
  2612     0435  3002               	movlw	2
  2613     0436  00B2               	movwf	_i2select^(0+128)
  2614     0437                     l5919:
  2615                           
  2616                           ;main.c: 542:            i2busy=1;
  2617     0437  01B1               	clrf	_i2busy^(0+128)
  2618     0438  0AB1               	incf	_i2busy^(0+128),f
  2619     0439                     l5921:
  2620                           
  2621                           ;main.c: 543:            act_com=2;
  2622     0439  3002               	movlw	2
  2623     043A  00B0               	movwf	_act_com^(0+128)
  2624     043B                     l5923:
  2625                           
  2626                           ;main.c: 544:            meddone &= ~0x02;
  2627     043B  30FD               	movlw	253
  2628     043C  05A2               	andwf	_meddone^(0+128),f
  2629     043D  30FF               	movlw	255
  2630     043E  05A3               	andwf	(_meddone+1)^(0+128),f
  2631     043F                     l5925:
  2632     043F  1D22               	btfss	_meddone^(0+128),2
  2633     0440  2C42               	goto	u4811
  2634     0441  2C43               	goto	u4810
  2635     0442                     u4811:
  2636     0442  2CB3               	goto	l5975
  2637     0443                     u4810:
  2638     0443                     l5927:
  2639                           
  2640                           ;main.c: 547:         if(sport[2]=='1' && i2busy==0){
  2641     0443  3031               	movlw	49
  2642     0444  063F               	xorwf	(_sport^(0+128)+2),w
  2643     0445  1D03               	btfss	3,2
  2644     0446  2C48               	goto	u4821
  2645     0447  2C49               	goto	u4820
  2646     0448                     u4821:
  2647     0448  2C60               	goto	l5935
  2648     0449                     u4820:
  2649     0449                     l5929:
  2650     0449  0831               	movf	_i2busy^(0+128),w
  2651     044A  1D03               	btfss	3,2
  2652     044B  2C4D               	goto	u4831
  2653     044C  2C4E               	goto	u4830
  2654     044D                     u4831:
  2655     044D  2C60               	goto	l5935
  2656     044E                     u4830:
  2657     044E                     l5931:
  2658                           
  2659                           ;main.c: 548:            DHTRESULT(0x04, 0, 3, TOUT, dhtresult, COM);
  2660     044E  01E0               	clrf	DHTRESULT@tris^(0+128)
  2661     044F  3003               	movlw	3
  2662     0450  00E1               	movwf	DHTRESULT@conector^(0+128)
  2663     0451  083A               	movf	_TOUT^(0+128),w
  2664     0452  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2665     0453  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2666     0454  00E3               	movwf	DHTRESULT@dht^(0+128)
  2667     0455  30EC               	movlw	(low (_COM| 0))& (0+255)
  2668     0456  00E4               	movwf	DHTRESULT@COM^(0+128)
  2669     0457  3004               	movlw	4
  2670     0458  318D  25FF  3182   	fcall	_DHTRESULT
  2671     045B                     l5933:
  2672                           
  2673                           ;main.c: 549:            meddone &= ~0x04;
  2674     045B  30FB               	movlw	251
  2675     045C  0021               	movlb	1	; select bank1
  2676     045D  05A2               	andwf	_meddone^(0+128),f
  2677     045E  30FF               	movlw	255
  2678     045F  05A3               	andwf	(_meddone+1)^(0+128),f
  2679     0460                     l5935:
  2680     0460  3032               	movlw	50
  2681     0461  063F               	xorwf	(_sport^(0+128)+2),w
  2682     0462  1D03               	btfss	3,2
  2683     0463  2C65               	goto	u4841
  2684     0464  2C66               	goto	u4840
  2685     0465                     u4841:
  2686     0465  2C83               	goto	l5943
  2687     0466                     u4840:
  2688     0466                     l5937:
  2689     0466  0831               	movf	_i2busy^(0+128),w
  2690     0467  1D03               	btfss	3,2
  2691     0468  2C6A               	goto	u4851
  2692     0469  2C6B               	goto	u4850
  2693     046A                     u4851:
  2694     046A  2C83               	goto	l5943
  2695     046B                     u4850:
  2696     046B                     l5939:
  2697                           
  2698                           ;main.c: 551:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x04, 3);
  2699     046B  308C               	movlw	140
  2700     046C  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2701     046D  3000               	movlw	0
  2702     046E  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2703     046F  300C               	movlw	12
  2704     0470  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2705     0471  3000               	movlw	0
  2706     0472  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2707     0473  300C               	movlw	12
  2708     0474  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2709     0475  3001               	movlw	1
  2710     0476  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2711     0477  3004               	movlw	4
  2712     0478  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  2713     0479  3003               	movlw	3
  2714     047A  00E7               	movwf	DS18B20_Read@entry^(0+128)
  2715     047B  318E  26E5  3182   	fcall	_DS18B20_Read
  2716     047E                     l5941:
  2717                           
  2718                           ;main.c: 552:            meddone &= ~0x04;
  2719     047E  30FB               	movlw	251
  2720     047F  0021               	movlb	1	; select bank1
  2721     0480  05A2               	andwf	_meddone^(0+128),f
  2722     0481  30FF               	movlw	255
  2723     0482  05A3               	andwf	(_meddone+1)^(0+128),f
  2724     0483                     l5943:
  2725     0483  3033               	movlw	51
  2726     0484  063F               	xorwf	(_sport^(0+128)+2),w
  2727     0485  1D03               	btfss	3,2
  2728     0486  2C88               	goto	u4861
  2729     0487  2C89               	goto	u4860
  2730     0488                     u4861:
  2731     0488  2C9B               	goto	l5959
  2732     0489                     u4860:
  2733     0489                     l5945:
  2734     0489  0831               	movf	_i2busy^(0+128),w
  2735     048A  1D03               	btfss	3,2
  2736     048B  2C8D               	goto	u4871
  2737     048C  2C8E               	goto	u4870
  2738     048D                     u4871:
  2739     048D  2C9B               	goto	l5959
  2740     048E                     u4870:
  2741     048E                     l5947:
  2742                           
  2743                           ;main.c: 554:            i2cfinish=0;
  2744     048E  01B5               	clrf	_i2cfinish^(0+128)
  2745     048F                     l5949:
  2746                           
  2747                           ;main.c: 555:            i2cbgin=1;
  2748     048F  01B6               	clrf	_i2cbgin^(0+128)
  2749     0490  0AB6               	incf	_i2cbgin^(0+128),f
  2750     0491                     l5951:
  2751                           
  2752                           ;main.c: 556:            i2select=1;
  2753     0491  01B2               	clrf	_i2select^(0+128)
  2754     0492  0AB2               	incf	_i2select^(0+128),f
  2755     0493                     l5953:
  2756                           
  2757                           ;main.c: 557:            i2busy=1;
  2758     0493  01B1               	clrf	_i2busy^(0+128)
  2759     0494  0AB1               	incf	_i2busy^(0+128),f
  2760     0495                     l5955:
  2761                           
  2762                           ;main.c: 558:            act_com=3;
  2763     0495  3003               	movlw	3
  2764     0496  00B0               	movwf	_act_com^(0+128)
  2765     0497                     l5957:
  2766                           
  2767                           ;main.c: 559:            meddone &= ~0x04;
  2768     0497  30FB               	movlw	251
  2769     0498  05A2               	andwf	_meddone^(0+128),f
  2770     0499  30FF               	movlw	255
  2771     049A  05A3               	andwf	(_meddone+1)^(0+128),f
  2772     049B                     l5959:
  2773     049B  3034               	movlw	52
  2774     049C  063F               	xorwf	(_sport^(0+128)+2),w
  2775     049D  1D03               	btfss	3,2
  2776     049E  2CA0               	goto	u4881
  2777     049F  2CA1               	goto	u4880
  2778     04A0                     u4881:
  2779     04A0  2CB3               	goto	l5975
  2780     04A1                     u4880:
  2781     04A1                     l5961:
  2782     04A1  0831               	movf	_i2busy^(0+128),w
  2783     04A2  1D03               	btfss	3,2
  2784     04A3  2CA5               	goto	u4891
  2785     04A4  2CA6               	goto	u4890
  2786     04A5                     u4891:
  2787     04A5  2CB3               	goto	l5975
  2788     04A6                     u4890:
  2789     04A6                     l5963:
  2790                           
  2791                           ;main.c: 561:            i2cfinish=0;
  2792     04A6  01B5               	clrf	_i2cfinish^(0+128)
  2793     04A7                     l5965:
  2794                           
  2795                           ;main.c: 562:            i2cbgin=1;
  2796     04A7  01B6               	clrf	_i2cbgin^(0+128)
  2797     04A8  0AB6               	incf	_i2cbgin^(0+128),f
  2798     04A9                     l5967:
  2799                           
  2800                           ;main.c: 563:            i2select=2;
  2801     04A9  3002               	movlw	2
  2802     04AA  00B2               	movwf	_i2select^(0+128)
  2803     04AB                     l5969:
  2804                           
  2805                           ;main.c: 564:            i2busy=1;
  2806     04AB  01B1               	clrf	_i2busy^(0+128)
  2807     04AC  0AB1               	incf	_i2busy^(0+128),f
  2808     04AD                     l5971:
  2809                           
  2810                           ;main.c: 565:            act_com=3;
  2811     04AD  3003               	movlw	3
  2812     04AE  00B0               	movwf	_act_com^(0+128)
  2813     04AF                     l5973:
  2814                           
  2815                           ;main.c: 566:            meddone &= ~0x04;
  2816     04AF  30FB               	movlw	251
  2817     04B0  05A2               	andwf	_meddone^(0+128),f
  2818     04B1  30FF               	movlw	255
  2819     04B2  05A3               	andwf	(_meddone+1)^(0+128),f
  2820     04B3                     l5975:
  2821     04B3  1DA2               	btfss	_meddone^(0+128),3
  2822     04B4  2CB6               	goto	u4901
  2823     04B5  2CB7               	goto	u4900
  2824     04B6                     u4901:
  2825     04B6  2D27               	goto	l6025
  2826     04B7                     u4900:
  2827     04B7                     l5977:
  2828                           
  2829                           ;main.c: 569:         if(sport[3]=='1' && i2busy==0){
  2830     04B7  3031               	movlw	49
  2831     04B8  0640               	xorwf	(_sport^(0+128)+3),w
  2832     04B9  1D03               	btfss	3,2
  2833     04BA  2CBC               	goto	u4911
  2834     04BB  2CBD               	goto	u4910
  2835     04BC                     u4911:
  2836     04BC  2CD4               	goto	l5985
  2837     04BD                     u4910:
  2838     04BD                     l5979:
  2839     04BD  0831               	movf	_i2busy^(0+128),w
  2840     04BE  1D03               	btfss	3,2
  2841     04BF  2CC1               	goto	u4921
  2842     04C0  2CC2               	goto	u4920
  2843     04C1                     u4921:
  2844     04C1  2CD4               	goto	l5985
  2845     04C2                     u4920:
  2846     04C2                     l5981:
  2847                           
  2848                           ;main.c: 570:            DHTRESULT(0x08, 0, 4, TOUT, dhtresult, COM);
  2849     04C2  01E0               	clrf	DHTRESULT@tris^(0+128)
  2850     04C3  3004               	movlw	4
  2851     04C4  00E1               	movwf	DHTRESULT@conector^(0+128)
  2852     04C5  083A               	movf	_TOUT^(0+128),w
  2853     04C6  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2854     04C7  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2855     04C8  00E3               	movwf	DHTRESULT@dht^(0+128)
  2856     04C9  30EC               	movlw	(low (_COM| 0))& (0+255)
  2857     04CA  00E4               	movwf	DHTRESULT@COM^(0+128)
  2858     04CB  3008               	movlw	8
  2859     04CC  318D  25FF  3182   	fcall	_DHTRESULT
  2860     04CF                     l5983:
  2861                           
  2862                           ;main.c: 571:            meddone &= ~0x08;
  2863     04CF  30F7               	movlw	247
  2864     04D0  0021               	movlb	1	; select bank1
  2865     04D1  05A2               	andwf	_meddone^(0+128),f
  2866     04D2  30FF               	movlw	255
  2867     04D3  05A3               	andwf	(_meddone+1)^(0+128),f
  2868     04D4                     l5985:
  2869     04D4  3032               	movlw	50
  2870     04D5  0640               	xorwf	(_sport^(0+128)+3),w
  2871     04D6  1D03               	btfss	3,2
  2872     04D7  2CD9               	goto	u4931
  2873     04D8  2CDA               	goto	u4930
  2874     04D9                     u4931:
  2875     04D9  2CF7               	goto	l5993
  2876     04DA                     u4930:
  2877     04DA                     l5987:
  2878     04DA  0831               	movf	_i2busy^(0+128),w
  2879     04DB  1D03               	btfss	3,2
  2880     04DC  2CDE               	goto	u4941
  2881     04DD  2CDF               	goto	u4940
  2882     04DE                     u4941:
  2883     04DE  2CF7               	goto	l5993
  2884     04DF                     u4940:
  2885     04DF                     l5989:
  2886                           
  2887                           ;main.c: 573:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x08, 4);
  2888     04DF  308C               	movlw	140
  2889     04E0  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2890     04E1  3000               	movlw	0
  2891     04E2  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2892     04E3  300C               	movlw	12
  2893     04E4  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2894     04E5  3000               	movlw	0
  2895     04E6  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2896     04E7  300C               	movlw	12
  2897     04E8  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2898     04E9  3001               	movlw	1
  2899     04EA  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2900     04EB  3008               	movlw	8
  2901     04EC  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  2902     04ED  3004               	movlw	4
  2903     04EE  00E7               	movwf	DS18B20_Read@entry^(0+128)
  2904     04EF  318E  26E5  3182   	fcall	_DS18B20_Read
  2905     04F2                     l5991:
  2906                           
  2907                           ;main.c: 574:            meddone &= ~0x08;
  2908     04F2  30F7               	movlw	247
  2909     04F3  0021               	movlb	1	; select bank1
  2910     04F4  05A2               	andwf	_meddone^(0+128),f
  2911     04F5  30FF               	movlw	255
  2912     04F6  05A3               	andwf	(_meddone+1)^(0+128),f
  2913     04F7                     l5993:
  2914     04F7  3033               	movlw	51
  2915     04F8  0640               	xorwf	(_sport^(0+128)+3),w
  2916     04F9  1D03               	btfss	3,2
  2917     04FA  2CFC               	goto	u4951
  2918     04FB  2CFD               	goto	u4950
  2919     04FC                     u4951:
  2920     04FC  2D0F               	goto	l6009
  2921     04FD                     u4950:
  2922     04FD                     l5995:
  2923     04FD  0831               	movf	_i2busy^(0+128),w
  2924     04FE  1D03               	btfss	3,2
  2925     04FF  2D01               	goto	u4961
  2926     0500  2D02               	goto	u4960
  2927     0501                     u4961:
  2928     0501  2D0F               	goto	l6009
  2929     0502                     u4960:
  2930     0502                     l5997:
  2931                           
  2932                           ;main.c: 576:            i2cfinish=0;
  2933     0502  01B5               	clrf	_i2cfinish^(0+128)
  2934     0503                     l5999:
  2935                           
  2936                           ;main.c: 577:            i2cbgin=1;
  2937     0503  01B6               	clrf	_i2cbgin^(0+128)
  2938     0504  0AB6               	incf	_i2cbgin^(0+128),f
  2939     0505                     l6001:
  2940                           
  2941                           ;main.c: 578:            i2select=1;
  2942     0505  01B2               	clrf	_i2select^(0+128)
  2943     0506  0AB2               	incf	_i2select^(0+128),f
  2944     0507                     l6003:
  2945                           
  2946                           ;main.c: 579:            i2busy=1;
  2947     0507  01B1               	clrf	_i2busy^(0+128)
  2948     0508  0AB1               	incf	_i2busy^(0+128),f
  2949     0509                     l6005:
  2950                           
  2951                           ;main.c: 580:            act_com=4;
  2952     0509  3004               	movlw	4
  2953     050A  00B0               	movwf	_act_com^(0+128)
  2954     050B                     l6007:
  2955                           
  2956                           ;main.c: 581:            meddone &= ~0x04;
  2957     050B  30FB               	movlw	251
  2958     050C  05A2               	andwf	_meddone^(0+128),f
  2959     050D  30FF               	movlw	255
  2960     050E  05A3               	andwf	(_meddone+1)^(0+128),f
  2961     050F                     l6009:
  2962     050F  3034               	movlw	52
  2963     0510  0640               	xorwf	(_sport^(0+128)+3),w
  2964     0511  1D03               	btfss	3,2
  2965     0512  2D14               	goto	u4971
  2966     0513  2D15               	goto	u4970
  2967     0514                     u4971:
  2968     0514  2D27               	goto	l6025
  2969     0515                     u4970:
  2970     0515                     l6011:
  2971     0515  0831               	movf	_i2busy^(0+128),w
  2972     0516  1D03               	btfss	3,2
  2973     0517  2D19               	goto	u4981
  2974     0518  2D1A               	goto	u4980
  2975     0519                     u4981:
  2976     0519  2D27               	goto	l6025
  2977     051A                     u4980:
  2978     051A                     l6013:
  2979                           
  2980                           ;main.c: 583:            i2cfinish=0;
  2981     051A  01B5               	clrf	_i2cfinish^(0+128)
  2982     051B                     l6015:
  2983                           
  2984                           ;main.c: 584:            i2cbgin=1;
  2985     051B  01B6               	clrf	_i2cbgin^(0+128)
  2986     051C  0AB6               	incf	_i2cbgin^(0+128),f
  2987     051D                     l6017:
  2988                           
  2989                           ;main.c: 585:            i2select=2;
  2990     051D  3002               	movlw	2
  2991     051E  00B2               	movwf	_i2select^(0+128)
  2992     051F                     l6019:
  2993                           
  2994                           ;main.c: 586:            i2busy=1;
  2995     051F  01B1               	clrf	_i2busy^(0+128)
  2996     0520  0AB1               	incf	_i2busy^(0+128),f
  2997     0521                     l6021:
  2998                           
  2999                           ;main.c: 587:            act_com=4;
  3000     0521  3004               	movlw	4
  3001     0522  00B0               	movwf	_act_com^(0+128)
  3002     0523                     l6023:
  3003                           
  3004                           ;main.c: 588:            meddone &= ~0x04;
  3005     0523  30FB               	movlw	251
  3006     0524  05A2               	andwf	_meddone^(0+128),f
  3007     0525  30FF               	movlw	255
  3008     0526  05A3               	andwf	(_meddone+1)^(0+128),f
  3009     0527                     l6025:
  3010     0527  1E22               	btfss	_meddone^(0+128),4
  3011     0528  2D2A               	goto	u4991
  3012     0529  2D2B               	goto	u4990
  3013     052A                     u4991:
  3014     052A  2D9B               	goto	l6075
  3015     052B                     u4990:
  3016     052B                     l6027:
  3017                           
  3018                           ;main.c: 591:         if(sport[4]=='1' && i2busy==0){
  3019     052B  3031               	movlw	49
  3020     052C  0641               	xorwf	(_sport^(0+128)+4),w
  3021     052D  1D03               	btfss	3,2
  3022     052E  2D30               	goto	u5001
  3023     052F  2D31               	goto	u5000
  3024     0530                     u5001:
  3025     0530  2D48               	goto	l6035
  3026     0531                     u5000:
  3027     0531                     l6029:
  3028     0531  0831               	movf	_i2busy^(0+128),w
  3029     0532  1D03               	btfss	3,2
  3030     0533  2D35               	goto	u5011
  3031     0534  2D36               	goto	u5010
  3032     0535                     u5011:
  3033     0535  2D48               	goto	l6035
  3034     0536                     u5010:
  3035     0536                     l6031:
  3036                           
  3037                           ;main.c: 592:            DHTRESULT(0x10, 0, 5, TOUT, dhtresult, COM);
  3038     0536  01E0               	clrf	DHTRESULT@tris^(0+128)
  3039     0537  3005               	movlw	5
  3040     0538  00E1               	movwf	DHTRESULT@conector^(0+128)
  3041     0539  083A               	movf	_TOUT^(0+128),w
  3042     053A  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3043     053B  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3044     053C  00E3               	movwf	DHTRESULT@dht^(0+128)
  3045     053D  30EC               	movlw	(low (_COM| 0))& (0+255)
  3046     053E  00E4               	movwf	DHTRESULT@COM^(0+128)
  3047     053F  3010               	movlw	16
  3048     0540  318D  25FF  3182   	fcall	_DHTRESULT
  3049     0543                     l6033:
  3050                           
  3051                           ;main.c: 593:            meddone &= ~0x10 ;
  3052     0543  30EF               	movlw	239
  3053     0544  0021               	movlb	1	; select bank1
  3054     0545  05A2               	andwf	_meddone^(0+128),f
  3055     0546  30FF               	movlw	255
  3056     0547  05A3               	andwf	(_meddone+1)^(0+128),f
  3057     0548                     l6035:
  3058     0548  3032               	movlw	50
  3059     0549  0641               	xorwf	(_sport^(0+128)+4),w
  3060     054A  1D03               	btfss	3,2
  3061     054B  2D4D               	goto	u5021
  3062     054C  2D4E               	goto	u5020
  3063     054D                     u5021:
  3064     054D  2D6B               	goto	l6043
  3065     054E                     u5020:
  3066     054E                     l6037:
  3067     054E  0831               	movf	_i2busy^(0+128),w
  3068     054F  1D03               	btfss	3,2
  3069     0550  2D52               	goto	u5031
  3070     0551  2D53               	goto	u5030
  3071     0552                     u5031:
  3072     0552  2D6B               	goto	l6043
  3073     0553                     u5030:
  3074     0553                     l6039:
  3075                           
  3076                           ;main.c: 595:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x10, 5);
  3077     0553  308C               	movlw	140
  3078     0554  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3079     0555  3000               	movlw	0
  3080     0556  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3081     0557  300C               	movlw	12
  3082     0558  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3083     0559  3000               	movlw	0
  3084     055A  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3085     055B  300C               	movlw	12
  3086     055C  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3087     055D  3001               	movlw	1
  3088     055E  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3089     055F  3010               	movlw	16
  3090     0560  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3091     0561  3005               	movlw	5
  3092     0562  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3093     0563  318E  26E5  3182   	fcall	_DS18B20_Read
  3094     0566                     l6041:
  3095                           
  3096                           ;main.c: 596:            meddone &= ~0x10 ;
  3097     0566  30EF               	movlw	239
  3098     0567  0021               	movlb	1	; select bank1
  3099     0568  05A2               	andwf	_meddone^(0+128),f
  3100     0569  30FF               	movlw	255
  3101     056A  05A3               	andwf	(_meddone+1)^(0+128),f
  3102     056B                     l6043:
  3103     056B  3033               	movlw	51
  3104     056C  0641               	xorwf	(_sport^(0+128)+4),w
  3105     056D  1D03               	btfss	3,2
  3106     056E  2D70               	goto	u5041
  3107     056F  2D71               	goto	u5040
  3108     0570                     u5041:
  3109     0570  2D83               	goto	l6059
  3110     0571                     u5040:
  3111     0571                     l6045:
  3112     0571  0831               	movf	_i2busy^(0+128),w
  3113     0572  1D03               	btfss	3,2
  3114     0573  2D75               	goto	u5051
  3115     0574  2D76               	goto	u5050
  3116     0575                     u5051:
  3117     0575  2D83               	goto	l6059
  3118     0576                     u5050:
  3119     0576                     l6047:
  3120                           
  3121                           ;main.c: 598:            i2cfinish=0;
  3122     0576  01B5               	clrf	_i2cfinish^(0+128)
  3123     0577                     l6049:
  3124                           
  3125                           ;main.c: 599:            i2cbgin=1;
  3126     0577  01B6               	clrf	_i2cbgin^(0+128)
  3127     0578  0AB6               	incf	_i2cbgin^(0+128),f
  3128     0579                     l6051:
  3129                           
  3130                           ;main.c: 600:            i2select=1;
  3131     0579  01B2               	clrf	_i2select^(0+128)
  3132     057A  0AB2               	incf	_i2select^(0+128),f
  3133     057B                     l6053:
  3134                           
  3135                           ;main.c: 601:            i2busy=1;
  3136     057B  01B1               	clrf	_i2busy^(0+128)
  3137     057C  0AB1               	incf	_i2busy^(0+128),f
  3138     057D                     l6055:
  3139                           
  3140                           ;main.c: 602:            act_com=5;
  3141     057D  3005               	movlw	5
  3142     057E  00B0               	movwf	_act_com^(0+128)
  3143     057F                     l6057:
  3144                           
  3145                           ;main.c: 603:            meddone &= ~0x10;
  3146     057F  30EF               	movlw	239
  3147     0580  05A2               	andwf	_meddone^(0+128),f
  3148     0581  30FF               	movlw	255
  3149     0582  05A3               	andwf	(_meddone+1)^(0+128),f
  3150     0583                     l6059:
  3151     0583  3034               	movlw	52
  3152     0584  0641               	xorwf	(_sport^(0+128)+4),w
  3153     0585  1D03               	btfss	3,2
  3154     0586  2D88               	goto	u5061
  3155     0587  2D89               	goto	u5060
  3156     0588                     u5061:
  3157     0588  2D9B               	goto	l6075
  3158     0589                     u5060:
  3159     0589                     l6061:
  3160     0589  0831               	movf	_i2busy^(0+128),w
  3161     058A  1D03               	btfss	3,2
  3162     058B  2D8D               	goto	u5071
  3163     058C  2D8E               	goto	u5070
  3164     058D                     u5071:
  3165     058D  2D9B               	goto	l6075
  3166     058E                     u5070:
  3167     058E                     l6063:
  3168                           
  3169                           ;main.c: 605:            i2cfinish=0;
  3170     058E  01B5               	clrf	_i2cfinish^(0+128)
  3171     058F                     l6065:
  3172                           
  3173                           ;main.c: 606:            i2cbgin=1;
  3174     058F  01B6               	clrf	_i2cbgin^(0+128)
  3175     0590  0AB6               	incf	_i2cbgin^(0+128),f
  3176     0591                     l6067:
  3177                           
  3178                           ;main.c: 607:            i2select=2;
  3179     0591  3002               	movlw	2
  3180     0592  00B2               	movwf	_i2select^(0+128)
  3181     0593                     l6069:
  3182                           
  3183                           ;main.c: 608:            i2busy=1;
  3184     0593  01B1               	clrf	_i2busy^(0+128)
  3185     0594  0AB1               	incf	_i2busy^(0+128),f
  3186     0595                     l6071:
  3187                           
  3188                           ;main.c: 609:            act_com=5;
  3189     0595  3005               	movlw	5
  3190     0596  00B0               	movwf	_act_com^(0+128)
  3191     0597                     l6073:
  3192                           
  3193                           ;main.c: 610:            meddone &= ~0x10;
  3194     0597  30EF               	movlw	239
  3195     0598  05A2               	andwf	_meddone^(0+128),f
  3196     0599  30FF               	movlw	255
  3197     059A  05A3               	andwf	(_meddone+1)^(0+128),f
  3198     059B                     l6075:
  3199     059B  1EA2               	btfss	_meddone^(0+128),5
  3200     059C  2D9E               	goto	u5081
  3201     059D  2D9F               	goto	u5080
  3202     059E                     u5081:
  3203     059E  2E10               	goto	l6125
  3204     059F                     u5080:
  3205     059F                     l6077:
  3206                           
  3207                           ;main.c: 613:         if(sport[5]=='1' && i2busy==0){
  3208     059F  3031               	movlw	49
  3209     05A0  0642               	xorwf	(_sport^(0+128)+5),w
  3210     05A1  1D03               	btfss	3,2
  3211     05A2  2DA4               	goto	u5091
  3212     05A3  2DA5               	goto	u5090
  3213     05A4                     u5091:
  3214     05A4  2DBD               	goto	l6085
  3215     05A5                     u5090:
  3216     05A5                     l6079:
  3217     05A5  0831               	movf	_i2busy^(0+128),w
  3218     05A6  1D03               	btfss	3,2
  3219     05A7  2DA9               	goto	u5101
  3220     05A8  2DAA               	goto	u5100
  3221     05A9                     u5101:
  3222     05A9  2DBD               	goto	l6085
  3223     05AA                     u5100:
  3224     05AA                     l6081:
  3225                           
  3226                           ;main.c: 614:            DHTRESULT(0x01, 1, 6, TOUT, dhtresult, COM);
  3227     05AA  01E0               	clrf	DHTRESULT@tris^(0+128)
  3228     05AB  0AE0               	incf	DHTRESULT@tris^(0+128),f
  3229     05AC  3006               	movlw	6
  3230     05AD  00E1               	movwf	DHTRESULT@conector^(0+128)
  3231     05AE  083A               	movf	_TOUT^(0+128),w
  3232     05AF  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3233     05B0  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3234     05B1  00E3               	movwf	DHTRESULT@dht^(0+128)
  3235     05B2  30EC               	movlw	(low (_COM| 0))& (0+255)
  3236     05B3  00E4               	movwf	DHTRESULT@COM^(0+128)
  3237     05B4  3001               	movlw	1
  3238     05B5  318D  25FF  3182   	fcall	_DHTRESULT
  3239     05B8                     l6083:
  3240                           
  3241                           ;main.c: 615:            meddone &= ~0x20 ;
  3242     05B8  30DF               	movlw	223
  3243     05B9  0021               	movlb	1	; select bank1
  3244     05BA  05A2               	andwf	_meddone^(0+128),f
  3245     05BB  30FF               	movlw	255
  3246     05BC  05A3               	andwf	(_meddone+1)^(0+128),f
  3247     05BD                     l6085:
  3248     05BD  3032               	movlw	50
  3249     05BE  0642               	xorwf	(_sport^(0+128)+5),w
  3250     05BF  1D03               	btfss	3,2
  3251     05C0  2DC2               	goto	u5111
  3252     05C1  2DC3               	goto	u5110
  3253     05C2                     u5111:
  3254     05C2  2DE0               	goto	l6093
  3255     05C3                     u5110:
  3256     05C3                     l6087:
  3257     05C3  0831               	movf	_i2busy^(0+128),w
  3258     05C4  1D03               	btfss	3,2
  3259     05C5  2DC7               	goto	u5121
  3260     05C6  2DC8               	goto	u5120
  3261     05C7                     u5121:
  3262     05C7  2DE0               	goto	l6093
  3263     05C8                     u5120:
  3264     05C8                     l6089:
  3265                           
  3266                           ;main.c: 617:            DS18B20_Read(&TRISC, &PORTC, &LATC, 0x01, 6);
  3267     05C8  308E               	movlw	142
  3268     05C9  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3269     05CA  3000               	movlw	0
  3270     05CB  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3271     05CC  300E               	movlw	14
  3272     05CD  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3273     05CE  3000               	movlw	0
  3274     05CF  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3275     05D0  300E               	movlw	14
  3276     05D1  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3277     05D2  3001               	movlw	1
  3278     05D3  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3279     05D4  01E6               	clrf	DS18B20_Read@PIN^(0+128)
  3280     05D5  0AE6               	incf	DS18B20_Read@PIN^(0+128),f
  3281     05D6  3006               	movlw	6
  3282     05D7  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3283     05D8  318E  26E5  3182   	fcall	_DS18B20_Read
  3284     05DB                     l6091:
  3285                           
  3286                           ;main.c: 618:            meddone &= ~0x20 ;
  3287     05DB  30DF               	movlw	223
  3288     05DC  0021               	movlb	1	; select bank1
  3289     05DD  05A2               	andwf	_meddone^(0+128),f
  3290     05DE  30FF               	movlw	255
  3291     05DF  05A3               	andwf	(_meddone+1)^(0+128),f
  3292     05E0                     l6093:
  3293     05E0  3033               	movlw	51
  3294     05E1  0642               	xorwf	(_sport^(0+128)+5),w
  3295     05E2  1D03               	btfss	3,2
  3296     05E3  2DE5               	goto	u5131
  3297     05E4  2DE6               	goto	u5130
  3298     05E5                     u5131:
  3299     05E5  2DF8               	goto	l6109
  3300     05E6                     u5130:
  3301     05E6                     l6095:
  3302     05E6  0831               	movf	_i2busy^(0+128),w
  3303     05E7  1D03               	btfss	3,2
  3304     05E8  2DEA               	goto	u5141
  3305     05E9  2DEB               	goto	u5140
  3306     05EA                     u5141:
  3307     05EA  2DF8               	goto	l6109
  3308     05EB                     u5140:
  3309     05EB                     l6097:
  3310                           
  3311                           ;main.c: 620:            i2cfinish=0;
  3312     05EB  01B5               	clrf	_i2cfinish^(0+128)
  3313     05EC                     l6099:
  3314                           
  3315                           ;main.c: 621:            i2cbgin=1;
  3316     05EC  01B6               	clrf	_i2cbgin^(0+128)
  3317     05ED  0AB6               	incf	_i2cbgin^(0+128),f
  3318     05EE                     l6101:
  3319                           
  3320                           ;main.c: 622:            i2select=1;
  3321     05EE  01B2               	clrf	_i2select^(0+128)
  3322     05EF  0AB2               	incf	_i2select^(0+128),f
  3323     05F0                     l6103:
  3324                           
  3325                           ;main.c: 623:            i2busy=1;
  3326     05F0  01B1               	clrf	_i2busy^(0+128)
  3327     05F1  0AB1               	incf	_i2busy^(0+128),f
  3328     05F2                     l6105:
  3329                           
  3330                           ;main.c: 624:            act_com=6;
  3331     05F2  3006               	movlw	6
  3332     05F3  00B0               	movwf	_act_com^(0+128)
  3333     05F4                     l6107:
  3334                           
  3335                           ;main.c: 625:            meddone &= ~0x20;
  3336     05F4  30DF               	movlw	223
  3337     05F5  05A2               	andwf	_meddone^(0+128),f
  3338     05F6  30FF               	movlw	255
  3339     05F7  05A3               	andwf	(_meddone+1)^(0+128),f
  3340     05F8                     l6109:
  3341     05F8  3034               	movlw	52
  3342     05F9  0642               	xorwf	(_sport^(0+128)+5),w
  3343     05FA  1D03               	btfss	3,2
  3344     05FB  2DFD               	goto	u5151
  3345     05FC  2DFE               	goto	u5150
  3346     05FD                     u5151:
  3347     05FD  2E10               	goto	l6125
  3348     05FE                     u5150:
  3349     05FE                     l6111:
  3350     05FE  0831               	movf	_i2busy^(0+128),w
  3351     05FF  1D03               	btfss	3,2
  3352     0600  2E02               	goto	u5161
  3353     0601  2E03               	goto	u5160
  3354     0602                     u5161:
  3355     0602  2E10               	goto	l6125
  3356     0603                     u5160:
  3357     0603                     l6113:
  3358                           
  3359                           ;main.c: 627:            i2cfinish=0;
  3360     0603  01B5               	clrf	_i2cfinish^(0+128)
  3361     0604                     l6115:
  3362                           
  3363                           ;main.c: 628:            i2cbgin=1;
  3364     0604  01B6               	clrf	_i2cbgin^(0+128)
  3365     0605  0AB6               	incf	_i2cbgin^(0+128),f
  3366     0606                     l6117:
  3367                           
  3368                           ;main.c: 629:            i2select=2;
  3369     0606  3002               	movlw	2
  3370     0607  00B2               	movwf	_i2select^(0+128)
  3371     0608                     l6119:
  3372                           
  3373                           ;main.c: 630:            i2busy=1;
  3374     0608  01B1               	clrf	_i2busy^(0+128)
  3375     0609  0AB1               	incf	_i2busy^(0+128),f
  3376     060A                     l6121:
  3377                           
  3378                           ;main.c: 631:            act_com=6;
  3379     060A  3006               	movlw	6
  3380     060B  00B0               	movwf	_act_com^(0+128)
  3381     060C                     l6123:
  3382                           
  3383                           ;main.c: 632:            meddone &= ~0x20;
  3384     060C  30DF               	movlw	223
  3385     060D  05A2               	andwf	_meddone^(0+128),f
  3386     060E  30FF               	movlw	255
  3387     060F  05A3               	andwf	(_meddone+1)^(0+128),f
  3388     0610                     l6125:
  3389     0610  1F22               	btfss	_meddone^(0+128),6
  3390     0611  2E13               	goto	u5171
  3391     0612  2E14               	goto	u5170
  3392     0613                     u5171:
  3393     0613  2E84               	goto	l6175
  3394     0614                     u5170:
  3395     0614                     l6127:
  3396                           
  3397                           ;main.c: 635:         if(sport[6]=='1' && i2busy==0){
  3398     0614  3031               	movlw	49
  3399     0615  0643               	xorwf	(_sport^(0+128)+6),w
  3400     0616  1D03               	btfss	3,2
  3401     0617  2E19               	goto	u5181
  3402     0618  2E1A               	goto	u5180
  3403     0619                     u5181:
  3404     0619  2E31               	goto	l6135
  3405     061A                     u5180:
  3406     061A                     l6129:
  3407     061A  0831               	movf	_i2busy^(0+128),w
  3408     061B  1D03               	btfss	3,2
  3409     061C  2E1E               	goto	u5191
  3410     061D  2E1F               	goto	u5190
  3411     061E                     u5191:
  3412     061E  2E31               	goto	l6135
  3413     061F                     u5190:
  3414     061F                     l6131:
  3415                           
  3416                           ;main.c: 636:            DHTRESULT(0x40, 0, 7, TOUT, dhtresult, COM);
  3417     061F  01E0               	clrf	DHTRESULT@tris^(0+128)
  3418     0620  3007               	movlw	7
  3419     0621  00E1               	movwf	DHTRESULT@conector^(0+128)
  3420     0622  083A               	movf	_TOUT^(0+128),w
  3421     0623  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3422     0624  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3423     0625  00E3               	movwf	DHTRESULT@dht^(0+128)
  3424     0626  30EC               	movlw	(low (_COM| 0))& (0+255)
  3425     0627  00E4               	movwf	DHTRESULT@COM^(0+128)
  3426     0628  3040               	movlw	64
  3427     0629  318D  25FF  3182   	fcall	_DHTRESULT
  3428     062C                     l6133:
  3429                           
  3430                           ;main.c: 637:            meddone &= ~0x40 ;
  3431     062C  30BF               	movlw	191
  3432     062D  0021               	movlb	1	; select bank1
  3433     062E  05A2               	andwf	_meddone^(0+128),f
  3434     062F  30FF               	movlw	255
  3435     0630  05A3               	andwf	(_meddone+1)^(0+128),f
  3436     0631                     l6135:
  3437     0631  3032               	movlw	50
  3438     0632  0643               	xorwf	(_sport^(0+128)+6),w
  3439     0633  1D03               	btfss	3,2
  3440     0634  2E36               	goto	u5201
  3441     0635  2E37               	goto	u5200
  3442     0636                     u5201:
  3443     0636  2E54               	goto	l6143
  3444     0637                     u5200:
  3445     0637                     l6137:
  3446     0637  0831               	movf	_i2busy^(0+128),w
  3447     0638  1D03               	btfss	3,2
  3448     0639  2E3B               	goto	u5211
  3449     063A  2E3C               	goto	u5210
  3450     063B                     u5211:
  3451     063B  2E54               	goto	l6143
  3452     063C                     u5210:
  3453     063C                     l6139:
  3454                           
  3455                           ;main.c: 639:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x40, 7);
  3456     063C  308C               	movlw	140
  3457     063D  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3458     063E  3000               	movlw	0
  3459     063F  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3460     0640  300C               	movlw	12
  3461     0641  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3462     0642  3000               	movlw	0
  3463     0643  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3464     0644  300C               	movlw	12
  3465     0645  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3466     0646  3001               	movlw	1
  3467     0647  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3468     0648  3040               	movlw	64
  3469     0649  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3470     064A  3007               	movlw	7
  3471     064B  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3472     064C  318E  26E5  3182   	fcall	_DS18B20_Read
  3473     064F                     l6141:
  3474                           
  3475                           ;main.c: 640:            meddone &= ~0x40 ;
  3476     064F  30BF               	movlw	191
  3477     0650  0021               	movlb	1	; select bank1
  3478     0651  05A2               	andwf	_meddone^(0+128),f
  3479     0652  30FF               	movlw	255
  3480     0653  05A3               	andwf	(_meddone+1)^(0+128),f
  3481     0654                     l6143:
  3482     0654  3033               	movlw	51
  3483     0655  0643               	xorwf	(_sport^(0+128)+6),w
  3484     0656  1D03               	btfss	3,2
  3485     0657  2E59               	goto	u5221
  3486     0658  2E5A               	goto	u5220
  3487     0659                     u5221:
  3488     0659  2E6C               	goto	l6159
  3489     065A                     u5220:
  3490     065A                     l6145:
  3491     065A  0831               	movf	_i2busy^(0+128),w
  3492     065B  1D03               	btfss	3,2
  3493     065C  2E5E               	goto	u5231
  3494     065D  2E5F               	goto	u5230
  3495     065E                     u5231:
  3496     065E  2E6C               	goto	l6159
  3497     065F                     u5230:
  3498     065F                     l6147:
  3499                           
  3500                           ;main.c: 642:            i2cfinish=0;
  3501     065F  01B5               	clrf	_i2cfinish^(0+128)
  3502     0660                     l6149:
  3503                           
  3504                           ;main.c: 643:            i2cbgin=1;
  3505     0660  01B6               	clrf	_i2cbgin^(0+128)
  3506     0661  0AB6               	incf	_i2cbgin^(0+128),f
  3507     0662                     l6151:
  3508                           
  3509                           ;main.c: 644:            i2select=1;
  3510     0662  01B2               	clrf	_i2select^(0+128)
  3511     0663  0AB2               	incf	_i2select^(0+128),f
  3512     0664                     l6153:
  3513                           
  3514                           ;main.c: 645:            i2busy=1;
  3515     0664  01B1               	clrf	_i2busy^(0+128)
  3516     0665  0AB1               	incf	_i2busy^(0+128),f
  3517     0666                     l6155:
  3518                           
  3519                           ;main.c: 646:            act_com=7;
  3520     0666  3007               	movlw	7
  3521     0667  00B0               	movwf	_act_com^(0+128)
  3522     0668                     l6157:
  3523                           
  3524                           ;main.c: 647:            meddone &= ~0x40;
  3525     0668  30BF               	movlw	191
  3526     0669  05A2               	andwf	_meddone^(0+128),f
  3527     066A  30FF               	movlw	255
  3528     066B  05A3               	andwf	(_meddone+1)^(0+128),f
  3529     066C                     l6159:
  3530     066C  3034               	movlw	52
  3531     066D  0643               	xorwf	(_sport^(0+128)+6),w
  3532     066E  1D03               	btfss	3,2
  3533     066F  2E71               	goto	u5241
  3534     0670  2E72               	goto	u5240
  3535     0671                     u5241:
  3536     0671  2E84               	goto	l6175
  3537     0672                     u5240:
  3538     0672                     l6161:
  3539     0672  0831               	movf	_i2busy^(0+128),w
  3540     0673  1D03               	btfss	3,2
  3541     0674  2E76               	goto	u5251
  3542     0675  2E77               	goto	u5250
  3543     0676                     u5251:
  3544     0676  2E84               	goto	l6175
  3545     0677                     u5250:
  3546     0677                     l6163:
  3547                           
  3548                           ;main.c: 649:            i2cfinish=0;
  3549     0677  01B5               	clrf	_i2cfinish^(0+128)
  3550     0678                     l6165:
  3551                           
  3552                           ;main.c: 650:            i2cbgin=1;
  3553     0678  01B6               	clrf	_i2cbgin^(0+128)
  3554     0679  0AB6               	incf	_i2cbgin^(0+128),f
  3555     067A                     l6167:
  3556                           
  3557                           ;main.c: 651:            i2select=2;
  3558     067A  3002               	movlw	2
  3559     067B  00B2               	movwf	_i2select^(0+128)
  3560     067C                     l6169:
  3561                           
  3562                           ;main.c: 652:            i2busy=1;
  3563     067C  01B1               	clrf	_i2busy^(0+128)
  3564     067D  0AB1               	incf	_i2busy^(0+128),f
  3565     067E                     l6171:
  3566                           
  3567                           ;main.c: 653:            act_com=7;
  3568     067E  3007               	movlw	7
  3569     067F  00B0               	movwf	_act_com^(0+128)
  3570     0680                     l6173:
  3571                           
  3572                           ;main.c: 654:            meddone &= ~0x40;
  3573     0680  30BF               	movlw	191
  3574     0681  05A2               	andwf	_meddone^(0+128),f
  3575     0682  30FF               	movlw	255
  3576     0683  05A3               	andwf	(_meddone+1)^(0+128),f
  3577     0684                     l6175:
  3578     0684  1FA2               	btfss	_meddone^(0+128),7
  3579     0685  2E87               	goto	u5261
  3580     0686  2E88               	goto	u5260
  3581     0687                     u5261:
  3582     0687  2EF6               	goto	l6223
  3583     0688                     u5260:
  3584     0688                     l6177:
  3585                           
  3586                           ;main.c: 657:         if(sport[7]=='1' && i2busy==0){
  3587     0688  3031               	movlw	49
  3588     0689  0644               	xorwf	(_sport^(0+128)+7),w
  3589     068A  1D03               	btfss	3,2
  3590     068B  2E8D               	goto	u5271
  3591     068C  2E8E               	goto	u5270
  3592     068D                     u5271:
  3593     068D  2EA5               	goto	l6185
  3594     068E                     u5270:
  3595     068E                     l6179:
  3596     068E  0831               	movf	_i2busy^(0+128),w
  3597     068F  1D03               	btfss	3,2
  3598     0690  2E92               	goto	u5281
  3599     0691  2E93               	goto	u5280
  3600     0692                     u5281:
  3601     0692  2EA5               	goto	l6185
  3602     0693                     u5280:
  3603     0693                     l6181:
  3604                           
  3605                           ;main.c: 659:            DHTRESULT(0x80, 0, 8, TOUT, dhtresult, COM);
  3606     0693  01E0               	clrf	DHTRESULT@tris^(0+128)
  3607     0694  3008               	movlw	8
  3608     0695  00E1               	movwf	DHTRESULT@conector^(0+128)
  3609     0696  083A               	movf	_TOUT^(0+128),w
  3610     0697  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3611     0698  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3612     0699  00E3               	movwf	DHTRESULT@dht^(0+128)
  3613     069A  30EC               	movlw	(low (_COM| 0))& (0+255)
  3614     069B  00E4               	movwf	DHTRESULT@COM^(0+128)
  3615     069C  3080               	movlw	128
  3616     069D  318D  25FF  3182   	fcall	_DHTRESULT
  3617     06A0                     l6183:
  3618                           
  3619                           ;main.c: 660:            meddone &= ~0x80 ;
  3620     06A0  307F               	movlw	127
  3621     06A1  0021               	movlb	1	; select bank1
  3622     06A2  05A2               	andwf	_meddone^(0+128),f
  3623     06A3  30FF               	movlw	255
  3624     06A4  05A3               	andwf	(_meddone+1)^(0+128),f
  3625     06A5                     l6185:
  3626     06A5  3032               	movlw	50
  3627     06A6  0644               	xorwf	(_sport^(0+128)+7),w
  3628     06A7  1D03               	btfss	3,2
  3629     06A8  2EAA               	goto	u5291
  3630     06A9  2EAB               	goto	u5290
  3631     06AA                     u5291:
  3632     06AA  2EC8               	goto	l6193
  3633     06AB                     u5290:
  3634     06AB                     l6187:
  3635     06AB  0831               	movf	_i2busy^(0+128),w
  3636     06AC  1D03               	btfss	3,2
  3637     06AD  2EAF               	goto	u5301
  3638     06AE  2EB0               	goto	u5300
  3639     06AF                     u5301:
  3640     06AF  2EC8               	goto	l6193
  3641     06B0                     u5300:
  3642     06B0                     l6189:
  3643                           
  3644                           ;main.c: 662:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x80, 7);
  3645     06B0  308C               	movlw	140
  3646     06B1  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3647     06B2  3000               	movlw	0
  3648     06B3  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3649     06B4  300C               	movlw	12
  3650     06B5  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3651     06B6  3000               	movlw	0
  3652     06B7  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3653     06B8  300C               	movlw	12
  3654     06B9  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3655     06BA  3001               	movlw	1
  3656     06BB  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3657     06BC  3080               	movlw	128
  3658     06BD  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3659     06BE  3007               	movlw	7
  3660     06BF  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3661     06C0  318E  26E5  3182   	fcall	_DS18B20_Read
  3662     06C3                     l6191:
  3663                           
  3664                           ;main.c: 663:            meddone &= ~0x80 ;
  3665     06C3  307F               	movlw	127
  3666     06C4  0021               	movlb	1	; select bank1
  3667     06C5  05A2               	andwf	_meddone^(0+128),f
  3668     06C6  30FF               	movlw	255
  3669     06C7  05A3               	andwf	(_meddone+1)^(0+128),f
  3670     06C8                     l6193:
  3671     06C8  3033               	movlw	51
  3672     06C9  0644               	xorwf	(_sport^(0+128)+7),w
  3673     06CA  1D03               	btfss	3,2
  3674     06CB  2ECD               	goto	u5311
  3675     06CC  2ECE               	goto	u5310
  3676     06CD                     u5311:
  3677     06CD  2EDE               	goto	l6207
  3678     06CE                     u5310:
  3679     06CE                     l6195:
  3680     06CE  0831               	movf	_i2busy^(0+128),w
  3681     06CF  1D03               	btfss	3,2
  3682     06D0  2ED2               	goto	u5321
  3683     06D1  2ED3               	goto	u5320
  3684     06D2                     u5321:
  3685     06D2  2EDE               	goto	l6207
  3686     06D3                     u5320:
  3687     06D3                     l6197:
  3688                           
  3689                           ;main.c: 665:            i2cfinish=0;
  3690     06D3  01B5               	clrf	_i2cfinish^(0+128)
  3691     06D4                     l6199:
  3692                           
  3693                           ;main.c: 666:            i2cbgin=1;
  3694     06D4  01B6               	clrf	_i2cbgin^(0+128)
  3695     06D5  0AB6               	incf	_i2cbgin^(0+128),f
  3696     06D6                     l6201:
  3697                           
  3698                           ;main.c: 667:            i2select=1;
  3699     06D6  01B2               	clrf	_i2select^(0+128)
  3700     06D7  0AB2               	incf	_i2select^(0+128),f
  3701     06D8                     l6203:
  3702                           
  3703                           ;main.c: 668:            act_com=8;
  3704     06D8  3008               	movlw	8
  3705     06D9  00B0               	movwf	_act_com^(0+128)
  3706     06DA                     l6205:
  3707                           
  3708                           ;main.c: 669:            meddone &= ~0x80;
  3709     06DA  307F               	movlw	127
  3710     06DB  05A2               	andwf	_meddone^(0+128),f
  3711     06DC  30FF               	movlw	255
  3712     06DD  05A3               	andwf	(_meddone+1)^(0+128),f
  3713     06DE                     l6207:
  3714     06DE  3034               	movlw	52
  3715     06DF  0644               	xorwf	(_sport^(0+128)+7),w
  3716     06E0  1D03               	btfss	3,2
  3717     06E1  2EE3               	goto	u5331
  3718     06E2  2EE4               	goto	u5330
  3719     06E3                     u5331:
  3720     06E3  2EF6               	goto	l6223
  3721     06E4                     u5330:
  3722     06E4                     l6209:
  3723     06E4  0831               	movf	_i2busy^(0+128),w
  3724     06E5  1D03               	btfss	3,2
  3725     06E6  2EE8               	goto	u5341
  3726     06E7  2EE9               	goto	u5340
  3727     06E8                     u5341:
  3728     06E8  2EF6               	goto	l6223
  3729     06E9                     u5340:
  3730     06E9                     l6211:
  3731                           
  3732                           ;main.c: 671:            i2cfinish=0;
  3733     06E9  01B5               	clrf	_i2cfinish^(0+128)
  3734     06EA                     l6213:
  3735                           
  3736                           ;main.c: 672:            i2cbgin=1;
  3737     06EA  01B6               	clrf	_i2cbgin^(0+128)
  3738     06EB  0AB6               	incf	_i2cbgin^(0+128),f
  3739     06EC                     l6215:
  3740                           
  3741                           ;main.c: 673:            i2select=2;
  3742     06EC  3002               	movlw	2
  3743     06ED  00B2               	movwf	_i2select^(0+128)
  3744     06EE                     l6217:
  3745                           
  3746                           ;main.c: 674:            i2busy=1;
  3747     06EE  01B1               	clrf	_i2busy^(0+128)
  3748     06EF  0AB1               	incf	_i2busy^(0+128),f
  3749     06F0                     l6219:
  3750                           
  3751                           ;main.c: 675:            act_com=8;
  3752     06F0  3008               	movlw	8
  3753     06F1  00B0               	movwf	_act_com^(0+128)
  3754     06F2                     l6221:
  3755                           
  3756                           ;main.c: 676:            meddone &= ~0x80;
  3757     06F2  307F               	movlw	127
  3758     06F3  05A2               	andwf	_meddone^(0+128),f
  3759     06F4  30FF               	movlw	255
  3760     06F5  05A3               	andwf	(_meddone+1)^(0+128),f
  3761     06F6                     l6223:
  3762     06F6  1C23               	btfss	(_meddone+1)^(0+128),0
  3763     06F7  2EF9               	goto	u5351
  3764     06F8  2EFA               	goto	u5350
  3765     06F9                     u5351:
  3766     06F9  2AE6               	goto	l303
  3767     06FA                     u5350:
  3768     06FA                     l6225:
  3769                           
  3770                           ;main.c: 679:         if(sport[8]=='1' && i2busy==0){
  3771     06FA  3031               	movlw	49
  3772     06FB  0645               	xorwf	(_sport^(0+128)+8),w
  3773     06FC  1D03               	btfss	3,2
  3774     06FD  2EFF               	goto	u5361
  3775     06FE  2F00               	goto	u5360
  3776     06FF                     u5361:
  3777     06FF  2F17               	goto	l6233
  3778     0700                     u5360:
  3779     0700                     l6227:
  3780     0700  0831               	movf	_i2busy^(0+128),w
  3781     0701  1D03               	btfss	3,2
  3782     0702  2F04               	goto	u5371
  3783     0703  2F05               	goto	u5370
  3784     0704                     u5371:
  3785     0704  2F17               	goto	l6233
  3786     0705                     u5370:
  3787     0705                     l6229:
  3788                           
  3789                           ;main.c: 680:            DHTRESULT(0x20, 0, 9, TOUT, dhtresult, COM);
  3790     0705  01E0               	clrf	DHTRESULT@tris^(0+128)
  3791     0706  3009               	movlw	9
  3792     0707  00E1               	movwf	DHTRESULT@conector^(0+128)
  3793     0708  083A               	movf	_TOUT^(0+128),w
  3794     0709  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3795     070A  3068               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3796     070B  00E3               	movwf	DHTRESULT@dht^(0+128)
  3797     070C  30EC               	movlw	(low (_COM| 0))& (0+255)
  3798     070D  00E4               	movwf	DHTRESULT@COM^(0+128)
  3799     070E  3020               	movlw	32
  3800     070F  318D  25FF  3182   	fcall	_DHTRESULT
  3801     0712                     l6231:
  3802                           
  3803                           ;main.c: 681:            meddone &= ~0x100 ;
  3804     0712  30FF               	movlw	255
  3805     0713  0021               	movlb	1	; select bank1
  3806     0714  05A2               	andwf	_meddone^(0+128),f
  3807     0715  30FE               	movlw	254
  3808     0716  05A3               	andwf	(_meddone+1)^(0+128),f
  3809     0717                     l6233:
  3810     0717  3032               	movlw	50
  3811     0718  0645               	xorwf	(_sport^(0+128)+8),w
  3812     0719  1D03               	btfss	3,2
  3813     071A  2F1C               	goto	u5381
  3814     071B  2F1D               	goto	u5380
  3815     071C                     u5381:
  3816     071C  2F3A               	goto	l6241
  3817     071D                     u5380:
  3818     071D                     l6235:
  3819     071D  0831               	movf	_i2busy^(0+128),w
  3820     071E  1D03               	btfss	3,2
  3821     071F  2F21               	goto	u5391
  3822     0720  2F22               	goto	u5390
  3823     0721                     u5391:
  3824     0721  2F3A               	goto	l6241
  3825     0722                     u5390:
  3826     0722                     l6237:
  3827                           
  3828                           ;main.c: 683:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x20, 9);
  3829     0722  308C               	movlw	140
  3830     0723  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3831     0724  3000               	movlw	0
  3832     0725  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3833     0726  300C               	movlw	12
  3834     0727  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3835     0728  3000               	movlw	0
  3836     0729  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3837     072A  300C               	movlw	12
  3838     072B  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3839     072C  3001               	movlw	1
  3840     072D  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3841     072E  3020               	movlw	32
  3842     072F  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3843     0730  3009               	movlw	9
  3844     0731  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3845     0732  318E  26E5  3182   	fcall	_DS18B20_Read
  3846     0735                     l6239:
  3847                           
  3848                           ;main.c: 684:            meddone &= ~0x100 ;
  3849     0735  30FF               	movlw	255
  3850     0736  0021               	movlb	1	; select bank1
  3851     0737  05A2               	andwf	_meddone^(0+128),f
  3852     0738  30FE               	movlw	254
  3853     0739  05A3               	andwf	(_meddone+1)^(0+128),f
  3854     073A                     l6241:
  3855     073A  3033               	movlw	51
  3856     073B  0645               	xorwf	(_sport^(0+128)+8),w
  3857     073C  1D03               	btfss	3,2
  3858     073D  2F3F               	goto	u5401
  3859     073E  2F40               	goto	u5400
  3860     073F                     u5401:
  3861     073F  2F50               	goto	l6255
  3862     0740                     u5400:
  3863     0740                     l6243:
  3864     0740  0831               	movf	_i2busy^(0+128),w
  3865     0741  1D03               	btfss	3,2
  3866     0742  2F44               	goto	u5411
  3867     0743  2F45               	goto	u5410
  3868     0744                     u5411:
  3869     0744  2F50               	goto	l6255
  3870     0745                     u5410:
  3871     0745                     l6245:
  3872                           
  3873                           ;main.c: 686:            i2cfinish=0;
  3874     0745  01B5               	clrf	_i2cfinish^(0+128)
  3875     0746                     l6247:
  3876                           
  3877                           ;main.c: 687:            i2cbgin=1;
  3878     0746  01B6               	clrf	_i2cbgin^(0+128)
  3879     0747  0AB6               	incf	_i2cbgin^(0+128),f
  3880     0748                     l6249:
  3881                           
  3882                           ;main.c: 688:            i2select=1;
  3883     0748  01B2               	clrf	_i2select^(0+128)
  3884     0749  0AB2               	incf	_i2select^(0+128),f
  3885     074A                     l6251:
  3886                           
  3887                           ;main.c: 689:            act_com=9;
  3888     074A  3009               	movlw	9
  3889     074B  00B0               	movwf	_act_com^(0+128)
  3890     074C                     l6253:
  3891                           
  3892                           ;main.c: 690:            meddone &= ~0x100;
  3893     074C  30FF               	movlw	255
  3894     074D  05A2               	andwf	_meddone^(0+128),f
  3895     074E  30FE               	movlw	254
  3896     074F  05A3               	andwf	(_meddone+1)^(0+128),f
  3897     0750                     l6255:
  3898     0750  3034               	movlw	52
  3899     0751  0645               	xorwf	(_sport^(0+128)+8),w
  3900     0752  1D03               	btfss	3,2
  3901     0753  2F55               	goto	u5421
  3902     0754  2F56               	goto	u5420
  3903     0755                     u5421:
  3904     0755  2AE6               	goto	l303
  3905     0756                     u5420:
  3906     0756                     l6257:
  3907     0756  0831               	movf	_i2busy^(0+128),w
  3908     0757  1D03               	btfss	3,2
  3909     0758  2F5A               	goto	u5431
  3910     0759  2F5B               	goto	u5430
  3911     075A                     u5431:
  3912     075A  2AE6               	goto	l303
  3913     075B                     u5430:
  3914     075B                     l6259:
  3915                           
  3916                           ;main.c: 692:            i2cfinish=0;
  3917     075B  01B5               	clrf	_i2cfinish^(0+128)
  3918     075C                     l6261:
  3919                           
  3920                           ;main.c: 693:            i2cbgin=1;
  3921     075C  01B6               	clrf	_i2cbgin^(0+128)
  3922     075D  0AB6               	incf	_i2cbgin^(0+128),f
  3923     075E                     l6263:
  3924                           
  3925                           ;main.c: 694:            i2select=2;
  3926     075E  3002               	movlw	2
  3927     075F  00B2               	movwf	_i2select^(0+128)
  3928     0760                     l6265:
  3929                           
  3930                           ;main.c: 695:            i2busy=1;
  3931     0760  01B1               	clrf	_i2busy^(0+128)
  3932     0761  0AB1               	incf	_i2busy^(0+128),f
  3933     0762                     l6267:
  3934                           
  3935                           ;main.c: 696:            act_com=9;
  3936     0762  3009               	movlw	9
  3937     0763  00B0               	movwf	_act_com^(0+128)
  3938     0764                     l6269:
  3939                           
  3940                           ;main.c: 697:            meddone &= ~0x100;
  3941     0764  30FF               	movlw	255
  3942     0765  05A2               	andwf	_meddone^(0+128),f
  3943     0766  30FE               	movlw	254
  3944     0767  05A3               	andwf	(_meddone+1)^(0+128),f
  3945     0768  2AE6               	goto	l303
  3946     0769  3182  2A59         	ljmp	start
  3947     076B                     __end_of_main:
  3948                           
  3949                           	psect	text1
  3950     0C44                     __ptext1:	
  3951 ;; *************** function _port_config *****************
  3952 ;; Defined at:
  3953 ;;		line 371 in file "main.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  stype           1    wreg     PTR unsigned char 
  3956 ;;		 -> sport(10), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  stype           1    1[BANK0 ] PTR unsigned char 
  3959 ;;		 -> sport(10), 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3969 ;;      Params:         0       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       1       0       0       0       0       0       0
  3971 ;;      Temps:          0       1       0       0       0       0       0       0
  3972 ;;      Totals:         0       2       0       0       0       0       0       0
  3973 ;;Total ram usage:        2 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 2
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983     0C44                     _port_config:	
  3984                           ;psect for function _port_config
  3985                           
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in _port_config: [wreg+fsr1l+fsr1h+status,2+status,0]
  3989                           ;port_config@stype stored from wreg
  3990     0C44  0020               	movlb	0	; select bank0
  3991     0C45  00A1               	movwf	port_config@stype
  3992     0C46                     l4147:
  3993                           
  3994                           ;main.c: 372:     if(stype[0]<='2'){
  3995     0C46  0821               	movf	port_config@stype,w
  3996     0C47  0086               	movwf	6
  3997     0C48  0187               	clrf	7
  3998     0C49  3033               	movlw	51
  3999     0C4A  0201               	subwf	1,w
  4000     0C4B  1803               	skipnc
  4001     0C4C  2C4E               	goto	u2721
  4002     0C4D  2C4F               	goto	u2720
  4003     0C4E                     u2721:
  4004     0C4E  2C54               	goto	l276
  4005     0C4F                     u2720:
  4006     0C4F                     l4149:
  4007                           
  4008                           ;main.c: 373:         RA0=0;
  4009     0C4F  100C               	bcf	12,0	;volatile
  4010                           
  4011                           ;main.c: 374:         RC1=0;
  4012     0C50  108E               	bcf	14,1	;volatile
  4013                           
  4014                           ;main.c: 375:         TRISA |= 0x01;
  4015     0C51  0021               	movlb	1	; select bank1
  4016     0C52  140C               	bsf	12,0	;volatile
  4017                           
  4018                           ;main.c: 376:     }else{
  4019     0C53  2C5B               	goto	l4153
  4020     0C54                     l276:
  4021                           
  4022                           ;main.c: 377:         RA0=0;
  4023     0C54  100C               	bcf	12,0	;volatile
  4024                           
  4025                           ;main.c: 378:         RC1=1;
  4026     0C55  148E               	bsf	14,1	;volatile
  4027     0C56                     l4151:
  4028                           
  4029                           ;main.c: 379:         TRISA &= ~0x01;
  4030     0C56  30FE               	movlw	254
  4031     0C57  00A0               	movwf	??_port_config
  4032     0C58  0820               	movf	??_port_config,w
  4033     0C59  0021               	movlb	1	; select bank1
  4034     0C5A  058C               	andwf	12,f	;volatile
  4035     0C5B                     l4153:
  4036                           
  4037                           ;main.c: 381:     if(stype[1]<='2'){
  4038     0C5B  0020               	movlb	0	; select bank0
  4039     0C5C  0A21               	incf	port_config@stype,w
  4040     0C5D  0086               	movwf	6
  4041     0C5E  0187               	clrf	7
  4042     0C5F  3033               	movlw	51
  4043     0C60  0201               	subwf	1,w
  4044     0C61  1803               	skipnc
  4045     0C62  2C64               	goto	u2731
  4046     0C63  2C65               	goto	u2730
  4047     0C64                     u2731:
  4048     0C64  2C6A               	goto	l278
  4049     0C65                     u2730:
  4050     0C65                     l4155:
  4051                           
  4052                           ;main.c: 382:         RA1=1;
  4053     0C65  148C               	bsf	12,1	;volatile
  4054                           
  4055                           ;main.c: 383:         RC2=0;
  4056     0C66  110E               	bcf	14,2	;volatile
  4057                           
  4058                           ;main.c: 384:         TRISA |= 0x02;
  4059     0C67  0021               	movlb	1	; select bank1
  4060     0C68  148C               	bsf	12,1	;volatile
  4061                           
  4062                           ;main.c: 385:     }else{
  4063     0C69  2C71               	goto	l4159
  4064     0C6A                     l278:
  4065                           
  4066                           ;main.c: 386:         RA1=0;
  4067     0C6A  108C               	bcf	12,1	;volatile
  4068                           
  4069                           ;main.c: 387:         RC2=1;
  4070     0C6B  150E               	bsf	14,2	;volatile
  4071     0C6C                     l4157:
  4072                           
  4073                           ;main.c: 388:         TRISA &= ~0x02;
  4074     0C6C  30FD               	movlw	253
  4075     0C6D  00A0               	movwf	??_port_config
  4076     0C6E  0820               	movf	??_port_config,w
  4077     0C6F  0021               	movlb	1	; select bank1
  4078     0C70  058C               	andwf	12,f	;volatile
  4079     0C71                     l4159:
  4080                           
  4081                           ;main.c: 390:     if(stype[2]<='2'){
  4082     0C71  0020               	movlb	0	; select bank0
  4083     0C72  0821               	movf	port_config@stype,w
  4084     0C73  3E02               	addlw	2
  4085     0C74  0086               	movwf	6
  4086     0C75  0187               	clrf	7
  4087     0C76  3033               	movlw	51
  4088     0C77  0201               	subwf	1,w
  4089     0C78  1803               	skipnc
  4090     0C79  2C7B               	goto	u2741
  4091     0C7A  2C7C               	goto	u2740
  4092     0C7B                     u2741:
  4093     0C7B  2C81               	goto	l280
  4094     0C7C                     u2740:
  4095     0C7C                     l4161:
  4096                           
  4097                           ;main.c: 391:         RA2=1;
  4098     0C7C  150C               	bsf	12,2	;volatile
  4099                           
  4100                           ;main.c: 392:         RC5=0;
  4101     0C7D  128E               	bcf	14,5	;volatile
  4102                           
  4103                           ;main.c: 393:         TRISA |= 0x04;
  4104     0C7E  0021               	movlb	1	; select bank1
  4105     0C7F  150C               	bsf	12,2	;volatile
  4106                           
  4107                           ;main.c: 394:     }else{
  4108     0C80  2C88               	goto	l4165
  4109     0C81                     l280:
  4110                           
  4111                           ;main.c: 395:         RA2=0;
  4112     0C81  110C               	bcf	12,2	;volatile
  4113                           
  4114                           ;main.c: 396:         RC5=1;
  4115     0C82  168E               	bsf	14,5	;volatile
  4116     0C83                     l4163:
  4117                           
  4118                           ;main.c: 397:         TRISA &= ~0x04;
  4119     0C83  30FB               	movlw	251
  4120     0C84  00A0               	movwf	??_port_config
  4121     0C85  0820               	movf	??_port_config,w
  4122     0C86  0021               	movlb	1	; select bank1
  4123     0C87  058C               	andwf	12,f	;volatile
  4124     0C88                     l4165:
  4125                           
  4126                           ;main.c: 399:     if(stype[3]<='2'){
  4127     0C88  0020               	movlb	0	; select bank0
  4128     0C89  0821               	movf	port_config@stype,w
  4129     0C8A  3E03               	addlw	3
  4130     0C8B  0086               	movwf	6
  4131     0C8C  0187               	clrf	7
  4132     0C8D  3033               	movlw	51
  4133     0C8E  0201               	subwf	1,w
  4134     0C8F  1803               	skipnc
  4135     0C90  2C92               	goto	u2751
  4136     0C91  2C93               	goto	u2750
  4137     0C92                     u2751:
  4138     0C92  2C98               	goto	l282
  4139     0C93                     u2750:
  4140     0C93                     l4167:
  4141                           
  4142                           ;main.c: 400:         RA3=1;
  4143     0C93  158C               	bsf	12,3	;volatile
  4144                           
  4145                           ;main.c: 401:         RB2=0;
  4146     0C94  110D               	bcf	13,2	;volatile
  4147                           
  4148                           ;main.c: 402:         TRISA |= 0x08;
  4149     0C95  0021               	movlb	1	; select bank1
  4150     0C96  158C               	bsf	12,3	;volatile
  4151                           
  4152                           ;main.c: 403:     }else{
  4153     0C97  2C9F               	goto	l4171
  4154     0C98                     l282:
  4155                           
  4156                           ;main.c: 404:         RA3=0;
  4157     0C98  118C               	bcf	12,3	;volatile
  4158                           
  4159                           ;main.c: 405:         RB2=1;
  4160     0C99  150D               	bsf	13,2	;volatile
  4161     0C9A                     l4169:
  4162                           
  4163                           ;main.c: 406:         TRISA &= ~0x08;
  4164     0C9A  30F7               	movlw	247
  4165     0C9B  00A0               	movwf	??_port_config
  4166     0C9C  0820               	movf	??_port_config,w
  4167     0C9D  0021               	movlb	1	; select bank1
  4168     0C9E  058C               	andwf	12,f	;volatile
  4169     0C9F                     l4171:
  4170                           
  4171                           ;main.c: 408:     if(stype[4]<='2'){
  4172     0C9F  0020               	movlb	0	; select bank0
  4173     0CA0  0821               	movf	port_config@stype,w
  4174     0CA1  3E04               	addlw	4
  4175     0CA2  0086               	movwf	6
  4176     0CA3  0187               	clrf	7
  4177     0CA4  3033               	movlw	51
  4178     0CA5  0201               	subwf	1,w
  4179     0CA6  1803               	skipnc
  4180     0CA7  2CA9               	goto	u2761
  4181     0CA8  2CAA               	goto	u2760
  4182     0CA9                     u2761:
  4183     0CA9  2CAF               	goto	l284
  4184     0CAA                     u2760:
  4185     0CAA                     l4173:
  4186                           
  4187                           ;main.c: 409:         RA4=1;
  4188     0CAA  160C               	bsf	12,4	;volatile
  4189                           
  4190                           ;main.c: 410:         RB1=0;
  4191     0CAB  108D               	bcf	13,1	;volatile
  4192                           
  4193                           ;main.c: 411:         TRISA |= 0x10;
  4194     0CAC  0021               	movlb	1	; select bank1
  4195     0CAD  160C               	bsf	12,4	;volatile
  4196                           
  4197                           ;main.c: 412:     }else{
  4198     0CAE  2CB6               	goto	l4177
  4199     0CAF                     l284:
  4200                           
  4201                           ;main.c: 413:         RA4=0;
  4202     0CAF  120C               	bcf	12,4	;volatile
  4203                           
  4204                           ;main.c: 414:         RB1=1;
  4205     0CB0  148D               	bsf	13,1	;volatile
  4206     0CB1                     l4175:
  4207                           
  4208                           ;main.c: 415:         TRISA &= ~0x10;
  4209     0CB1  30EF               	movlw	239
  4210     0CB2  00A0               	movwf	??_port_config
  4211     0CB3  0820               	movf	??_port_config,w
  4212     0CB4  0021               	movlb	1	; select bank1
  4213     0CB5  058C               	andwf	12,f	;volatile
  4214     0CB6                     l4177:
  4215                           
  4216                           ;main.c: 417:     if(stype[5]<='2'){
  4217     0CB6  0020               	movlb	0	; select bank0
  4218     0CB7  0821               	movf	port_config@stype,w
  4219     0CB8  3E05               	addlw	5
  4220     0CB9  0086               	movwf	6
  4221     0CBA  0187               	clrf	7
  4222     0CBB  3033               	movlw	51
  4223     0CBC  0201               	subwf	1,w
  4224     0CBD  1803               	skipnc
  4225     0CBE  2CC0               	goto	u2771
  4226     0CBF  2CC1               	goto	u2770
  4227     0CC0                     u2771:
  4228     0CC0  2CC6               	goto	l286
  4229     0CC1                     u2770:
  4230     0CC1                     l4179:
  4231                           
  4232                           ;main.c: 418:         RC0=1;
  4233     0CC1  140E               	bsf	14,0	;volatile
  4234                           
  4235                           ;main.c: 419:         RB5=0;
  4236     0CC2  128D               	bcf	13,5	;volatile
  4237                           
  4238                           ;main.c: 420:         TRISC |= 0x01;
  4239     0CC3  0021               	movlb	1	; select bank1
  4240     0CC4  140E               	bsf	14,0	;volatile
  4241                           
  4242                           ;main.c: 421:     }else{
  4243     0CC5  2CCD               	goto	l4183
  4244     0CC6                     l286:
  4245                           
  4246                           ;main.c: 422:         RC0=0;
  4247     0CC6  100E               	bcf	14,0	;volatile
  4248                           
  4249                           ;main.c: 423:         RB5=1;
  4250     0CC7  168D               	bsf	13,5	;volatile
  4251     0CC8                     l4181:
  4252                           
  4253                           ;main.c: 424:         TRISC &= ~0x01;
  4254     0CC8  30FE               	movlw	254
  4255     0CC9  00A0               	movwf	??_port_config
  4256     0CCA  0820               	movf	??_port_config,w
  4257     0CCB  0021               	movlb	1	; select bank1
  4258     0CCC  058E               	andwf	14,f	;volatile
  4259     0CCD                     l4183:
  4260                           
  4261                           ;main.c: 426:     if(stype[6]<='2'){
  4262     0CCD  0020               	movlb	0	; select bank0
  4263     0CCE  0821               	movf	port_config@stype,w
  4264     0CCF  3E06               	addlw	6
  4265     0CD0  0086               	movwf	6
  4266     0CD1  0187               	clrf	7
  4267     0CD2  3033               	movlw	51
  4268     0CD3  0201               	subwf	1,w
  4269     0CD4  1803               	skipnc
  4270     0CD5  2CD7               	goto	u2781
  4271     0CD6  2CD8               	goto	u2780
  4272     0CD7                     u2781:
  4273     0CD7  2CDD               	goto	l288
  4274     0CD8                     u2780:
  4275     0CD8                     l4185:
  4276                           
  4277                           ;main.c: 427:         RA6=1;
  4278     0CD8  170C               	bsf	12,6	;volatile
  4279                           
  4280                           ;main.c: 428:         RB3=0;
  4281     0CD9  118D               	bcf	13,3	;volatile
  4282                           
  4283                           ;main.c: 429:         TRISA |= 0x40;
  4284     0CDA  0021               	movlb	1	; select bank1
  4285     0CDB  170C               	bsf	12,6	;volatile
  4286                           
  4287                           ;main.c: 430:     }else{
  4288     0CDC  2CE4               	goto	l4189
  4289     0CDD                     l288:
  4290                           
  4291                           ;main.c: 431:         RA6=1;
  4292     0CDD  170C               	bsf	12,6	;volatile
  4293                           
  4294                           ;main.c: 432:         RB3=1;
  4295     0CDE  158D               	bsf	13,3	;volatile
  4296     0CDF                     l4187:
  4297                           
  4298                           ;main.c: 433:         TRISA &= ~0x40;
  4299     0CDF  30BF               	movlw	191
  4300     0CE0  00A0               	movwf	??_port_config
  4301     0CE1  0820               	movf	??_port_config,w
  4302     0CE2  0021               	movlb	1	; select bank1
  4303     0CE3  058C               	andwf	12,f	;volatile
  4304     0CE4                     l4189:
  4305                           
  4306                           ;main.c: 435:     if(stype[7]<='2'){
  4307     0CE4  0020               	movlb	0	; select bank0
  4308     0CE5  0821               	movf	port_config@stype,w
  4309     0CE6  3E07               	addlw	7
  4310     0CE7  0086               	movwf	6
  4311     0CE8  0187               	clrf	7
  4312     0CE9  3033               	movlw	51
  4313     0CEA  0201               	subwf	1,w
  4314     0CEB  1803               	skipnc
  4315     0CEC  2CEE               	goto	u2791
  4316     0CED  2CEF               	goto	u2790
  4317     0CEE                     u2791:
  4318     0CEE  2CF4               	goto	l290
  4319     0CEF                     u2790:
  4320     0CEF                     l4191:
  4321                           
  4322                           ;main.c: 436:         RA7=1;
  4323     0CEF  178C               	bsf	12,7	;volatile
  4324                           
  4325                           ;main.c: 437:         RB4=0;
  4326     0CF0  120D               	bcf	13,4	;volatile
  4327                           
  4328                           ;main.c: 438:         TRISA |= 0x80;
  4329     0CF1  0021               	movlb	1	; select bank1
  4330     0CF2  178C               	bsf	12,7	;volatile
  4331                           
  4332                           ;main.c: 439:     }else{
  4333     0CF3  2CFB               	goto	l4195
  4334     0CF4                     l290:
  4335                           
  4336                           ;main.c: 440:         RA7=0;
  4337     0CF4  138C               	bcf	12,7	;volatile
  4338                           
  4339                           ;main.c: 441:         RB4=1;
  4340     0CF5  160D               	bsf	13,4	;volatile
  4341     0CF6                     l4193:
  4342                           
  4343                           ;main.c: 442:         TRISA &= ~0x80;
  4344     0CF6  307F               	movlw	127
  4345     0CF7  00A0               	movwf	??_port_config
  4346     0CF8  0820               	movf	??_port_config,w
  4347     0CF9  0021               	movlb	1	; select bank1
  4348     0CFA  058C               	andwf	12,f	;volatile
  4349     0CFB                     l4195:
  4350                           
  4351                           ;main.c: 444:     if(stype[8]<='2'){
  4352     0CFB  0020               	movlb	0	; select bank0
  4353     0CFC  0821               	movf	port_config@stype,w
  4354     0CFD  3E08               	addlw	8
  4355     0CFE  0086               	movwf	6
  4356     0CFF  0187               	clrf	7
  4357     0D00  3033               	movlw	51
  4358     0D01  0201               	subwf	1,w
  4359     0D02  1803               	skipnc
  4360     0D03  2D05               	goto	u2801
  4361     0D04  2D06               	goto	u2800
  4362     0D05                     u2801:
  4363     0D05  2D0B               	goto	l292
  4364     0D06                     u2800:
  4365     0D06                     l4197:
  4366                           
  4367                           ;main.c: 445:         RA5=1;
  4368     0D06  168C               	bsf	12,5	;volatile
  4369                           
  4370                           ;main.c: 446:         RB0=0;
  4371     0D07  100D               	bcf	13,0	;volatile
  4372                           
  4373                           ;main.c: 447:         TRISA |= 0x20;
  4374     0D08  0021               	movlb	1	; select bank1
  4375     0D09  168C               	bsf	12,5	;volatile
  4376                           
  4377                           ;main.c: 448:     }else{
  4378     0D0A  2D12               	goto	l4201
  4379     0D0B                     l292:
  4380                           
  4381                           ;main.c: 449:         RA5=0;
  4382     0D0B  128C               	bcf	12,5	;volatile
  4383                           
  4384                           ;main.c: 450:         RB0=1;
  4385     0D0C  140D               	bsf	13,0	;volatile
  4386     0D0D                     l4199:
  4387                           
  4388                           ;main.c: 451:         TRISA &= ~0x20;
  4389     0D0D  30DF               	movlw	223
  4390     0D0E  00A0               	movwf	??_port_config
  4391     0D0F  0820               	movf	??_port_config,w
  4392     0D10  0021               	movlb	1	; select bank1
  4393     0D11  058C               	andwf	12,f	;volatile
  4394     0D12                     l4201:
  4395                           
  4396                           ;main.c: 453:     if(stype[9]<='2'){
  4397     0D12  0020               	movlb	0	; select bank0
  4398     0D13  0821               	movf	port_config@stype,w
  4399     0D14  3E09               	addlw	9
  4400     0D15  0086               	movwf	6
  4401     0D16  0187               	clrf	7
  4402     0D17  3033               	movlw	51
  4403     0D18  0201               	subwf	1,w
  4404     0D19  1803               	skipnc
  4405     0D1A  2D1C               	goto	u2811
  4406     0D1B  2D1D               	goto	u2810
  4407     0D1C                     u2811:
  4408     0D1C  2D20               	goto	l295
  4409     0D1D                     u2810:
  4410     0D1D                     l4203:
  4411                           
  4412                           ;main.c: 454:         RB7=1;
  4413     0D1D  178D               	bsf	13,7	;volatile
  4414                           
  4415                           ;main.c: 455:         TRISB |= 0x80;
  4416     0D1E  0021               	movlb	1	; select bank1
  4417     0D1F  178D               	bsf	13,7	;volatile
  4418     0D20                     l295:
  4419     0D20  0008               	return
  4420     0D21                     __end_of_port_config:
  4421                           
  4422                           	psect	text2
  4423     0D21                     __ptext2:	
  4424 ;; *************** function _i2c_Read *****************
  4425 ;; Defined at:
  4426 ;;		line 325 in file "main.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  com             1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  com             1   19[BANK1 ] unsigned char 
  4431 ;;  j               2   22[BANK1 ] int 
  4432 ;;  j               2   20[BANK1 ] int 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4442 ;;      Params:         0       0       0       0       0       0       0       0
  4443 ;;      Locals:         0       0       5       0       0       0       0       0
  4444 ;;      Temps:          0       2       0       0       0       0       0       0
  4445 ;;      Totals:         0       2       5       0       0       0       0       0
  4446 ;;Total ram usage:        7 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 10
  4449 ;; This function calls:
  4450 ;;		_sprintf
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456     0D21                     _i2c_Read:	
  4457                           ;psect for function _i2c_Read
  4458                           
  4459                           
  4460                           ;incstack = 0
  4461                           ; Regs used in _i2c_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4462                           ;i2c_Read@com stored from wreg
  4463     0D21  0021               	movlb	1	; select bank1
  4464     0D22  00E0               	movwf	i2c_Read@com^(0+128)
  4465     0D23                     l5621:
  4466                           
  4467                           ;main.c: 326:       if(i2cbgin){
  4468     0D23  0836               	movf	_i2cbgin^(0+128),w
  4469     0D24  1903               	btfsc	3,2
  4470     0D25  2D27               	goto	u4421
  4471     0D26  2D28               	goto	u4420
  4472     0D27                     u4421:
  4473     0D27  2D3A               	goto	l5631
  4474     0D28                     u4420:
  4475     0D28                     l5623:
  4476                           
  4477                           ;main.c: 327:       _delay((unsigned long)((100)*(32000000/4000.0)));
  4478     0D28  3005               	movlw	5
  4479     0D29  0020               	movlb	0	; select bank0
  4480     0D2A  00EB               	movwf	??_i2c_Read+1
  4481     0D2B  300F               	movlw	15
  4482     0D2C  00EA               	movwf	??_i2c_Read
  4483     0D2D  30F1               	movlw	241
  4484     0D2E                     u5817:
  4485     0D2E  0B89               	decfsz	9,f
  4486     0D2F  2D2E               	goto	u5817
  4487     0D30  0BEA               	decfsz	??_i2c_Read,f
  4488     0D31  2D2E               	goto	u5817
  4489     0D32  0BEB               	decfsz	??_i2c_Read+1,f
  4490     0D33  2D2E               	goto	u5817
  4491     0D34                     l5625:
  4492                           
  4493                           ;main.c: 328:       PIE1bits.SSPIE = 1;
  4494     0D34  0021               	movlb	1	; select bank1
  4495     0D35  1591               	bsf	17,3	;volatile
  4496     0D36                     l5627:
  4497                           
  4498                           ;main.c: 329:       SSPCON2bits.SEN = 1;
  4499     0D36  0024               	movlb	4	; select bank4
  4500     0D37  1416               	bsf	22,0	;volatile
  4501     0D38                     l5629:
  4502                           
  4503                           ;main.c: 330:       i2cbgin=0;
  4504     0D38  0021               	movlb	1	; select bank1
  4505     0D39  01B6               	clrf	_i2cbgin^(0+128)
  4506     0D3A                     l5631:
  4507                           
  4508                           ;main.c: 332:       if(i2cfinish==1 && i2select==1){
  4509     0D3A  0335               	decf	_i2cfinish^(0+128),w
  4510     0D3B  1D03               	btfss	3,2
  4511     0D3C  2D3E               	goto	u4431
  4512     0D3D  2D3F               	goto	u4430
  4513     0D3E                     u4431:
  4514     0D3E  2D95               	goto	l5681
  4515     0D3F                     u4430:
  4516     0D3F                     l5633:
  4517     0D3F  0332               	decf	_i2select^(0+128),w
  4518     0D40  1D03               	btfss	3,2
  4519     0D41  2D43               	goto	u4441
  4520     0D42  2D44               	goto	u4440
  4521     0D43                     u4441:
  4522     0D43  2D95               	goto	l5681
  4523     0D44                     u4440:
  4524     0D44                     l5635:
  4525                           
  4526                           ;main.c: 333:           sprintf(LUX,"%u",Lum);
  4527     0D44  305B               	movlw	low _LUX
  4528     0D45  00CD               	movwf	sprintf@s^(0+128)
  4529     0D46  3001               	movlw	high _LUX
  4530     0D47  00CE               	movwf	(sprintf@s+1)^(0+128)
  4531     0D48  3000               	movlw	low (STR_1| (0+32768))
  4532     0D49  00CF               	movwf	sprintf@fmt^(0+128)
  4533     0D4A  3098               	movlw	high (STR_1| (0+32768))
  4534     0D4B  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  4535     0D4C  084C               	movf	(_Lum+1)^(0+128),w
  4536     0D4D  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  4537     0D4E  084B               	movf	_Lum^(0+128),w
  4538     0D4F  00D1               	movwf	(?_sprintf^(0+128)+4)
  4539     0D50  3194  24F4  318D   	fcall	_sprintf
  4540     0D53                     l5637:
  4541                           
  4542                           ;main.c: 334:           for(int j=0; j<5; j++)
  4543     0D53  0021               	movlb	1	; select bank1
  4544     0D54  01E1               	clrf	i2c_Read@j^(0+128)
  4545     0D55  01E2               	clrf	(i2c_Read@j+1)^(0+128)
  4546     0D56                     l5643:
  4547                           
  4548                           ;main.c: 335:           if(LUX[j]==0) LUX[j]='N';
  4549     0D56  0021               	movlb	1	; select bank1
  4550     0D57  0861               	movf	i2c_Read@j^(0+128),w
  4551     0D58  3E5B               	addlw	(low (_LUX| (0+256)))& (0+255)
  4552     0D59  0086               	movwf	6
  4553     0D5A  3001               	movlw	1	; select bank2/3
  4554     0D5B  0087               	movwf	7
  4555     0D5C  0801               	movf	1,w
  4556     0D5D  1D03               	btfss	3,2
  4557     0D5E  2D60               	goto	u4451
  4558     0D5F  2D61               	goto	u4450
  4559     0D60                     u4451:
  4560     0D60  2D68               	goto	l5647
  4561     0D61                     u4450:
  4562     0D61                     l5645:
  4563     0D61  0861               	movf	i2c_Read@j^(0+128),w
  4564     0D62  3E5B               	addlw	(low (_LUX| (0+256)))& (0+255)
  4565     0D63  0086               	movwf	6
  4566     0D64  3001               	movlw	1	; select bank2/3
  4567     0D65  0087               	movwf	7
  4568     0D66  304E               	movlw	78
  4569     0D67  0081               	movwf	1
  4570     0D68                     l5647:
  4571     0D68  3001               	movlw	1
  4572     0D69  07E1               	addwf	i2c_Read@j^(0+128),f
  4573     0D6A  3000               	movlw	0
  4574     0D6B  3DE2               	addwfc	(i2c_Read@j+1)^(0+128),f
  4575     0D6C                     l5649:
  4576     0D6C  0862               	movf	(i2c_Read@j+1)^(0+128),w
  4577     0D6D  3A80               	xorlw	128
  4578     0D6E  0020               	movlb	0	; select bank0
  4579     0D6F  00EA               	movwf	??_i2c_Read
  4580     0D70  3080               	movlw	128
  4581     0D71  026A               	subwf	??_i2c_Read,w
  4582     0D72  1D03               	skipz
  4583     0D73  2D77               	goto	u4465
  4584     0D74  3005               	movlw	5
  4585     0D75  0021               	movlb	1	; select bank1
  4586     0D76  0261               	subwf	i2c_Read@j^(0+128),w
  4587     0D77                     u4465:
  4588     0D77  1C03               	skipc
  4589     0D78  2D7A               	goto	u4461
  4590     0D79  2D7B               	goto	u4460
  4591     0D7A                     u4461:
  4592     0D7A  2D56               	goto	l5643
  4593     0D7B                     u4460:
  4594     0D7B                     l5651:
  4595                           
  4596                           ;main.c: 336:           COM[1]= com + 48;
  4597     0D7B  0021               	movlb	1	; select bank1
  4598     0D7C  0860               	movf	i2c_Read@com^(0+128),w
  4599     0D7D  3E30               	addlw	48
  4600     0D7E  00ED               	movwf	(_COM^(0+128)+1)
  4601     0D7F                     l5653:
  4602                           
  4603                           ;main.c: 337:           VEML7700[6]=LUX[0];
  4604     0D7F  0022               	movlb	2	; select bank2
  4605     0D80  085B               	movf	_LUX^(0+256),w
  4606     0D81  00B8               	movwf	(_VEML7700^(0+256)+6)
  4607     0D82                     l5655:
  4608                           
  4609                           ;main.c: 338:           VEML7700[7]=LUX[1];
  4610     0D82  085C               	movf	(_LUX^(0+256)+1),w
  4611     0D83  00B9               	movwf	(_VEML7700^(0+256)+7)
  4612     0D84                     l5657:
  4613                           
  4614                           ;main.c: 339:           VEML7700[8]=LUX[2];
  4615     0D84  085D               	movf	(_LUX^(0+256)+2),w
  4616     0D85  00BA               	movwf	(_VEML7700^(0+256)+8)
  4617     0D86                     l5659:
  4618                           
  4619                           ;main.c: 340:           VEML7700[9]=LUX[3];
  4620     0D86  085E               	movf	(_LUX^(0+256)+3),w
  4621     0D87  00BB               	movwf	(_VEML7700^(0+256)+9)
  4622     0D88                     l5661:
  4623                           
  4624                           ;main.c: 341:           VEML7700[10]=LUX[4];
  4625     0D88  085F               	movf	(_LUX^(0+256)+4),w
  4626     0D89  00BC               	movwf	(_VEML7700^(0+256)+10)
  4627     0D8A                     l5663:
  4628                           
  4629                           ;main.c: 342:           LUX[0]=0;
  4630     0D8A  01DB               	clrf	_LUX^(0+256)
  4631     0D8B                     l5665:
  4632                           
  4633                           ;main.c: 343:           LUX[1]=0;
  4634     0D8B  01DC               	clrf	(_LUX^(0+256)+1)
  4635     0D8C                     l5667:
  4636                           
  4637                           ;main.c: 344:           LUX[2]=0;
  4638     0D8C  01DD               	clrf	(_LUX^(0+256)+2)
  4639     0D8D                     l5669:
  4640                           
  4641                           ;main.c: 345:           LUX[3]=0;
  4642     0D8D  01DE               	clrf	(_LUX^(0+256)+3)
  4643     0D8E                     l5671:
  4644                           
  4645                           ;main.c: 346:           LUX[4]=0;
  4646     0D8E  01DF               	clrf	(_LUX^(0+256)+4)
  4647     0D8F                     l5673:
  4648                           
  4649                           ;main.c: 347:           med_sl=3;
  4650     0D8F  3003               	movlw	3
  4651     0D90  0021               	movlb	1	; select bank1
  4652     0D91  00B8               	movwf	_med_sl^(0+128)
  4653     0D92                     l5675:
  4654                           
  4655                           ;main.c: 348:           i2cfinish=0;
  4656     0D92  01B5               	clrf	_i2cfinish^(0+128)
  4657     0D93                     l5677:
  4658                           
  4659                           ;main.c: 349:           i2busy=0;
  4660     0D93  01B1               	clrf	_i2busy^(0+128)
  4661     0D94                     l5679:
  4662                           
  4663                           ;main.c: 350:           PIE1bits.TXIE = 1;
  4664     0D94  1611               	bsf	17,4	;volatile
  4665     0D95                     l5681:
  4666     0D95  0335               	decf	_i2cfinish^(0+128),w
  4667     0D96  1D03               	btfss	3,2
  4668     0D97  2D99               	goto	u4471
  4669     0D98  2D9A               	goto	u4470
  4670     0D99                     u4471:
  4671     0D99  2DFE               	goto	l273
  4672     0D9A                     u4470:
  4673     0D9A                     l5683:
  4674     0D9A  3002               	movlw	2
  4675     0D9B  0632               	xorwf	_i2select^(0+128),w
  4676     0D9C  1D03               	btfss	3,2
  4677     0D9D  2D9F               	goto	u4481
  4678     0D9E  2DA0               	goto	u4480
  4679     0D9F                     u4481:
  4680     0D9F  2DFE               	goto	l273
  4681     0DA0                     u4480:
  4682     0DA0                     l5685:
  4683                           
  4684                           ;main.c: 352:           sprintf(KG,"%u",weight);
  4685     0DA0  3053               	movlw	low _KG
  4686     0DA1  00CD               	movwf	sprintf@s^(0+128)
  4687     0DA2  3001               	movlw	high _KG
  4688     0DA3  00CE               	movwf	(sprintf@s+1)^(0+128)
  4689     0DA4  3000               	movlw	low (STR_1| (0+32768))
  4690     0DA5  00CF               	movwf	sprintf@fmt^(0+128)
  4691     0DA6  3098               	movlw	high (STR_1| (0+32768))
  4692     0DA7  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  4693     0DA8  0022               	movlb	2	; select bank2
  4694     0DA9  086F               	movf	(_weight+3)^(0+256),w
  4695     0DAA  0021               	movlb	1	; select bank1
  4696     0DAB  00D4               	movwf	((?_sprintf+3)^(0+128)+4)
  4697     0DAC  0022               	movlb	2	; select bank2
  4698     0DAD  086E               	movf	(_weight+2)^(0+256),w
  4699     0DAE  0021               	movlb	1	; select bank1
  4700     0DAF  00D3               	movwf	((?_sprintf+2)^(0+128)+4)
  4701     0DB0  0022               	movlb	2	; select bank2
  4702     0DB1  086D               	movf	(_weight+1)^(0+256),w
  4703     0DB2  0021               	movlb	1	; select bank1
  4704     0DB3  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  4705     0DB4  0022               	movlb	2	; select bank2
  4706     0DB5  086C               	movf	_weight^(0+256),w
  4707     0DB6  0021               	movlb	1	; select bank1
  4708     0DB7  00D1               	movwf	(?_sprintf^(0+128)+4)
  4709     0DB8  3194  24F4  318D   	fcall	_sprintf
  4710     0DBB                     l5687:
  4711                           
  4712                           ;main.c: 353:           for(int j=0; j<8; j++)
  4713     0DBB  0021               	movlb	1	; select bank1
  4714     0DBC  01E3               	clrf	i2c_Read@j_361^(0+128)
  4715     0DBD  01E4               	clrf	(i2c_Read@j_361+1)^(0+128)
  4716     0DBE                     l5693:
  4717                           
  4718                           ;main.c: 354:           if(KG[j]==0) KG[j]='N';
  4719     0DBE  0021               	movlb	1	; select bank1
  4720     0DBF  0863               	movf	i2c_Read@j_361^(0+128),w
  4721     0DC0  3E53               	addlw	(low (_KG| (0+256)))& (0+255)
  4722     0DC1  0086               	movwf	6
  4723     0DC2  3001               	movlw	1	; select bank2/3
  4724     0DC3  0087               	movwf	7
  4725     0DC4  0801               	movf	1,w
  4726     0DC5  1D03               	btfss	3,2
  4727     0DC6  2DC8               	goto	u4491
  4728     0DC7  2DC9               	goto	u4490
  4729     0DC8                     u4491:
  4730     0DC8  2DD0               	goto	l5697
  4731     0DC9                     u4490:
  4732     0DC9                     l5695:
  4733     0DC9  0863               	movf	i2c_Read@j_361^(0+128),w
  4734     0DCA  3E53               	addlw	(low (_KG| (0+256)))& (0+255)
  4735     0DCB  0086               	movwf	6
  4736     0DCC  3001               	movlw	1	; select bank2/3
  4737     0DCD  0087               	movwf	7
  4738     0DCE  304E               	movlw	78
  4739     0DCF  0081               	movwf	1
  4740     0DD0                     l5697:
  4741     0DD0  3001               	movlw	1
  4742     0DD1  07E3               	addwf	i2c_Read@j_361^(0+128),f
  4743     0DD2  3000               	movlw	0
  4744     0DD3  3DE4               	addwfc	(i2c_Read@j_361+1)^(0+128),f
  4745     0DD4                     l5699:
  4746     0DD4  0864               	movf	(i2c_Read@j_361+1)^(0+128),w
  4747     0DD5  3A80               	xorlw	128
  4748     0DD6  0020               	movlb	0	; select bank0
  4749     0DD7  00EA               	movwf	??_i2c_Read
  4750     0DD8  3080               	movlw	128
  4751     0DD9  026A               	subwf	??_i2c_Read,w
  4752     0DDA  1D03               	skipz
  4753     0DDB  2DDF               	goto	u4505
  4754     0DDC  3008               	movlw	8
  4755     0DDD  0021               	movlb	1	; select bank1
  4756     0DDE  0263               	subwf	i2c_Read@j_361^(0+128),w
  4757     0DDF                     u4505:
  4758     0DDF  1C03               	skipc
  4759     0DE0  2DE2               	goto	u4501
  4760     0DE1  2DE3               	goto	u4500
  4761     0DE2                     u4501:
  4762     0DE2  2DBE               	goto	l5693
  4763     0DE3                     u4500:
  4764     0DE3                     l5701:
  4765                           
  4766                           ;main.c: 355:           COM[1]= com + 48;
  4767     0DE3  0021               	movlb	1	; select bank1
  4768     0DE4  0860               	movf	i2c_Read@com^(0+128),w
  4769     0DE5  3E30               	addlw	48
  4770     0DE6  00ED               	movwf	(_COM^(0+128)+1)
  4771     0DE7                     l5703:
  4772                           
  4773                           ;main.c: 356:           LOAD_CELL[6]=KG[0];
  4774     0DE7  0022               	movlb	2	; select bank2
  4775     0DE8  0853               	movf	_KG^(0+256),w
  4776     0DE9  00A8               	movwf	(_LOAD_CELL^(0+256)+6)
  4777     0DEA                     l5705:
  4778                           
  4779                           ;main.c: 357:           LOAD_CELL[7]=KG[1];
  4780     0DEA  0854               	movf	(_KG^(0+256)+1),w
  4781     0DEB  00A9               	movwf	(_LOAD_CELL^(0+256)+7)
  4782     0DEC                     l5707:
  4783                           
  4784                           ;main.c: 358:           LOAD_CELL[8]=KG[2];
  4785     0DEC  0855               	movf	(_KG^(0+256)+2),w
  4786     0DED  00AA               	movwf	(_LOAD_CELL^(0+256)+8)
  4787     0DEE                     l5709:
  4788                           
  4789                           ;main.c: 359:           LOAD_CELL[9]=KG[3];
  4790     0DEE  0856               	movf	(_KG^(0+256)+3),w
  4791     0DEF  00AB               	movwf	(_LOAD_CELL^(0+256)+9)
  4792     0DF0                     l5711:
  4793                           
  4794                           ;main.c: 360:           LOAD_CELL[10]=KG[4];
  4795     0DF0  0857               	movf	(_KG^(0+256)+4),w
  4796     0DF1  00AC               	movwf	(_LOAD_CELL^(0+256)+10)
  4797     0DF2                     l5713:
  4798                           
  4799                           ;main.c: 361:           LOAD_CELL[11]=KG[5];
  4800     0DF2  0858               	movf	(_KG^(0+256)+5),w
  4801     0DF3  00AD               	movwf	(_LOAD_CELL^(0+256)+11)
  4802     0DF4                     l5715:
  4803                           
  4804                           ;main.c: 362:           LOAD_CELL[12]=KG[6];
  4805     0DF4  0859               	movf	(_KG^(0+256)+6),w
  4806     0DF5  00AE               	movwf	(_LOAD_CELL^(0+256)+12)
  4807     0DF6                     l5717:
  4808                           
  4809                           ;main.c: 363:           LOAD_CELL[13]=KG[7];
  4810     0DF6  085A               	movf	(_KG^(0+256)+7),w
  4811     0DF7  00AF               	movwf	(_LOAD_CELL^(0+256)+13)
  4812     0DF8                     l5719:
  4813                           
  4814                           ;main.c: 364:           med_sl=4;
  4815     0DF8  3004               	movlw	4
  4816     0DF9  0021               	movlb	1	; select bank1
  4817     0DFA  00B8               	movwf	_med_sl^(0+128)
  4818     0DFB                     l5721:
  4819                           
  4820                           ;main.c: 365:           i2cfinish=0;
  4821     0DFB  01B5               	clrf	_i2cfinish^(0+128)
  4822     0DFC                     l5723:
  4823                           
  4824                           ;main.c: 366:           i2busy=0;
  4825     0DFC  01B1               	clrf	_i2busy^(0+128)
  4826     0DFD                     l5725:
  4827                           
  4828                           ;main.c: 367:           PIE1bits.TXIE = 1;
  4829     0DFD  1611               	bsf	17,4	;volatile
  4830     0DFE                     l273:
  4831     0DFE  0008               	return
  4832     0DFF                     __end_of_i2c_Read:
  4833                           
  4834                           	psect	text3
  4835     07EF                     __ptext3:	
  4836 ;; *************** function _Sys_Init *****************
  4837 ;; Defined at:
  4838 ;;		line 83 in file "Init.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4852 ;;      Params:         0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 3
  4859 ;; This function calls:
  4860 ;;		_Pin_init
  4861 ;;		_Reg_init
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867     07EF                     _Sys_Init:	
  4868                           ;psect for function _Sys_Init
  4869                           
  4870     07EF                     l4205:	
  4871                           ;incstack = 0
  4872                           ; Regs used in _Sys_Init: [wreg+status,2+status,0+pclath+cstack]
  4873                           
  4874                           
  4875                           ;Init.c: 85:     Reg_init();
  4876     07EF  3195  259C  3187   	fcall	_Reg_init
  4877                           
  4878                           ;Init.c: 86:     Pin_init();
  4879     07F2  3194  2462  3187   	fcall	_Pin_init
  4880     07F5                     l522:
  4881     07F5  0008               	return
  4882     07F6                     __end_of_Sys_Init:
  4883                           
  4884                           	psect	text4
  4885     159C                     __ptext4:	
  4886 ;; *************** function _Reg_init *****************
  4887 ;; Defined at:
  4888 ;;		line 47 in file "Init.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4902 ;;      Params:         0       0       0       0       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0
  4904 ;;      Temps:          0       1       0       0       0       0       0       0
  4905 ;;      Totals:         0       1       0       0       0       0       0       0
  4906 ;;Total ram usage:        1 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 2
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_Sys_Init
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916     159C                     _Reg_init:	
  4917                           ;psect for function _Reg_init
  4918                           
  4919     159C                     l3735:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _Reg_init: [wreg+status,2]
  4922                           
  4923                           
  4924                           ;Init.c: 49:     OSCCON = 0x70;
  4925     159C  3070               	movlw	112
  4926     159D  0021               	movlb	1	; select bank1
  4927     159E  0099               	movwf	25	;volatile
  4928     159F                     l3737:
  4929                           
  4930                           ;Init.c: 50:     OSCTUNE = 0x00;
  4931     159F  0198               	clrf	24	;volatile
  4932     15A0                     l3739:
  4933                           
  4934                           ;Init.c: 51:     BORCON = 0x00;
  4935     15A0  0022               	movlb	2	; select bank2
  4936     15A1  0196               	clrf	22	;volatile
  4937                           
  4938                           ;Init.c: 53:     INTCON = 0xE0;
  4939     15A2  30E0               	movlw	224
  4940     15A3  008B               	movwf	11	;volatile
  4941                           
  4942                           ;Init.c: 57:     BAUDCON = 0x08;
  4943     15A4  3008               	movlw	8
  4944     15A5  0023               	movlb	3	; select bank3
  4945     15A6  009F               	movwf	31	;volatile
  4946                           
  4947                           ;Init.c: 58:     SPBRG = 68;
  4948     15A7  3044               	movlw	68
  4949     15A8  009B               	movwf	27	;volatile
  4950                           
  4951                           ;Init.c: 60:     RCSTA = 0x90;
  4952     15A9  3090               	movlw	144
  4953     15AA  009D               	movwf	29	;volatile
  4954                           
  4955                           ;Init.c: 62:     TXSTA = 0x24;
  4956     15AB  3024               	movlw	36
  4957     15AC  009E               	movwf	30	;volatile
  4958     15AD                     l3741:
  4959                           
  4960                           ;Init.c: 63:     PIE1bits.RCIE = 1;
  4961     15AD  0021               	movlb	1	; select bank1
  4962     15AE  1691               	bsf	17,5	;volatile
  4963                           
  4964                           ;Init.c: 65:     T1CON = 0x30;
  4965     15AF  3030               	movlw	48
  4966     15B0  0020               	movlb	0	; select bank0
  4967     15B1  0098               	movwf	24	;volatile
  4968                           
  4969                           ;Init.c: 67:     T2CON = 0x01;
  4970     15B2  3001               	movlw	1
  4971     15B3  009C               	movwf	28	;volatile
  4972     15B4                     l3743:
  4973                           
  4974                           ;Init.c: 68:     PIE1bits.TMR2IE = 1;
  4975     15B4  0021               	movlb	1	; select bank1
  4976     15B5  1491               	bsf	17,1	;volatile
  4977     15B6                     l3745:
  4978                           
  4979                           ;Init.c: 71:     SSPSTAT = 0x00;
  4980     15B6  0024               	movlb	4	; select bank4
  4981     15B7  0194               	clrf	20	;volatile
  4982     15B8                     l3747:
  4983                           
  4984                           ;Init.c: 72:     SSPCON1 = 0x08;
  4985     15B8  3008               	movlw	8
  4986     15B9  0095               	movwf	21	;volatile
  4987                           
  4988                           ;Init.c: 73:     SSPCON2 = 0x00;
  4989     15BA  0196               	clrf	22	;volatile
  4990     15BB                     l3749:
  4991                           
  4992                           ;Init.c: 74:     SSPADD = 0x4F;
  4993     15BB  304F               	movlw	79
  4994     15BC  0092               	movwf	18	;volatile
  4995     15BD                     l3751:
  4996                           
  4997                           ;Init.c: 75:     SSPCON1bits.SSPEN = 0;
  4998     15BD  1295               	bcf	21,5	;volatile
  4999     15BE                     l3753:
  5000                           
  5001                           ;Init.c: 76:     _delay((unsigned long)((10)*(32000000/4000.0)));
  5002     15BE  3068               	movlw	104
  5003     15BF  0020               	movlb	0	; select bank0
  5004     15C0  00A0               	movwf	??_Reg_init
  5005     15C1  30E4               	movlw	228
  5006     15C2                     u5827:
  5007     15C2  0B89               	decfsz	9,f
  5008     15C3  2DC2               	goto	u5827
  5009     15C4  0BA0               	decfsz	??_Reg_init,f
  5010     15C5  2DC2               	goto	u5827
  5011     15C6  0000               	nop
  5012     15C7                     l3755:
  5013                           
  5014                           ;Init.c: 78:     SSPCON1bits.SSPEN = 1;
  5015     15C7  0024               	movlb	4	; select bank4
  5016     15C8  1695               	bsf	21,5	;volatile
  5017     15C9                     l3757:
  5018                           
  5019                           ;Init.c: 79:     PIE1bits.SSPIE = 0;
  5020     15C9  0021               	movlb	1	; select bank1
  5021     15CA  1191               	bcf	17,3	;volatile
  5022     15CB                     l519:
  5023     15CB  0008               	return
  5024     15CC                     __end_of_Reg_init:
  5025                           
  5026                           	psect	text5
  5027     1462                     __ptext5:	
  5028 ;; *************** function _Pin_init *****************
  5029 ;; Defined at:
  5030 ;;		line 14 in file "Init.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5044 ;;      Params:         0       0       0       0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_Sys_Init
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058     1462                     _Pin_init:	
  5059                           ;psect for function _Pin_init
  5060                           
  5061     1462                     l3711:	
  5062                           ;incstack = 0
  5063                           ; Regs used in _Pin_init: [wreg+status,2]
  5064                           
  5065                           
  5066                           ;Init.c: 19:     LATA = 0x00;
  5067     1462  0022               	movlb	2	; select bank2
  5068     1463  018C               	clrf	12	;volatile
  5069                           
  5070                           ;Init.c: 20:     LATB = 0x00;
  5071     1464  018D               	clrf	13	;volatile
  5072                           
  5073                           ;Init.c: 21:     LATC = 0x00;
  5074     1465  018E               	clrf	14	;volatile
  5075     1466                     l3713:
  5076                           
  5077                           ;Init.c: 25:     TRISA = 0xFF;
  5078     1466  30FF               	movlw	255
  5079     1467  0021               	movlb	1	; select bank1
  5080     1468  008C               	movwf	12	;volatile
  5081     1469                     l3715:
  5082                           
  5083                           ;Init.c: 26:     TRISB = 0x80;
  5084     1469  3080               	movlw	128
  5085     146A  008D               	movwf	13	;volatile
  5086     146B                     l3717:
  5087                           
  5088                           ;Init.c: 27:     TRISC = 0xD9;
  5089     146B  30D9               	movlw	217
  5090     146C  008E               	movwf	14	;volatile
  5091     146D                     l3719:
  5092                           
  5093                           ;Init.c: 31:     ANSELB = 0x00;
  5094     146D  0023               	movlb	3	; select bank3
  5095     146E  018D               	clrf	13	;volatile
  5096     146F                     l3721:
  5097                           
  5098                           ;Init.c: 32:     ANSELA = 0x00;
  5099     146F  018C               	clrf	12	;volatile
  5100     1470                     l3723:
  5101                           
  5102                           ;Init.c: 36:     WPUE = 0x00;
  5103     1470  0024               	movlb	4	; select bank4
  5104     1471  0190               	clrf	16	;volatile
  5105     1472                     l3725:
  5106                           
  5107                           ;Init.c: 37:     WPUB = 0x00;
  5108     1472  018D               	clrf	13	;volatile
  5109     1473                     l3727:
  5110                           
  5111                           ;Init.c: 41:     APFCON = 0x00;
  5112     1473  0022               	movlb	2	; select bank2
  5113     1474  019D               	clrf	29	;volatile
  5114     1475                     l3729:
  5115                           
  5116                           ;Init.c: 43:     PORTA = 0x00;
  5117     1475  0020               	movlb	0	; select bank0
  5118     1476  018C               	clrf	12	;volatile
  5119     1477                     l3731:
  5120                           
  5121                           ;Init.c: 44:     PORTB = 0x00;
  5122     1477  018D               	clrf	13	;volatile
  5123     1478                     l3733:
  5124                           
  5125                           ;Init.c: 45:     PORTC = 0x00;
  5126     1478  018E               	clrf	14	;volatile
  5127     1479                     l516:
  5128     1479  0008               	return
  5129     147A                     __end_of_Pin_init:
  5130                           
  5131                           	psect	text6
  5132     0EE5                     __ptext6:	
  5133 ;; *************** function _DS18B20_Read *****************
  5134 ;; Defined at:
  5135 ;;		line 103 in file "main.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  TRIS            2   19[BANK1 ] PTR unsigned char 
  5138 ;;		 -> TRISC(1), TRISA(1), 
  5139 ;;  PORT            2   21[BANK1 ] PTR unsigned char 
  5140 ;;		 -> PORTC(1), PORTA(1), 
  5141 ;;  LAT             2   23[BANK1 ] PTR unsigned char 
  5142 ;;		 -> LATC(1), LATA(1), 
  5143 ;;  PIN             1   25[BANK1 ] unsigned char 
  5144 ;;  entry           1   26[BANK1 ] unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  j               2   77[BANK0 ] int 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5156 ;;      Params:         0       0       8       0       0       0       0       0
  5157 ;;      Locals:         0       2       0       0       0       0       0       0
  5158 ;;      Temps:          0       3       0       0       0       0       0       0
  5159 ;;      Totals:         0       5       8       0       0       0       0       0
  5160 ;;Total ram usage:       13 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 10
  5163 ;; This function calls:
  5164 ;;		_OW_read_byte
  5165 ;;		_OW_reset_pulse
  5166 ;;		_OW_write_byte
  5167 ;;		_sprintf
  5168 ;; This function is called by:
  5169 ;;		_main
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173     0EE5                     _DS18B20_Read:	
  5174                           ;psect for function _DS18B20_Read
  5175                           
  5176     0EE5                     l5565:	
  5177                           ;incstack = 0
  5178                           ; Regs used in _DS18B20_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5179                           
  5180                           
  5181                           ;main.c: 104:           OW_reset_pulse(&TRISA, &PORTA, &LATA, PIN);
  5182     0EE5  308C               	movlw	140
  5183     0EE6  0020               	movlb	0	; select bank0
  5184     0EE7  00A7               	movwf	OW_reset_pulse@TRIS
  5185     0EE8  3000               	movlw	0
  5186     0EE9  00A8               	movwf	OW_reset_pulse@TRIS+1
  5187     0EEA  300C               	movlw	12
  5188     0EEB  00A9               	movwf	OW_reset_pulse@PORT
  5189     0EEC  3000               	movlw	0
  5190     0EED  00AA               	movwf	OW_reset_pulse@PORT+1
  5191     0EEE  300C               	movlw	12
  5192     0EEF  00AB               	movwf	OW_reset_pulse@LAT
  5193     0EF0  3001               	movlw	1
  5194     0EF1  00AC               	movwf	OW_reset_pulse@LAT+1
  5195     0EF2  0021               	movlb	1	; select bank1
  5196     0EF3  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5197     0EF4  0020               	movlb	0	; select bank0
  5198     0EF5  00AD               	movwf	OW_reset_pulse@PIN
  5199     0EF6  3188  20C6  318E   	fcall	_OW_reset_pulse
  5200                           
  5201                           ;main.c: 106:           OW_write_byte(0xCC, &TRISA, &LATA, PIN);
  5202     0EF9  308C               	movlw	140
  5203     0EFA  0020               	movlb	0	; select bank0
  5204     0EFB  00A7               	movwf	OW_write_byte@TRIS
  5205     0EFC  3000               	movlw	0
  5206     0EFD  00A8               	movwf	OW_write_byte@TRIS+1
  5207     0EFE  300C               	movlw	12
  5208     0EFF  00A9               	movwf	OW_write_byte@LAT
  5209     0F00  3001               	movlw	1
  5210     0F01  00AA               	movwf	OW_write_byte@LAT+1
  5211     0F02  0021               	movlb	1	; select bank1
  5212     0F03  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5213     0F04  0020               	movlb	0	; select bank0
  5214     0F05  00AB               	movwf	OW_write_byte@PIN
  5215     0F06  30CC               	movlw	204
  5216     0F07  3194  24AF  318E   	fcall	_OW_write_byte
  5217                           
  5218                           ;main.c: 107:           OW_write_byte(0x44, &TRISA, &LATA, PIN);
  5219     0F0A  308C               	movlw	140
  5220     0F0B  0020               	movlb	0	; select bank0
  5221     0F0C  00A7               	movwf	OW_write_byte@TRIS
  5222     0F0D  3000               	movlw	0
  5223     0F0E  00A8               	movwf	OW_write_byte@TRIS+1
  5224     0F0F  300C               	movlw	12
  5225     0F10  00A9               	movwf	OW_write_byte@LAT
  5226     0F11  3001               	movlw	1
  5227     0F12  00AA               	movwf	OW_write_byte@LAT+1
  5228     0F13  0021               	movlb	1	; select bank1
  5229     0F14  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5230     0F15  0020               	movlb	0	; select bank0
  5231     0F16  00AB               	movwf	OW_write_byte@PIN
  5232     0F17  3044               	movlw	68
  5233     0F18  3194  24AF  318E   	fcall	_OW_write_byte
  5234     0F1B                     l5567:
  5235                           
  5236                           ;main.c: 109:           _delay((unsigned long)((800)*(32000000/4000.0)));
  5237     0F1B  3021               	movlw	33
  5238     0F1C  0020               	movlb	0	; select bank0
  5239     0F1D  00EB               	movwf	??_DS18B20_Read+1
  5240     0F1E  3078               	movlw	120
  5241     0F1F  00EA               	movwf	??_DS18B20_Read
  5242     0F20  3098               	movlw	152
  5243     0F21                     u5837:
  5244     0F21  0B89               	decfsz	9,f
  5245     0F22  2F21               	goto	u5837
  5246     0F23  0BEA               	decfsz	??_DS18B20_Read,f
  5247     0F24  2F21               	goto	u5837
  5248     0F25  0BEB               	decfsz	??_DS18B20_Read+1,f
  5249     0F26  2F21               	goto	u5837
  5250     0F27  0000               	nop
  5251     0F28                     l5569:
  5252                           
  5253                           ;main.c: 111:           OW_reset_pulse(&TRISA, &PORTA, &LATA, PIN);
  5254     0F28  308C               	movlw	140
  5255     0F29  0020               	movlb	0	; select bank0
  5256     0F2A  00A7               	movwf	OW_reset_pulse@TRIS
  5257     0F2B  3000               	movlw	0
  5258     0F2C  00A8               	movwf	OW_reset_pulse@TRIS+1
  5259     0F2D  300C               	movlw	12
  5260     0F2E  00A9               	movwf	OW_reset_pulse@PORT
  5261     0F2F  3000               	movlw	0
  5262     0F30  00AA               	movwf	OW_reset_pulse@PORT+1
  5263     0F31  300C               	movlw	12
  5264     0F32  00AB               	movwf	OW_reset_pulse@LAT
  5265     0F33  3001               	movlw	1
  5266     0F34  00AC               	movwf	OW_reset_pulse@LAT+1
  5267     0F35  0021               	movlb	1	; select bank1
  5268     0F36  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5269     0F37  0020               	movlb	0	; select bank0
  5270     0F38  00AD               	movwf	OW_reset_pulse@PIN
  5271     0F39  3188  20C6  318E   	fcall	_OW_reset_pulse
  5272     0F3C                     l5571:
  5273                           
  5274                           ;main.c: 113:           OW_write_byte(0xCC, &TRISA, &LATA, PIN);
  5275     0F3C  308C               	movlw	140
  5276     0F3D  0020               	movlb	0	; select bank0
  5277     0F3E  00A7               	movwf	OW_write_byte@TRIS
  5278     0F3F  3000               	movlw	0
  5279     0F40  00A8               	movwf	OW_write_byte@TRIS+1
  5280     0F41  300C               	movlw	12
  5281     0F42  00A9               	movwf	OW_write_byte@LAT
  5282     0F43  3001               	movlw	1
  5283     0F44  00AA               	movwf	OW_write_byte@LAT+1
  5284     0F45  0021               	movlb	1	; select bank1
  5285     0F46  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5286     0F47  0020               	movlb	0	; select bank0
  5287     0F48  00AB               	movwf	OW_write_byte@PIN
  5288     0F49  30CC               	movlw	204
  5289     0F4A  3194  24AF  318E   	fcall	_OW_write_byte
  5290     0F4D                     l5573:
  5291                           
  5292                           ;main.c: 114:           OW_write_byte(0xBE, &TRISA, &LATA, PIN);
  5293     0F4D  308C               	movlw	140
  5294     0F4E  0020               	movlb	0	; select bank0
  5295     0F4F  00A7               	movwf	OW_write_byte@TRIS
  5296     0F50  3000               	movlw	0
  5297     0F51  00A8               	movwf	OW_write_byte@TRIS+1
  5298     0F52  300C               	movlw	12
  5299     0F53  00A9               	movwf	OW_write_byte@LAT
  5300     0F54  3001               	movlw	1
  5301     0F55  00AA               	movwf	OW_write_byte@LAT+1
  5302     0F56  0021               	movlb	1	; select bank1
  5303     0F57  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5304     0F58  0020               	movlb	0	; select bank0
  5305     0F59  00AB               	movwf	OW_write_byte@PIN
  5306     0F5A  30BE               	movlw	190
  5307     0F5B  3194  24AF  318E   	fcall	_OW_write_byte
  5308     0F5E                     l5575:
  5309                           
  5310                           ;main.c: 116:           Temp=0;
  5311     0F5E  0021               	movlb	1	; select bank1
  5312     0F5F  01A4               	clrf	_Temp^(0+128)
  5313     0F60  01A5               	clrf	(_Temp+1)^(0+128)
  5314     0F61                     l5577:
  5315                           
  5316                           ;main.c: 117:           Temp = OW_read_byte(&TRISA, &PORTA, &LATA, PIN);
  5317     0F61  308C               	movlw	140
  5318     0F62  0020               	movlb	0	; select bank0
  5319     0F63  00B0               	movwf	OW_read_byte@TRIS
  5320     0F64  3000               	movlw	0
  5321     0F65  00B1               	movwf	OW_read_byte@TRIS+1
  5322     0F66  300C               	movlw	12
  5323     0F67  00B2               	movwf	OW_read_byte@PORT
  5324     0F68  3000               	movlw	0
  5325     0F69  00B3               	movwf	OW_read_byte@PORT+1
  5326     0F6A  300C               	movlw	12
  5327     0F6B  00B4               	movwf	OW_read_byte@LAT
  5328     0F6C  3001               	movlw	1
  5329     0F6D  00B5               	movwf	OW_read_byte@LAT+1
  5330     0F6E  0021               	movlb	1	; select bank1
  5331     0F6F  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5332     0F70  0020               	movlb	0	; select bank0
  5333     0F71  00B6               	movwf	OW_read_byte@PIN
  5334     0F72  3195  2519  318E   	fcall	_OW_read_byte
  5335     0F75  0020               	movlb	0	; select bank0
  5336     0F76  00EA               	movwf	??_DS18B20_Read
  5337     0F77  01EB               	clrf	??_DS18B20_Read+1
  5338     0F78  086A               	movf	??_DS18B20_Read,w
  5339     0F79  0021               	movlb	1	; select bank1
  5340     0F7A  00A4               	movwf	_Temp^(0+128)
  5341     0F7B  0020               	movlb	0	; select bank0
  5342     0F7C  086B               	movf	??_DS18B20_Read+1,w
  5343     0F7D  0021               	movlb	1	; select bank1
  5344     0F7E  00A5               	movwf	(_Temp+1)^(0+128)
  5345     0F7F                     l5579:
  5346                           
  5347                           ;main.c: 119:           Temp |= (OW_read_byte(&TRISA, &PORTA, &LATA, PIN) << 8);
  5348     0F7F  308C               	movlw	140
  5349     0F80  0020               	movlb	0	; select bank0
  5350     0F81  00B0               	movwf	OW_read_byte@TRIS
  5351     0F82  3000               	movlw	0
  5352     0F83  00B1               	movwf	OW_read_byte@TRIS+1
  5353     0F84  300C               	movlw	12
  5354     0F85  00B2               	movwf	OW_read_byte@PORT
  5355     0F86  3000               	movlw	0
  5356     0F87  00B3               	movwf	OW_read_byte@PORT+1
  5357     0F88  300C               	movlw	12
  5358     0F89  00B4               	movwf	OW_read_byte@LAT
  5359     0F8A  3001               	movlw	1
  5360     0F8B  00B5               	movwf	OW_read_byte@LAT+1
  5361     0F8C  0021               	movlb	1	; select bank1
  5362     0F8D  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5363     0F8E  0020               	movlb	0	; select bank0
  5364     0F8F  00B6               	movwf	OW_read_byte@PIN
  5365     0F90  3195  2519  318E   	fcall	_OW_read_byte
  5366     0F93  0020               	movlb	0	; select bank0
  5367     0F94  00EA               	movwf	??_DS18B20_Read
  5368     0F95  01EB               	clrf	??_DS18B20_Read+1
  5369     0F96  086A               	movf	??_DS18B20_Read,w
  5370     0F97  00EB               	movwf	??_DS18B20_Read+1
  5371     0F98  01EA               	clrf	??_DS18B20_Read
  5372     0F99  086A               	movf	??_DS18B20_Read,w
  5373     0F9A  0021               	movlb	1	; select bank1
  5374     0F9B  04A4               	iorwf	_Temp^(0+128),f
  5375     0F9C  0020               	movlb	0	; select bank0
  5376     0F9D  086B               	movf	??_DS18B20_Read+1,w
  5377     0F9E  0021               	movlb	1	; select bank1
  5378     0F9F  04A5               	iorwf	(_Temp+1)^(0+128),f
  5379     0FA0                     l5581:
  5380                           
  5381                           ;main.c: 120:           OW_reset_pulse(&TRISA, &PORTA, &LATA, PIN);
  5382     0FA0  308C               	movlw	140
  5383     0FA1  0020               	movlb	0	; select bank0
  5384     0FA2  00A7               	movwf	OW_reset_pulse@TRIS
  5385     0FA3  3000               	movlw	0
  5386     0FA4  00A8               	movwf	OW_reset_pulse@TRIS+1
  5387     0FA5  300C               	movlw	12
  5388     0FA6  00A9               	movwf	OW_reset_pulse@PORT
  5389     0FA7  3000               	movlw	0
  5390     0FA8  00AA               	movwf	OW_reset_pulse@PORT+1
  5391     0FA9  300C               	movlw	12
  5392     0FAA  00AB               	movwf	OW_reset_pulse@LAT
  5393     0FAB  3001               	movlw	1
  5394     0FAC  00AC               	movwf	OW_reset_pulse@LAT+1
  5395     0FAD  0021               	movlb	1	; select bank1
  5396     0FAE  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5397     0FAF  0020               	movlb	0	; select bank0
  5398     0FB0  00AD               	movwf	OW_reset_pulse@PIN
  5399     0FB1  3188  20C6  318E   	fcall	_OW_reset_pulse
  5400     0FB4                     l5583:
  5401                           
  5402                           ;main.c: 121:           sprintf(TEMPDS,"%u",Temp);
  5403     0FB4  3060               	movlw	low _TEMPDS
  5404     0FB5  0021               	movlb	1	; select bank1
  5405     0FB6  00CD               	movwf	sprintf@s^(0+128)
  5406     0FB7  3001               	movlw	high _TEMPDS
  5407     0FB8  00CE               	movwf	(sprintf@s+1)^(0+128)
  5408     0FB9  3000               	movlw	low (STR_1| (0+32768))
  5409     0FBA  00CF               	movwf	sprintf@fmt^(0+128)
  5410     0FBB  3098               	movlw	high (STR_1| (0+32768))
  5411     0FBC  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  5412     0FBD  0825               	movf	(_Temp+1)^(0+128),w
  5413     0FBE  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  5414     0FBF  0824               	movf	_Temp^(0+128),w
  5415     0FC0  00D1               	movwf	(?_sprintf^(0+128)+4)
  5416     0FC1  3194  24F4  318E   	fcall	_sprintf
  5417     0FC4                     l5585:
  5418                           
  5419                           ;main.c: 122:           for(int j=0; j<4; j++)
  5420     0FC4  0020               	movlb	0	; select bank0
  5421     0FC5  01ED               	clrf	DS18B20_Read@j
  5422     0FC6  01EE               	clrf	DS18B20_Read@j+1
  5423     0FC7                     l5591:
  5424                           
  5425                           ;main.c: 123:           if(TEMPDS[j]==0) TEMPDS[j]='N';
  5426     0FC7  0020               	movlb	0	; select bank0
  5427     0FC8  086D               	movf	DS18B20_Read@j,w
  5428     0FC9  3E60               	addlw	(low (_TEMPDS| (0+256)))& (0+255)
  5429     0FCA  0086               	movwf	6
  5430     0FCB  3001               	movlw	1	; select bank2/3
  5431     0FCC  0087               	movwf	7
  5432     0FCD  0801               	movf	1,w
  5433     0FCE  1D03               	btfss	3,2
  5434     0FCF  2FD1               	goto	u4401
  5435     0FD0  2FD2               	goto	u4400
  5436     0FD1                     u4401:
  5437     0FD1  2FD9               	goto	l5595
  5438     0FD2                     u4400:
  5439     0FD2                     l5593:
  5440     0FD2  086D               	movf	DS18B20_Read@j,w
  5441     0FD3  3E60               	addlw	(low (_TEMPDS| (0+256)))& (0+255)
  5442     0FD4  0086               	movwf	6
  5443     0FD5  3001               	movlw	1	; select bank2/3
  5444     0FD6  0087               	movwf	7
  5445     0FD7  304E               	movlw	78
  5446     0FD8  0081               	movwf	1
  5447     0FD9                     l5595:
  5448     0FD9  3001               	movlw	1
  5449     0FDA  07ED               	addwf	DS18B20_Read@j,f
  5450     0FDB  3000               	movlw	0
  5451     0FDC  3DEE               	addwfc	DS18B20_Read@j+1,f
  5452     0FDD                     l5597:
  5453     0FDD  086E               	movf	DS18B20_Read@j+1,w
  5454     0FDE  3A80               	xorlw	128
  5455     0FDF  00EA               	movwf	??_DS18B20_Read
  5456     0FE0  3080               	movlw	128
  5457     0FE1  026A               	subwf	??_DS18B20_Read,w
  5458     0FE2  1D03               	skipz
  5459     0FE3  2FE6               	goto	u4415
  5460     0FE4  3004               	movlw	4
  5461     0FE5  026D               	subwf	DS18B20_Read@j,w
  5462     0FE6                     u4415:
  5463     0FE6  1C03               	skipc
  5464     0FE7  2FE9               	goto	u4411
  5465     0FE8  2FEA               	goto	u4410
  5466     0FE9                     u4411:
  5467     0FE9  2FC7               	goto	l5591
  5468     0FEA                     u4410:
  5469     0FEA                     l5599:
  5470                           
  5471                           ;main.c: 124:           COM[1]=entry + 48;
  5472     0FEA  0021               	movlb	1	; select bank1
  5473     0FEB  0867               	movf	DS18B20_Read@entry^(0+128),w
  5474     0FEC  3E30               	addlw	48
  5475     0FED  00ED               	movwf	(_COM^(0+128)+1)
  5476     0FEE                     l5601:
  5477                           
  5478                           ;main.c: 125:           DS18B[6]=TEMPDS[0];
  5479     0FEE  0022               	movlb	2	; select bank2
  5480     0FEF  0860               	movf	_TEMPDS^(0+256),w
  5481     0FF0  00C5               	movwf	(_DS18B^(0+256)+6)
  5482     0FF1                     l5603:
  5483                           
  5484                           ;main.c: 126:           DS18B[7]=TEMPDS[1];
  5485     0FF1  0861               	movf	(_TEMPDS^(0+256)+1),w
  5486     0FF2  00C6               	movwf	(_DS18B^(0+256)+7)
  5487     0FF3                     l5605:
  5488                           
  5489                           ;main.c: 127:           DS18B[8]=TEMPDS[2];
  5490     0FF3  0862               	movf	(_TEMPDS^(0+256)+2),w
  5491     0FF4  00C7               	movwf	(_DS18B^(0+256)+8)
  5492     0FF5                     l5607:
  5493                           
  5494                           ;main.c: 128:           DS18B[9]=TEMPDS[3];
  5495     0FF5  0863               	movf	(_TEMPDS^(0+256)+3),w
  5496     0FF6  00C8               	movwf	(_DS18B^(0+256)+9)
  5497     0FF7                     l5609:
  5498                           
  5499                           ;main.c: 129:           TEMPDS[0]=0;
  5500     0FF7  01E0               	clrf	_TEMPDS^(0+256)
  5501     0FF8                     l5611:
  5502                           
  5503                           ;main.c: 130:           TEMPDS[1]=0;
  5504     0FF8  01E1               	clrf	(_TEMPDS^(0+256)+1)
  5505     0FF9                     l5613:
  5506                           
  5507                           ;main.c: 131:           TEMPDS[2]=0;
  5508     0FF9  01E2               	clrf	(_TEMPDS^(0+256)+2)
  5509     0FFA                     l5615:
  5510                           
  5511                           ;main.c: 132:           TEMPDS[3]=0;
  5512     0FFA  01E3               	clrf	(_TEMPDS^(0+256)+3)
  5513     0FFB                     l5617:
  5514                           
  5515                           ;main.c: 133:           med_sl=2;
  5516     0FFB  3002               	movlw	2
  5517     0FFC  0021               	movlb	1	; select bank1
  5518     0FFD  00B8               	movwf	_med_sl^(0+128)
  5519     0FFE                     l5619:
  5520                           
  5521                           ;main.c: 134:           PIE1bits.TXIE = 1;
  5522     0FFE  1611               	bsf	17,4	;volatile
  5523     0FFF                     l192:
  5524     0FFF  0008               	return
  5525     1000                     __end_of_DS18B20_Read:
  5526                           
  5527                           	psect	text7
  5528     14AF                     __ptext7:	
  5529 ;; *************** function _OW_write_byte *****************
  5530 ;; Defined at:
  5531 ;;		line 177 in file "1wire.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  write_data      1    wreg     unsigned char 
  5534 ;;  TRIS            2    7[BANK0 ] PTR unsigned char 
  5535 ;;		 -> TRISA(1), 
  5536 ;;  LAT             2    9[BANK0 ] PTR unsigned char 
  5537 ;;		 -> LATA(1), 
  5538 ;;  PIN             1   11[BANK0 ] unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  write_data      1   13[BANK0 ] unsigned char 
  5541 ;;  loop            1   14[BANK0 ] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5551 ;;      Params:         0       5       0       0       0       0       0       0
  5552 ;;      Locals:         0       2       0       0       0       0       0       0
  5553 ;;      Temps:          0       1       0       0       0       0       0       0
  5554 ;;      Totals:         0       8       0       0       0       0       0       0
  5555 ;;Total ram usage:        8 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; Hardware stack levels required when called: 3
  5558 ;; This function calls:
  5559 ;;		_OW_write_bit
  5560 ;; This function is called by:
  5561 ;;		_DS18B20_Read
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565     14AF                     _OW_write_byte:	
  5566                           ;psect for function _OW_write_byte
  5567                           
  5568                           
  5569                           ;incstack = 0
  5570                           ; Regs used in _OW_write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5571                           ;OW_write_byte@write_data stored from wreg
  5572     14AF  0020               	movlb	0	; select bank0
  5573     14B0  00AD               	movwf	OW_write_byte@write_data
  5574     14B1                     l5483:
  5575     14B1  01AE               	clrf	OW_write_byte@loop
  5576     14B2                     l5489:
  5577     14B2  0828               	movf	OW_write_byte@TRIS+1,w
  5578     14B3  00A1               	movwf	OW_write_bit@TRIS+1
  5579     14B4  0827               	movf	OW_write_byte@TRIS,w
  5580     14B5  00A0               	movwf	OW_write_bit@TRIS
  5581     14B6  082A               	movf	OW_write_byte@LAT+1,w
  5582     14B7  00A3               	movwf	OW_write_bit@LAT+1
  5583     14B8  0829               	movf	OW_write_byte@LAT,w
  5584     14B9  00A2               	movwf	OW_write_bit@LAT
  5585     14BA  082B               	movf	OW_write_byte@PIN,w
  5586     14BB  00A4               	movwf	OW_write_bit@PIN
  5587     14BC  082D               	movf	OW_write_byte@write_data,w
  5588     14BD  3901               	andlw	1
  5589     14BE  3188  206D  3194   	fcall	_OW_write_bit
  5590     14C1                     l5491:
  5591     14C1  1003               	clrc
  5592     14C2  0020               	movlb	0	; select bank0
  5593     14C3  0CAD               	rrf	OW_write_byte@write_data,f
  5594     14C4                     l5493:
  5595     14C4  3001               	movlw	1
  5596     14C5  00AC               	movwf	??_OW_write_byte
  5597     14C6  082C               	movf	??_OW_write_byte,w
  5598     14C7  07AE               	addwf	OW_write_byte@loop,f
  5599     14C8                     l5495:
  5600     14C8  3008               	movlw	8
  5601     14C9  022E               	subwf	OW_write_byte@loop,w
  5602     14CA  1C03               	skipc
  5603     14CB  2CCD               	goto	u4341
  5604     14CC  2CCE               	goto	u4340
  5605     14CD                     u4341:
  5606     14CD  2CB2               	goto	l5489
  5607     14CE                     u4340:
  5608     14CE                     l629:
  5609     14CE  0008               	return
  5610     14CF                     __end_of_OW_write_byte:
  5611                           
  5612                           	psect	text8
  5613     086D                     __ptext8:	
  5614 ;; *************** function _OW_write_bit *****************
  5615 ;; Defined at:
  5616 ;;		line 118 in file "1wire.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  write_bit       1    wreg     unsigned char 
  5619 ;;  TRIS            2    0[BANK0 ] PTR unsigned char 
  5620 ;;		 -> TRISA(1), 
  5621 ;;  LAT             2    2[BANK0 ] PTR unsigned char 
  5622 ;;		 -> LATA(1), 
  5623 ;;  PIN             1    4[BANK0 ] unsigned char 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  write_bit       1    6[BANK0 ] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5635 ;;      Params:         0       5       0       0       0       0       0       0
  5636 ;;      Locals:         0       1       0       0       0       0       0       0
  5637 ;;      Temps:          0       1       0       0       0       0       0       0
  5638 ;;      Totals:         0       7       0       0       0       0       0       0
  5639 ;;Total ram usage:        7 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 2
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_OW_write_byte
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649     086D                     _OW_write_bit:	
  5650                           ;psect for function _OW_write_bit
  5651                           
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _OW_write_bit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5655                           ;OW_write_bit@write_bit stored from wreg
  5656     086D  0020               	movlb	0	; select bank0
  5657     086E  00A6               	movwf	OW_write_bit@write_bit
  5658     086F                     l5401:
  5659     086F  0826               	movf	OW_write_bit@write_bit,w
  5660     0870  1903               	btfsc	3,2
  5661     0871  2873               	goto	u4321
  5662     0872  2874               	goto	u4320
  5663     0873                     u4321:
  5664     0873  289D               	goto	l5413
  5665     0874                     u4320:
  5666     0874                     l5403:
  5667     0874  0924               	comf	OW_write_bit@PIN,w
  5668     0875  00A5               	movwf	??_OW_write_bit
  5669     0876  0822               	movf	OW_write_bit@LAT,w
  5670     0877  0086               	movwf	6
  5671     0878  0823               	movf	OW_write_bit@LAT+1,w
  5672     0879  0087               	movwf	7
  5673     087A  0825               	movf	??_OW_write_bit,w
  5674     087B  0581               	andwf	1,f
  5675     087C  0924               	comf	OW_write_bit@PIN,w
  5676     087D  00A5               	movwf	??_OW_write_bit
  5677     087E  0820               	movf	OW_write_bit@TRIS,w
  5678     087F  0086               	movwf	6
  5679     0880  0821               	movf	OW_write_bit@TRIS+1,w
  5680     0881  0087               	movwf	7
  5681     0882  0825               	movf	??_OW_write_bit,w
  5682     0883  0581               	andwf	1,f
  5683     0884                     l5405:
  5684     0884  3010               	movlw	16
  5685     0885                     u5847:
  5686     0885  0B89               	decfsz	9,f
  5687     0886  2885               	goto	u5847
  5688     0887                     l5407:
  5689     0887  0020               	movlb	0	; select bank0
  5690     0888  0924               	comf	OW_write_bit@PIN,w
  5691     0889  00A5               	movwf	??_OW_write_bit
  5692     088A  0822               	movf	OW_write_bit@LAT,w
  5693     088B  0086               	movwf	6
  5694     088C  0823               	movf	OW_write_bit@LAT+1,w
  5695     088D  0087               	movwf	7
  5696     088E  0825               	movf	??_OW_write_bit,w
  5697     088F  0581               	andwf	1,f
  5698     0890                     l5409:
  5699     0890  0824               	movf	OW_write_bit@PIN,w
  5700     0891  00A5               	movwf	??_OW_write_bit
  5701     0892  0820               	movf	OW_write_bit@TRIS,w
  5702     0893  0086               	movwf	6
  5703     0894  0821               	movf	OW_write_bit@TRIS+1,w
  5704     0895  0087               	movwf	7
  5705     0896  0825               	movf	??_OW_write_bit,w
  5706     0897  0481               	iorwf	1,f
  5707     0898                     l5411:
  5708     0898  30AA               	movlw	170
  5709     0899                     u5857:
  5710     0899  0B89               	decfsz	9,f
  5711     089A  2899               	goto	u5857
  5712     089B  3200               	nop2
  5713     089C  28C5               	goto	l621
  5714     089D                     l5413:
  5715     089D  0924               	comf	OW_write_bit@PIN,w
  5716     089E  00A5               	movwf	??_OW_write_bit
  5717     089F  0822               	movf	OW_write_bit@LAT,w
  5718     08A0  0086               	movwf	6
  5719     08A1  0823               	movf	OW_write_bit@LAT+1,w
  5720     08A2  0087               	movwf	7
  5721     08A3  0825               	movf	??_OW_write_bit,w
  5722     08A4  0581               	andwf	1,f
  5723     08A5  0924               	comf	OW_write_bit@PIN,w
  5724     08A6  00A5               	movwf	??_OW_write_bit
  5725     08A7  0820               	movf	OW_write_bit@TRIS,w
  5726     08A8  0086               	movwf	6
  5727     08A9  0821               	movf	OW_write_bit@TRIS+1,w
  5728     08AA  0087               	movwf	7
  5729     08AB  0825               	movf	??_OW_write_bit,w
  5730     08AC  0581               	andwf	1,f
  5731     08AD                     l5415:
  5732     08AD  30A0               	movlw	160
  5733     08AE                     u5867:
  5734     08AE  0B89               	decfsz	9,f
  5735     08AF  28AE               	goto	u5867
  5736     08B0                     l5417:
  5737     08B0  0020               	movlb	0	; select bank0
  5738     08B1  0924               	comf	OW_write_bit@PIN,w
  5739     08B2  00A5               	movwf	??_OW_write_bit
  5740     08B3  0822               	movf	OW_write_bit@LAT,w
  5741     08B4  0086               	movwf	6
  5742     08B5  0823               	movf	OW_write_bit@LAT+1,w
  5743     08B6  0087               	movwf	7
  5744     08B7  0825               	movf	??_OW_write_bit,w
  5745     08B8  0581               	andwf	1,f
  5746     08B9                     l5419:
  5747     08B9  0824               	movf	OW_write_bit@PIN,w
  5748     08BA  00A5               	movwf	??_OW_write_bit
  5749     08BB  0820               	movf	OW_write_bit@TRIS,w
  5750     08BC  0086               	movwf	6
  5751     08BD  0821               	movf	OW_write_bit@TRIS+1,w
  5752     08BE  0087               	movwf	7
  5753     08BF  0825               	movf	??_OW_write_bit,w
  5754     08C0  0481               	iorwf	1,f
  5755     08C1                     l5421:
  5756     08C1  301A               	movlw	26
  5757     08C2                     u5877:
  5758     08C2  0B89               	decfsz	9,f
  5759     08C3  28C2               	goto	u5877
  5760     08C4  3200               	nop2
  5761     08C5                     l621:
  5762     08C5  0008               	return
  5763     08C6                     __end_of_OW_write_bit:
  5764                           
  5765                           	psect	text9
  5766     08C6                     __ptext9:	
  5767 ;; *************** function _OW_reset_pulse *****************
  5768 ;; Defined at:
  5769 ;;		line 82 in file "1wire.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  TRIS            2    7[BANK0 ] PTR unsigned char 
  5772 ;;		 -> TRISA(1), 
  5773 ;;  PORT            2    9[BANK0 ] PTR unsigned char 
  5774 ;;		 -> PORTA(1), 
  5775 ;;  LAT             2   11[BANK0 ] PTR unsigned char 
  5776 ;;		 -> LATA(1), 
  5777 ;;  PIN             1   13[BANK0 ] unsigned char 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  presence_det    1    0        unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      unsigned char 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5789 ;;      Params:         0       7       0       0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0
  5791 ;;      Temps:          0       1       0       0       0       0       0       0
  5792 ;;      Totals:         0       8       0       0       0       0       0       0
  5793 ;;Total ram usage:        8 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 3
  5796 ;; This function calls:
  5797 ;;		_read_OW
  5798 ;; This function is called by:
  5799 ;;		_DS18B20_Read
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803     08C6                     _OW_reset_pulse:	
  5804                           ;psect for function _OW_reset_pulse
  5805                           
  5806     08C6                     l5463:	
  5807                           ;incstack = 0
  5808                           ; Regs used in _OW_reset_pulse: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5809                           
  5810     08C6  0020               	movlb	0	; select bank0
  5811     08C7  092D               	comf	OW_reset_pulse@PIN,w
  5812     08C8  00AE               	movwf	??_OW_reset_pulse
  5813     08C9  082B               	movf	OW_reset_pulse@LAT,w
  5814     08CA  0086               	movwf	6
  5815     08CB  082C               	movf	OW_reset_pulse@LAT+1,w
  5816     08CC  0087               	movwf	7
  5817     08CD  082E               	movf	??_OW_reset_pulse,w
  5818     08CE  0581               	andwf	1,f
  5819     08CF  092D               	comf	OW_reset_pulse@PIN,w
  5820     08D0  00AE               	movwf	??_OW_reset_pulse
  5821     08D1  0827               	movf	OW_reset_pulse@TRIS,w
  5822     08D2  0086               	movwf	6
  5823     08D3  0828               	movf	OW_reset_pulse@TRIS+1,w
  5824     08D4  0087               	movwf	7
  5825     08D5  082E               	movf	??_OW_reset_pulse,w
  5826     08D6  0581               	andwf	1,f
  5827     08D7                     l5465:
  5828     08D7  3003               	movlw	3
  5829     08D8  0020               	movlb	0	; select bank0
  5830     08D9  00AE               	movwf	??_OW_reset_pulse
  5831     08DA  307D               	movlw	125
  5832     08DB                     u5887:
  5833     08DB  0B89               	decfsz	9,f
  5834     08DC  28DB               	goto	u5887
  5835     08DD  0BAE               	decfsz	??_OW_reset_pulse,f
  5836     08DE  28DB               	goto	u5887
  5837     08DF                     l5467:
  5838     08DF  3003               	movlw	3
  5839     08E0  0020               	movlb	0	; select bank0
  5840     08E1  00AE               	movwf	??_OW_reset_pulse
  5841     08E2  307D               	movlw	125
  5842     08E3                     u5897:
  5843     08E3  0B89               	decfsz	9,f
  5844     08E4  28E3               	goto	u5897
  5845     08E5  0BAE               	decfsz	??_OW_reset_pulse,f
  5846     08E6  28E3               	goto	u5897
  5847     08E7  0020               	movlb	0	; select bank0
  5848     08E8  092D               	comf	OW_reset_pulse@PIN,w
  5849     08E9  00AE               	movwf	??_OW_reset_pulse
  5850     08EA  082B               	movf	OW_reset_pulse@LAT,w
  5851     08EB  0086               	movwf	6
  5852     08EC  082C               	movf	OW_reset_pulse@LAT+1,w
  5853     08ED  0087               	movwf	7
  5854     08EE  082E               	movf	??_OW_reset_pulse,w
  5855     08EF  0581               	andwf	1,f
  5856     08F0  082D               	movf	OW_reset_pulse@PIN,w
  5857     08F1  00AE               	movwf	??_OW_reset_pulse
  5858     08F2  0827               	movf	OW_reset_pulse@TRIS,w
  5859     08F3  0086               	movwf	6
  5860     08F4  0828               	movf	OW_reset_pulse@TRIS+1,w
  5861     08F5  0087               	movwf	7
  5862     08F6  082E               	movf	??_OW_reset_pulse,w
  5863     08F7  0481               	iorwf	1,f
  5864     08F8                     l5469:
  5865     08F8  30BA               	movlw	186
  5866     08F9                     u5907:
  5867     08F9  0B89               	decfsz	9,f
  5868     08FA  28F9               	goto	u5907
  5869     08FB  3200               	nop2
  5870     08FC                     l5471:
  5871     08FC  0020               	movlb	0	; select bank0
  5872     08FD  0828               	movf	OW_reset_pulse@TRIS+1,w
  5873     08FE  00A1               	movwf	read_OW@TRIS+1
  5874     08FF  0827               	movf	OW_reset_pulse@TRIS,w
  5875     0900  00A0               	movwf	read_OW@TRIS
  5876     0901  082A               	movf	OW_reset_pulse@PORT+1,w
  5877     0902  00A3               	movwf	read_OW@PORT+1
  5878     0903  0829               	movf	OW_reset_pulse@PORT,w
  5879     0904  00A2               	movwf	read_OW@PORT
  5880     0905  082D               	movf	OW_reset_pulse@PIN,w
  5881     0906  00A4               	movwf	read_OW@PIN
  5882     0907  3194  247A  3188   	fcall	_read_OW
  5883     090A                     l5473:
  5884     090A  30EA               	movlw	234
  5885     090B                     u5917:
  5886     090B  3200               	nop2
  5887     090C  3200               	nop2
  5888     090D  0B89               	decfsz	9,f
  5889     090E  290B               	goto	u5917
  5890     090F  3200               	nop2
  5891     0910                     l5475:
  5892     0910  30EA               	movlw	234
  5893     0911                     u5927:
  5894     0911  3200               	nop2
  5895     0912  3200               	nop2
  5896     0913  0B89               	decfsz	9,f
  5897     0914  2911               	goto	u5927
  5898     0915  3200               	nop2
  5899     0916                     l5477:
  5900     0916  0020               	movlb	0	; select bank0
  5901     0917  092D               	comf	OW_reset_pulse@PIN,w
  5902     0918  00AE               	movwf	??_OW_reset_pulse
  5903     0919  082B               	movf	OW_reset_pulse@LAT,w
  5904     091A  0086               	movwf	6
  5905     091B  082C               	movf	OW_reset_pulse@LAT+1,w
  5906     091C  0087               	movwf	7
  5907     091D  082E               	movf	??_OW_reset_pulse,w
  5908     091E  0581               	andwf	1,f
  5909     091F                     l5479:
  5910     091F  082D               	movf	OW_reset_pulse@PIN,w
  5911     0920  00AE               	movwf	??_OW_reset_pulse
  5912     0921  0827               	movf	OW_reset_pulse@TRIS,w
  5913     0922  0086               	movwf	6
  5914     0923  0828               	movf	OW_reset_pulse@TRIS+1,w
  5915     0924  0087               	movwf	7
  5916     0925  082E               	movf	??_OW_reset_pulse,w
  5917     0926  0481               	iorwf	1,f
  5918     0927                     l616:
  5919     0927  0008               	return
  5920     0928                     __end_of_OW_reset_pulse:
  5921                           
  5922                           	psect	text10
  5923     1519                     __ptext10:	
  5924 ;; *************** function _OW_read_byte *****************
  5925 ;; Defined at:
  5926 ;;		line 197 in file "1wire.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  TRIS            2   16[BANK0 ] PTR unsigned char 
  5929 ;;		 -> TRISA(1), 
  5930 ;;  PORT            2   18[BANK0 ] PTR unsigned char 
  5931 ;;		 -> PORTA(1), 
  5932 ;;  LAT             2   20[BANK0 ] PTR unsigned char 
  5933 ;;		 -> LATA(1), 
  5934 ;;  PIN             1   22[BANK0 ] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  loop            1   25[BANK0 ] unsigned char 
  5937 ;;  result          1   24[BANK0 ] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      unsigned char 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5947 ;;      Params:         0       7       0       0       0       0       0       0
  5948 ;;      Locals:         0       2       0       0       0       0       0       0
  5949 ;;      Temps:          0       1       0       0       0       0       0       0
  5950 ;;      Totals:         0      10       0       0       0       0       0       0
  5951 ;;Total ram usage:       10 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 4
  5954 ;; This function calls:
  5955 ;;		_OW_read_bit
  5956 ;; This function is called by:
  5957 ;;		_DS18B20_Read
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961     1519                     _OW_read_byte:	
  5962                           ;psect for function _OW_read_byte
  5963                           
  5964     1519                     l5497:	
  5965                           ;incstack = 0
  5966                           ; Regs used in _OW_read_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5967                           
  5968     1519  0020               	movlb	0	; select bank0
  5969     151A  01B8               	clrf	OW_read_byte@result
  5970     151B  01B9               	clrf	OW_read_byte@loop
  5971     151C                     l5503:
  5972     151C  1003               	clrc
  5973     151D  0CB8               	rrf	OW_read_byte@result,f
  5974     151E                     l5505:
  5975     151E  0831               	movf	OW_read_byte@TRIS+1,w
  5976     151F  00A8               	movwf	OW_read_bit@TRIS+1
  5977     1520  0830               	movf	OW_read_byte@TRIS,w
  5978     1521  00A7               	movwf	OW_read_bit@TRIS
  5979     1522  0833               	movf	OW_read_byte@PORT+1,w
  5980     1523  00AA               	movwf	OW_read_bit@PORT+1
  5981     1524  0832               	movf	OW_read_byte@PORT,w
  5982     1525  00A9               	movwf	OW_read_bit@PORT
  5983     1526  0835               	movf	OW_read_byte@LAT+1,w
  5984     1527  00AC               	movwf	OW_read_bit@LAT+1
  5985     1528  0834               	movf	OW_read_byte@LAT,w
  5986     1529  00AB               	movwf	OW_read_bit@LAT
  5987     152A  0836               	movf	OW_read_byte@PIN,w
  5988     152B  00AD               	movwf	OW_read_bit@PIN
  5989     152C  3196  263D  3195   	fcall	_OW_read_bit
  5990     152F  3A00               	xorlw	0
  5991     1530  1903               	skipnz
  5992     1531  2D33               	goto	u4351
  5993     1532  2D34               	goto	u4350
  5994     1533                     u4351:
  5995     1533  2D36               	goto	l5509
  5996     1534                     u4350:
  5997     1534                     l5507:
  5998     1534  0020               	movlb	0	; select bank0
  5999     1535  17B8               	bsf	OW_read_byte@result,7
  6000     1536                     l5509:
  6001     1536  3001               	movlw	1
  6002     1537  0020               	movlb	0	; select bank0
  6003     1538  00B7               	movwf	??_OW_read_byte
  6004     1539  0837               	movf	??_OW_read_byte,w
  6005     153A  07B9               	addwf	OW_read_byte@loop,f
  6006     153B                     l5511:
  6007     153B  3008               	movlw	8
  6008     153C  0239               	subwf	OW_read_byte@loop,w
  6009     153D  1C03               	skipc
  6010     153E  2D40               	goto	u4361
  6011     153F  2D41               	goto	u4360
  6012     1540                     u4361:
  6013     1540  2D1C               	goto	l5503
  6014     1541                     u4360:
  6015     1541                     l5513:
  6016     1541  0838               	movf	OW_read_byte@result,w
  6017     1542                     l635:
  6018     1542  0008               	return
  6019     1543                     __end_of_OW_read_byte:
  6020                           
  6021                           	psect	text11
  6022     163D                     __ptext11:	
  6023 ;; *************** function _OW_read_bit *****************
  6024 ;; Defined at:
  6025 ;;		line 152 in file "1wire.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  TRIS            2    7[BANK0 ] PTR unsigned char 
  6028 ;;		 -> TRISA(1), 
  6029 ;;  PORT            2    9[BANK0 ] PTR unsigned char 
  6030 ;;		 -> PORTA(1), 
  6031 ;;  LAT             2   11[BANK0 ] PTR unsigned char 
  6032 ;;		 -> LATA(1), 
  6033 ;;  PIN             1   13[BANK0 ] unsigned char 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  read_data       1   15[BANK0 ] unsigned char 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      unsigned char 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6045 ;;      Params:         0       7       0       0       0       0       0       0
  6046 ;;      Locals:         0       1       0       0       0       0       0       0
  6047 ;;      Temps:          0       1       0       0       0       0       0       0
  6048 ;;      Totals:         0       9       0       0       0       0       0       0
  6049 ;;Total ram usage:        9 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 3
  6052 ;; This function calls:
  6053 ;;		_read_OW
  6054 ;; This function is called by:
  6055 ;;		_OW_read_byte
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059     163D                     _OW_read_bit:	
  6060                           ;psect for function _OW_read_bit
  6061                           
  6062     163D                     l5423:	
  6063                           ;incstack = 0
  6064                           ; Regs used in _OW_read_bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6065                           
  6066     163D  0020               	movlb	0	; select bank0
  6067     163E  092D               	comf	OW_read_bit@PIN,w
  6068     163F  00AE               	movwf	??_OW_read_bit
  6069     1640  082B               	movf	OW_read_bit@LAT,w
  6070     1641  0086               	movwf	6
  6071     1642  082C               	movf	OW_read_bit@LAT+1,w
  6072     1643  0087               	movwf	7
  6073     1644  082E               	movf	??_OW_read_bit,w
  6074     1645  0581               	andwf	1,f
  6075     1646  092D               	comf	OW_read_bit@PIN,w
  6076     1647  00AE               	movwf	??_OW_read_bit
  6077     1648  0827               	movf	OW_read_bit@TRIS,w
  6078     1649  0086               	movwf	6
  6079     164A  0828               	movf	OW_read_bit@TRIS+1,w
  6080     164B  0087               	movwf	7
  6081     164C  082E               	movf	??_OW_read_bit,w
  6082     164D  0581               	andwf	1,f
  6083     164E                     l5425:
  6084     164E  3010               	movlw	16
  6085     164F                     u5937:
  6086     164F  0B89               	decfsz	9,f
  6087     1650  2E4F               	goto	u5937
  6088     1651                     l5427:
  6089     1651  0020               	movlb	0	; select bank0
  6090     1652  092D               	comf	OW_read_bit@PIN,w
  6091     1653  00AE               	movwf	??_OW_read_bit
  6092     1654  082B               	movf	OW_read_bit@LAT,w
  6093     1655  0086               	movwf	6
  6094     1656  082C               	movf	OW_read_bit@LAT+1,w
  6095     1657  0087               	movwf	7
  6096     1658  082E               	movf	??_OW_read_bit,w
  6097     1659  0581               	andwf	1,f
  6098     165A                     l5429:
  6099     165A  082D               	movf	OW_read_bit@PIN,w
  6100     165B  00AE               	movwf	??_OW_read_bit
  6101     165C  0827               	movf	OW_read_bit@TRIS,w
  6102     165D  0086               	movwf	6
  6103     165E  0828               	movf	OW_read_bit@TRIS+1,w
  6104     165F  0087               	movwf	7
  6105     1660  082E               	movf	??_OW_read_bit,w
  6106     1661  0481               	iorwf	1,f
  6107     1662                     l5431:
  6108     1662  3018               	movlw	24
  6109     1663                     u5947:
  6110     1663  0B89               	decfsz	9,f
  6111     1664  2E63               	goto	u5947
  6112     1665                     l5433:
  6113     1665  0020               	movlb	0	; select bank0
  6114     1666  0828               	movf	OW_read_bit@TRIS+1,w
  6115     1667  00A1               	movwf	read_OW@TRIS+1
  6116     1668  0827               	movf	OW_read_bit@TRIS,w
  6117     1669  00A0               	movwf	read_OW@TRIS
  6118     166A  082A               	movf	OW_read_bit@PORT+1,w
  6119     166B  00A3               	movwf	read_OW@PORT+1
  6120     166C  0829               	movf	OW_read_bit@PORT,w
  6121     166D  00A2               	movwf	read_OW@PORT
  6122     166E  082D               	movf	OW_read_bit@PIN,w
  6123     166F  00A4               	movwf	read_OW@PIN
  6124     1670  3194  247A  3196   	fcall	_read_OW
  6125     1673  0020               	movlb	0	; select bank0
  6126     1674  00AF               	movwf	OW_read_bit@read_data
  6127     1675                     l5435:
  6128     1675  3092               	movlw	146
  6129     1676                     u5957:
  6130     1676  0B89               	decfsz	9,f
  6131     1677  2E76               	goto	u5957
  6132     1678  3200               	nop2
  6133     1679                     l5437:
  6134     1679  0020               	movlb	0	; select bank0
  6135     167A  082F               	movf	OW_read_bit@read_data,w
  6136     167B                     l624:
  6137     167B  0008               	return
  6138     167C                     __end_of_OW_read_bit:
  6139                           
  6140                           	psect	text12
  6141     147A                     __ptext12:	
  6142 ;; *************** function _read_OW *****************
  6143 ;; Defined at:
  6144 ;;		line 60 in file "1wire.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  TRIS            2    0[BANK0 ] PTR unsigned char 
  6147 ;;		 -> TRISA(1), 
  6148 ;;  PORT            2    2[BANK0 ] PTR unsigned char 
  6149 ;;		 -> PORTA(1), 
  6150 ;;  PIN             1    4[BANK0 ] unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  read_data       1    6[BANK0 ] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      unsigned char 
  6155 ;; Registers used:
  6156 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6162 ;;      Params:         0       5       0       0       0       0       0       0
  6163 ;;      Locals:         0       1       0       0       0       0       0       0
  6164 ;;      Temps:          0       1       0       0       0       0       0       0
  6165 ;;      Totals:         0       7       0       0       0       0       0       0
  6166 ;;Total ram usage:        7 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 2
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_OW_reset_pulse
  6173 ;;		_OW_read_bit
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177     147A                     _read_OW:	
  6178                           ;psect for function _read_OW
  6179                           
  6180     147A                     l5349:	
  6181                           ;incstack = 0
  6182                           ; Regs used in _read_OW: [wreg+fsr1l+fsr1h+status,2+status,0]
  6183                           
  6184     147A                     l5351:
  6185     147A  0020               	movlb	0	; select bank0
  6186     147B  0824               	movf	read_OW@PIN,w
  6187     147C  00A5               	movwf	??_read_OW
  6188     147D  0820               	movf	read_OW@TRIS,w
  6189     147E  0086               	movwf	6
  6190     147F  0821               	movf	read_OW@TRIS+1,w
  6191     1480  0087               	movwf	7
  6192     1481  0825               	movf	??_read_OW,w
  6193     1482  0481               	iorwf	1,f
  6194     1483                     l5353:
  6195     1483  0822               	movf	read_OW@PORT,w
  6196     1484  0086               	movwf	6
  6197     1485  0823               	movf	read_OW@PORT+1,w
  6198     1486  0087               	movwf	7
  6199     1487  0801               	movf	1,w
  6200     1488  0524               	andwf	read_OW@PIN,w
  6201     1489  1903               	btfsc	3,2
  6202     148A  2C8C               	goto	u4291
  6203     148B  2C8D               	goto	u4290
  6204     148C                     u4291:
  6205     148C  2C90               	goto	l5357
  6206     148D                     u4290:
  6207     148D                     l5355:
  6208     148D  01A6               	clrf	read_OW@read_data
  6209     148E  0AA6               	incf	read_OW@read_data,f
  6210     148F  2C91               	goto	l5359
  6211     1490                     l5357:
  6212     1490  01A6               	clrf	read_OW@read_data
  6213     1491                     l5359:
  6214     1491  0826               	movf	read_OW@read_data,w
  6215     1492                     l613:
  6216     1492  0008               	return
  6217     1493                     __end_of_read_OW:
  6218                           
  6219                           	psect	text13
  6220     0DFF                     __ptext13:	
  6221 ;; *************** function _DHTRESULT *****************
  6222 ;; Defined at:
  6223 ;;		line 71 in file "main.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  port            1    wreg     unsigned char 
  6226 ;;  tris            1   19[BANK1 ] unsigned char 
  6227 ;;  conector        1   20[BANK1 ] unsigned char 
  6228 ;;  TOUT            1   21[BANK1 ] unsigned char 
  6229 ;;  dht             1   22[BANK1 ] PTR unsigned char 
  6230 ;;		 -> dhtresult(4), 
  6231 ;;  COM             1   23[BANK1 ] PTR unsigned char 
  6232 ;;		 -> COM(4), 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  port            1   24[BANK1 ] unsigned char 
  6235 ;;  j               2   25[BANK1 ] int 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6245 ;;      Params:         0       0       5       0       0       0       0       0
  6246 ;;      Locals:         0       0       3       0       0       0       0       0
  6247 ;;      Temps:          0       5       0       0       0       0       0       0
  6248 ;;      Totals:         0       5       8       0       0       0       0       0
  6249 ;;Total ram usage:       13 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 10
  6252 ;; This function calls:
  6253 ;;		_DHT22READ
  6254 ;;		_sprintf
  6255 ;; This function is called by:
  6256 ;;		_main
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260     0DFF                     _DHTRESULT:	
  6261                           ;psect for function _DHTRESULT
  6262                           
  6263                           
  6264                           ;incstack = 0
  6265                           ; Regs used in _DHTRESULT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6266                           ;DHTRESULT@port stored from wreg
  6267     0DFF  0021               	movlb	1	; select bank1
  6268     0E00  00E5               	movwf	DHTRESULT@port^(0+128)
  6269     0E01                     l5517:
  6270                           
  6271                           ;main.c: 71: void DHTRESULT(unsigned char port, unsigned char tris, unsigned char conect
      +                          or, unsigned char TOUT, unsigned char dht[], unsigned char COM[]);main.c: 72: {;main.c: 
      +                          73:       static unsigned int temp=0, hum=0;;main.c: 74:       DHT22READ(port, tris, con
      +                          ector, TOUT, dht, COM);
  6272     0E01  0860               	movf	DHTRESULT@tris^(0+128),w
  6273     0E02  0020               	movlb	0	; select bank0
  6274     0E03  00A6               	movwf	DHT22READ@tris
  6275     0E04  0021               	movlb	1	; select bank1
  6276     0E05  0861               	movf	DHTRESULT@conector^(0+128),w
  6277     0E06  0020               	movlb	0	; select bank0
  6278     0E07  00A7               	movwf	DHT22READ@entry
  6279     0E08  0021               	movlb	1	; select bank1
  6280     0E09  0862               	movf	DHTRESULT@TOUT^(0+128),w
  6281     0E0A  0020               	movlb	0	; select bank0
  6282     0E0B  00A8               	movwf	DHT22READ@TOUT
  6283     0E0C  0021               	movlb	1	; select bank1
  6284     0E0D  0863               	movf	DHTRESULT@dht^(0+128),w
  6285     0E0E  0020               	movlb	0	; select bank0
  6286     0E0F  00A9               	movwf	DHT22READ@dhtresult
  6287     0E10  0021               	movlb	1	; select bank1
  6288     0E11  0864               	movf	DHTRESULT@COM^(0+128),w
  6289     0E12  0020               	movlb	0	; select bank0
  6290     0E13  00AA               	movwf	DHT22READ@COM
  6291     0E14  0021               	movlb	1	; select bank1
  6292     0E15  0865               	movf	DHTRESULT@port^(0+128),w
  6293     0E16  3197  2757  318D   	fcall	_DHT22READ
  6294     0E19                     l5519:
  6295                           
  6296                           ;main.c: 75:       hum=(unsigned int)((dht[0]<<8) | dht[1]);
  6297     0E19  0021               	movlb	1	; select bank1
  6298     0E1A  0A63               	incf	DHTRESULT@dht^(0+128),w
  6299     0E1B  0086               	movwf	6
  6300     0E1C  3001               	movlw	1	; select bank2/3
  6301     0E1D  0087               	movwf	7
  6302     0E1E  0801               	movf	1,w
  6303     0E1F  0020               	movlb	0	; select bank0
  6304     0E20  00EA               	movwf	??_DHTRESULT
  6305     0E21  01EB               	clrf	??_DHTRESULT+1
  6306     0E22  0021               	movlb	1	; select bank1
  6307     0E23  0863               	movf	DHTRESULT@dht^(0+128),w
  6308     0E24  0086               	movwf	6
  6309     0E25  3001               	movlw	1	; select bank2/3
  6310     0E26  0087               	movwf	7
  6311     0E27  0801               	movf	1,w
  6312     0E28  0020               	movlb	0	; select bank0
  6313     0E29  00EC               	movwf	??_DHTRESULT+2
  6314     0E2A  01ED               	clrf	??_DHTRESULT+3
  6315     0E2B  086C               	movf	??_DHTRESULT+2,w
  6316     0E2C  00ED               	movwf	??_DHTRESULT+3
  6317     0E2D  01EC               	clrf	??_DHTRESULT+2
  6318     0E2E  086A               	movf	??_DHTRESULT,w
  6319     0E2F  046C               	iorwf	??_DHTRESULT+2,w
  6320     0E30  0022               	movlb	2	; select bank2
  6321     0E31  00CD               	movwf	DHTRESULT@hum^(0+256)
  6322     0E32  0020               	movlb	0	; select bank0
  6323     0E33  086B               	movf	??_DHTRESULT+1,w
  6324     0E34  046D               	iorwf	??_DHTRESULT+3,w
  6325     0E35  0022               	movlb	2	; select bank2
  6326     0E36  00CE               	movwf	(DHTRESULT@hum+1)^(0+256)
  6327     0E37                     l5521:
  6328                           
  6329                           ;main.c: 76:       temp=(unsigned int)((dht[2]<<8) | dht[3]);
  6330     0E37  0021               	movlb	1	; select bank1
  6331     0E38  0863               	movf	DHTRESULT@dht^(0+128),w
  6332     0E39  3E03               	addlw	3
  6333     0E3A  0086               	movwf	6
  6334     0E3B  3001               	movlw	1	; select bank2/3
  6335     0E3C  0087               	movwf	7
  6336     0E3D  0801               	movf	1,w
  6337     0E3E  0020               	movlb	0	; select bank0
  6338     0E3F  00EA               	movwf	??_DHTRESULT
  6339     0E40  01EB               	clrf	??_DHTRESULT+1
  6340     0E41  0021               	movlb	1	; select bank1
  6341     0E42  0863               	movf	DHTRESULT@dht^(0+128),w
  6342     0E43  3E02               	addlw	2
  6343     0E44  0086               	movwf	6
  6344     0E45  3001               	movlw	1	; select bank2/3
  6345     0E46  0087               	movwf	7
  6346     0E47  0801               	movf	1,w
  6347     0E48  0020               	movlb	0	; select bank0
  6348     0E49  00EC               	movwf	??_DHTRESULT+2
  6349     0E4A  01ED               	clrf	??_DHTRESULT+3
  6350     0E4B  086C               	movf	??_DHTRESULT+2,w
  6351     0E4C  00ED               	movwf	??_DHTRESULT+3
  6352     0E4D  01EC               	clrf	??_DHTRESULT+2
  6353     0E4E  086A               	movf	??_DHTRESULT,w
  6354     0E4F  046C               	iorwf	??_DHTRESULT+2,w
  6355     0E50  0022               	movlb	2	; select bank2
  6356     0E51  00CF               	movwf	DHTRESULT@temp^(0+256)
  6357     0E52  0020               	movlb	0	; select bank0
  6358     0E53  086B               	movf	??_DHTRESULT+1,w
  6359     0E54  046D               	iorwf	??_DHTRESULT+3,w
  6360     0E55  0022               	movlb	2	; select bank2
  6361     0E56  00D0               	movwf	(DHTRESULT@temp+1)^(0+256)
  6362     0E57                     l5523:
  6363                           
  6364                           ;main.c: 77:       sprintf(tempar,"%u",temp);
  6365     0E57  30C7               	movlw	low _tempar
  6366     0E58  0021               	movlb	1	; select bank1
  6367     0E59  00CD               	movwf	sprintf@s^(0+128)
  6368     0E5A  3000               	movlw	high _tempar
  6369     0E5B  00CE               	movwf	(sprintf@s+1)^(0+128)
  6370     0E5C  3000               	movlw	low (STR_1| (0+32768))
  6371     0E5D  00CF               	movwf	sprintf@fmt^(0+128)
  6372     0E5E  3098               	movlw	high (STR_1| (0+32768))
  6373     0E5F  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  6374     0E60  0022               	movlb	2	; select bank2
  6375     0E61  0850               	movf	(DHTRESULT@temp+1)^(0+256),w
  6376     0E62  0021               	movlb	1	; select bank1
  6377     0E63  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  6378     0E64  0022               	movlb	2	; select bank2
  6379     0E65  084F               	movf	DHTRESULT@temp^(0+256),w
  6380     0E66  0021               	movlb	1	; select bank1
  6381     0E67  00D1               	movwf	(?_sprintf^(0+128)+4)
  6382     0E68  3194  24F4  318D   	fcall	_sprintf
  6383     0E6B                     l5525:
  6384                           
  6385                           ;main.c: 78:       sprintf(humar,"%u",hum);
  6386     0E6B  3064               	movlw	low _humar
  6387     0E6C  0021               	movlb	1	; select bank1
  6388     0E6D  00CD               	movwf	sprintf@s^(0+128)
  6389     0E6E  3001               	movlw	high _humar
  6390     0E6F  00CE               	movwf	(sprintf@s+1)^(0+128)
  6391     0E70  3000               	movlw	low (STR_1| (0+32768))
  6392     0E71  00CF               	movwf	sprintf@fmt^(0+128)
  6393     0E72  3098               	movlw	high (STR_1| (0+32768))
  6394     0E73  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  6395     0E74  0022               	movlb	2	; select bank2
  6396     0E75  084E               	movf	(DHTRESULT@hum+1)^(0+256),w
  6397     0E76  0021               	movlb	1	; select bank1
  6398     0E77  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  6399     0E78  0022               	movlb	2	; select bank2
  6400     0E79  084D               	movf	DHTRESULT@hum^(0+256),w
  6401     0E7A  0021               	movlb	1	; select bank1
  6402     0E7B  00D1               	movwf	(?_sprintf^(0+128)+4)
  6403     0E7C  3194  24F4  318D   	fcall	_sprintf
  6404     0E7F                     l5527:
  6405                           
  6406                           ;main.c: 79:       for(int j=0; j<4; j++){
  6407     0E7F  0021               	movlb	1	; select bank1
  6408     0E80  01E6               	clrf	DHTRESULT@j^(0+128)
  6409     0E81  01E7               	clrf	(DHTRESULT@j+1)^(0+128)
  6410     0E82                     l5533:
  6411                           
  6412                           ;main.c: 80:           if(humar[j]==0) humar[j]='N';
  6413     0E82  0021               	movlb	1	; select bank1
  6414     0E83  0866               	movf	DHTRESULT@j^(0+128),w
  6415     0E84  3E64               	addlw	(low (_humar| (0+256)))& (0+255)
  6416     0E85  0086               	movwf	6
  6417     0E86  3001               	movlw	1	; select bank2/3
  6418     0E87  0087               	movwf	7
  6419     0E88  0801               	movf	1,w
  6420     0E89  1D03               	btfss	3,2
  6421     0E8A  2E8C               	goto	u4371
  6422     0E8B  2E8D               	goto	u4370
  6423     0E8C                     u4371:
  6424     0E8C  2E94               	goto	l184
  6425     0E8D                     u4370:
  6426     0E8D                     l5535:
  6427     0E8D  0866               	movf	DHTRESULT@j^(0+128),w
  6428     0E8E  3E64               	addlw	(low (_humar| (0+256)))& (0+255)
  6429     0E8F  0086               	movwf	6
  6430     0E90  3001               	movlw	1	; select bank2/3
  6431     0E91  0087               	movwf	7
  6432     0E92  304E               	movlw	78
  6433     0E93  0081               	movwf	1
  6434     0E94                     l184:
  6435                           
  6436                           ;main.c: 81:           if(tempar[j]==0) tempar[j]='N';
  6437     0E94  0866               	movf	DHTRESULT@j^(0+128),w
  6438     0E95  3EC7               	addlw	(low (_tempar| 0))& (0+255)
  6439     0E96  0086               	movwf	6
  6440     0E97  0187               	clrf	7
  6441     0E98  0801               	movf	1,w
  6442     0E99  1D03               	btfss	3,2
  6443     0E9A  2E9C               	goto	u4381
  6444     0E9B  2E9D               	goto	u4380
  6445     0E9C                     u4381:
  6446     0E9C  2EA3               	goto	l5539
  6447     0E9D                     u4380:
  6448     0E9D                     l5537:
  6449     0E9D  0866               	movf	DHTRESULT@j^(0+128),w
  6450     0E9E  3EC7               	addlw	(low (_tempar| 0))& (0+255)
  6451     0E9F  0086               	movwf	6
  6452     0EA0  0187               	clrf	7
  6453     0EA1  304E               	movlw	78
  6454     0EA2  0081               	movwf	1
  6455     0EA3                     l5539:
  6456                           
  6457                           ;main.c: 82:       }
  6458     0EA3  3001               	movlw	1
  6459     0EA4  07E6               	addwf	DHTRESULT@j^(0+128),f
  6460     0EA5  3000               	movlw	0
  6461     0EA6  3DE7               	addwfc	(DHTRESULT@j+1)^(0+128),f
  6462     0EA7                     l5541:
  6463     0EA7  0867               	movf	(DHTRESULT@j+1)^(0+128),w
  6464     0EA8  3A80               	xorlw	128
  6465     0EA9  0020               	movlb	0	; select bank0
  6466     0EAA  00EA               	movwf	??_DHTRESULT
  6467     0EAB  3080               	movlw	128
  6468     0EAC  026A               	subwf	??_DHTRESULT,w
  6469     0EAD  1D03               	skipz
  6470     0EAE  2EB2               	goto	u4395
  6471     0EAF  3004               	movlw	4
  6472     0EB0  0021               	movlb	1	; select bank1
  6473     0EB1  0266               	subwf	DHTRESULT@j^(0+128),w
  6474     0EB2                     u4395:
  6475     0EB2  1C03               	skipc
  6476     0EB3  2EB5               	goto	u4391
  6477     0EB4  2EB6               	goto	u4390
  6478     0EB5                     u4391:
  6479     0EB5  2E82               	goto	l5533
  6480     0EB6                     u4390:
  6481     0EB6                     l5543:
  6482                           
  6483                           ;main.c: 83:       DHTS[17]=tempar[0];
  6484     0EB6  0021               	movlb	1	; select bank1
  6485     0EB7  0847               	movf	_tempar^(0+128),w
  6486     0EB8  0023               	movlb	3	; select bank3
  6487     0EB9  00D1               	movwf	(_DHTS^(0+384)+17)
  6488                           
  6489                           ;main.c: 84:       DHTS[18]=tempar[1];
  6490     0EBA  0021               	movlb	1	; select bank1
  6491     0EBB  0848               	movf	(_tempar^(0+128)+1),w
  6492     0EBC  0023               	movlb	3	; select bank3
  6493     0EBD  00D2               	movwf	(_DHTS^(0+384)+18)
  6494                           
  6495                           ;main.c: 85:       DHTS[19]=tempar[2];
  6496     0EBE  0021               	movlb	1	; select bank1
  6497     0EBF  0849               	movf	(_tempar^(0+128)+2),w
  6498     0EC0  0023               	movlb	3	; select bank3
  6499     0EC1  00D3               	movwf	(_DHTS^(0+384)+19)
  6500                           
  6501                           ;main.c: 86:       DHTS[20]=tempar[3];
  6502     0EC2  0021               	movlb	1	; select bank1
  6503     0EC3  084A               	movf	(_tempar^(0+128)+3),w
  6504     0EC4  0023               	movlb	3	; select bank3
  6505     0EC5  00D4               	movwf	(_DHTS^(0+384)+20)
  6506                           
  6507                           ;main.c: 87:       DHTS[6]=humar[0];
  6508     0EC6  0022               	movlb	2	; select bank2
  6509     0EC7  0864               	movf	_humar^(0+256),w
  6510     0EC8  0023               	movlb	3	; select bank3
  6511     0EC9  00C6               	movwf	(_DHTS^(0+384)+6)
  6512                           
  6513                           ;main.c: 88:       DHTS[7]=humar[1];
  6514     0ECA  0022               	movlb	2	; select bank2
  6515     0ECB  0865               	movf	(_humar^(0+256)+1),w
  6516     0ECC  0023               	movlb	3	; select bank3
  6517     0ECD  00C7               	movwf	(_DHTS^(0+384)+7)
  6518                           
  6519                           ;main.c: 89:       DHTS[8]=humar[2];
  6520     0ECE  0022               	movlb	2	; select bank2
  6521     0ECF  0866               	movf	(_humar^(0+256)+2),w
  6522     0ED0  0023               	movlb	3	; select bank3
  6523     0ED1  00C8               	movwf	(_DHTS^(0+384)+8)
  6524                           
  6525                           ;main.c: 90:       DHTS[9]=humar[3];
  6526     0ED2  0022               	movlb	2	; select bank2
  6527     0ED3  0867               	movf	(_humar^(0+256)+3),w
  6528     0ED4  0023               	movlb	3	; select bank3
  6529     0ED5  00C9               	movwf	(_DHTS^(0+384)+9)
  6530     0ED6                     l5545:
  6531                           
  6532                           ;main.c: 91:       tempar[0]=0;
  6533     0ED6  0021               	movlb	1	; select bank1
  6534     0ED7  01C7               	clrf	_tempar^(0+128)
  6535     0ED8                     l5547:
  6536                           
  6537                           ;main.c: 92:       tempar[1]=0;
  6538     0ED8  01C8               	clrf	(_tempar^(0+128)+1)
  6539     0ED9                     l5549:
  6540                           
  6541                           ;main.c: 93:       tempar[2]=0;
  6542     0ED9  01C9               	clrf	(_tempar^(0+128)+2)
  6543     0EDA                     l5551:
  6544                           
  6545                           ;main.c: 94:       tempar[3]=0;
  6546     0EDA  01CA               	clrf	(_tempar^(0+128)+3)
  6547     0EDB                     l5553:
  6548                           
  6549                           ;main.c: 95:       humar[0]=0;
  6550     0EDB  0022               	movlb	2	; select bank2
  6551     0EDC  01E4               	clrf	_humar^(0+256)
  6552     0EDD                     l5555:
  6553                           
  6554                           ;main.c: 96:       humar[1]=0;
  6555     0EDD  01E5               	clrf	(_humar^(0+256)+1)
  6556     0EDE                     l5557:
  6557                           
  6558                           ;main.c: 97:       humar[2]=0;
  6559     0EDE  01E6               	clrf	(_humar^(0+256)+2)
  6560     0EDF                     l5559:
  6561                           
  6562                           ;main.c: 98:       humar[3]=0;
  6563     0EDF  01E7               	clrf	(_humar^(0+256)+3)
  6564     0EE0                     l5561:
  6565                           
  6566                           ;main.c: 99:       med_sl=1;
  6567     0EE0  0021               	movlb	1	; select bank1
  6568     0EE1  01B8               	clrf	_med_sl^(0+128)
  6569     0EE2  0AB8               	incf	_med_sl^(0+128),f
  6570     0EE3                     l5563:
  6571                           
  6572                           ;main.c: 100:       PIE1bits.TXIE = 1;
  6573     0EE3  1611               	bsf	17,4	;volatile
  6574     0EE4                     l186:
  6575     0EE4  0008               	return
  6576     0EE5                     __end_of_DHTRESULT:
  6577                           
  6578                           	psect	text14
  6579     14F4                     __ptext14:	
  6580 ;; *************** function _sprintf *****************
  6581 ;; Defined at:
  6582 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  s               2    0[BANK1 ] PTR unsigned char 
  6585 ;;		 -> KG(8), LUX(5), TEMPDS(4), humar(4), 
  6586 ;;		 -> tempar(4), 
  6587 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  6588 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6589 ;;		 -> STR_1(3), 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  f              10    9[BANK1 ] struct _IO_FILE
  6592 ;;  ret             2    0        int 
  6593 ;;  ap              1    8[BANK1 ] PTR void [1]
  6594 ;;		 -> ?_sprintf(2), 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  2    0[BANK1 ] int 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6604 ;;      Params:         0       0       8       0       0       0       0       0
  6605 ;;      Locals:         0       0      11       0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0
  6607 ;;      Totals:         0       0      19       0       0       0       0       0
  6608 ;;Total ram usage:       19 bytes
  6609 ;; Hardware stack levels used: 1
  6610 ;; Hardware stack levels required when called: 9
  6611 ;; This function calls:
  6612 ;;		_vfprintf
  6613 ;; This function is called by:
  6614 ;;		_DHTRESULT
  6615 ;;		_DS18B20_Read
  6616 ;;		_i2c_Read
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620     14F4                     _sprintf:	
  6621                           ;psect for function _sprintf
  6622                           
  6623     14F4                     l5451:	
  6624                           ;incstack = 0
  6625                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6626                           
  6627     14F4  30D1               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6628     14F5  0021               	movlb	1	; select bank1
  6629     14F6  00D5               	movwf	sprintf@ap^(0+128)
  6630     14F7  084E               	movf	(sprintf@s+1)^(0+128),w
  6631     14F8  00D7               	movwf	(sprintf@f+1)^(0+128)
  6632     14F9  084D               	movf	sprintf@s^(0+128),w
  6633     14FA  00D6               	movwf	sprintf@f^(0+128)
  6634     14FB                     l5453:
  6635     14FB  01D8               	clrf	(sprintf@f^(0+128)+2)
  6636     14FC  01D9               	clrf	((sprintf@f+1)^(0+128)+2)
  6637     14FD                     l5455:
  6638     14FD  01DE               	clrf	(sprintf@f^(0+128)+8)
  6639     14FE  01DF               	clrf	((sprintf@f+1)^(0+128)+8)
  6640     14FF                     l5457:
  6641     14FF  0850               	movf	(sprintf@fmt+1)^(0+128),w
  6642     1500  0020               	movlb	0	; select bank0
  6643     1501  00E4               	movwf	vfprintf@fmt+1
  6644     1502  0021               	movlb	1	; select bank1
  6645     1503  084F               	movf	sprintf@fmt^(0+128),w
  6646     1504  0020               	movlb	0	; select bank0
  6647     1505  00E3               	movwf	vfprintf@fmt
  6648     1506  30D5               	movlw	(low (sprintf@ap| 0))& (0+255)
  6649     1507  00E5               	movwf	vfprintf@ap
  6650     1508  30D6               	movlw	(low (sprintf@f| 0))& (0+255)
  6651     1509  3194  2493  3194   	fcall	_vfprintf
  6652     150C                     l5459:
  6653     150C  3002               	movlw	2
  6654     150D  3ED6               	addlw	(low (sprintf@f| 0))& (0+255)
  6655     150E  0086               	movwf	6
  6656     150F  0187               	clrf	7
  6657     1510  3F40               	moviw [0]fsr1
  6658     1511  0021               	movlb	1	; select bank1
  6659     1512  074D               	addwf	sprintf@s^(0+128),w
  6660     1513  0084               	movwf	4
  6661     1514  3F41               	moviw [1]fsr1
  6662     1515  3D4E               	addwfc	(sprintf@s+1)^(0+128),w
  6663     1516  0085               	movwf	5
  6664     1517  0180               	clrf	0
  6665     1518                     l1248:
  6666     1518  0008               	return
  6667     1519                     __end_of_sprintf:
  6668                           
  6669                           	psect	text15
  6670     1493                     __ptext15:	
  6671 ;; *************** function _vfprintf *****************
  6672 ;; Defined at:
  6673 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  fp              1    wreg     PTR struct _IO_FILE
  6676 ;;		 -> sprintf@f(10), 
  6677 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6678 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6679 ;;		 -> STR_1(3), 
  6680 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6681 ;;		 -> sprintf@ap(1), 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  6684 ;;		 -> sprintf@f(10), 
  6685 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6686 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6687 ;;		 -> STR_1(3), 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  2   67[BANK0 ] int 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6697 ;;      Params:         0       3       0       0       0       0       0       0
  6698 ;;      Locals:         0       3       0       0       0       0       0       0
  6699 ;;      Temps:          0       1       0       0       0       0       0       0
  6700 ;;      Totals:         0       7       0       0       0       0       0       0
  6701 ;;Total ram usage:        7 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 8
  6704 ;; This function calls:
  6705 ;;		_vfpfcnvrt
  6706 ;; This function is called by:
  6707 ;;		_sprintf
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711     1493                     _vfprintf:	
  6712                           ;psect for function _vfprintf
  6713                           
  6714                           
  6715                           ;incstack = 0
  6716                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6717                           ;vfprintf@fp stored from wreg
  6718     1493  0020               	movlb	0	; select bank0
  6719     1494  00E7               	movwf	vfprintf@fp
  6720     1495                     l5441:
  6721                           
  6722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6723     1495  0864               	movf	vfprintf@fmt+1,w
  6724     1496  00E9               	movwf	vfprintf@cfmt+1
  6725     1497  0863               	movf	vfprintf@fmt,w
  6726     1498  00E8               	movwf	vfprintf@cfmt
  6727                           
  6728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6729     1499  2CA2               	goto	l5445
  6730     149A                     l5443:
  6731                           
  6732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6733     149A  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6734     149B  00D2               	movwf	vfpfcnvrt@fmt
  6735     149C  0865               	movf	vfprintf@ap,w
  6736     149D  00D3               	movwf	vfpfcnvrt@ap
  6737     149E  0867               	movf	vfprintf@fp,w
  6738     149F  318A  221D  3194   	fcall	_vfpfcnvrt
  6739     14A2                     l5445:
  6740                           
  6741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6742     14A2  0020               	movlb	0	; select bank0
  6743     14A3  0868               	movf	vfprintf@cfmt,w
  6744     14A4  0084               	movwf	4
  6745     14A5  0869               	movf	vfprintf@cfmt+1,w
  6746     14A6  0085               	movwf	5
  6747     14A7  0012               	moviw fsr0++
  6748     14A8  1D03               	btfss	3,2
  6749     14A9  2CAB               	goto	u4331
  6750     14AA  2CAC               	goto	u4330
  6751     14AB                     u4331:
  6752     14AB  2C9A               	goto	l5443
  6753     14AC                     u4330:
  6754     14AC                     l5447:
  6755                           
  6756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6757     14AC  01E3               	clrf	?_vfprintf
  6758     14AD  01E4               	clrf	?_vfprintf+1
  6759     14AE                     l1300:
  6760     14AE  0008               	return
  6761     14AF                     __end_of_vfprintf:
  6762                           
  6763                           	psect	text16
  6764     0A1D                     __ptext16:	
  6765 ;; *************** function _vfpfcnvrt *****************
  6766 ;; Defined at:
  6767 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  fp              1    wreg     PTR struct _IO_FILE
  6770 ;;		 -> sprintf@f(10), 
  6771 ;;  fmt             1   50[BANK0 ] PTR PTR unsigned char 
  6772 ;;		 -> vfprintf@cfmt(2), 
  6773 ;;  ap              1   51[BANK0 ] PTR PTR void 
  6774 ;;		 -> sprintf@ap(1), 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  6777 ;;		 -> sprintf@f(10), 
  6778 ;;  convarg         8   56[BANK0 ] struct .
  6779 ;;  cp              2   65[BANK0 ] PTR unsigned char 
  6780 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6781 ;;		 -> STR_1(3), 
  6782 ;;  i               2    0        int 
  6783 ;;  done            2    0        int 
  6784 ;;  c               1    0        unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6794 ;;      Params:         0       2       0       0       0       0       0       0
  6795 ;;      Locals:         0      11       0       0       0       0       0       0
  6796 ;;      Temps:          0       4       0       0       0       0       0       0
  6797 ;;      Totals:         0      17       0       0       0       0       0       0
  6798 ;;Total ram usage:       17 bytes
  6799 ;; Hardware stack levels used: 1
  6800 ;; Hardware stack levels required when called: 7
  6801 ;; This function calls:
  6802 ;;		_fputc
  6803 ;;		_utoa
  6804 ;; This function is called by:
  6805 ;;		_vfprintf
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809     0A1D                     _vfpfcnvrt:	
  6810                           ;psect for function _vfpfcnvrt
  6811                           
  6812                           
  6813                           ;incstack = 0
  6814                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6815                           ;vfpfcnvrt@fp stored from wreg
  6816     0A1D  0020               	movlb	0	; select bank0
  6817     0A1E  00E0               	movwf	vfpfcnvrt@fp
  6818     0A1F                     l5363:
  6819                           
  6820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6821     0A1F  0852               	movf	vfpfcnvrt@fmt,w
  6822     0A20  0086               	movwf	6
  6823     0A21  0187               	clrf	7
  6824     0A22  3F40               	moviw [0]fsr1
  6825     0A23  00D4               	movwf	??_vfpfcnvrt
  6826     0A24  3F41               	moviw [1]fsr1
  6827     0A25  00D5               	movwf	??_vfpfcnvrt+1
  6828     0A26  0854               	movf	??_vfpfcnvrt,w
  6829     0A27  0084               	movwf	4
  6830     0A28  0855               	movf	??_vfpfcnvrt+1,w
  6831     0A29  0085               	movwf	5
  6832     0A2A  0012               	moviw fsr0++
  6833     0A2B  3A25               	xorlw	37
  6834     0A2C  1D03               	btfss	3,2
  6835     0A2D  2A2F               	goto	u4301
  6836     0A2E  2A30               	goto	u4300
  6837     0A2F                     u4301:
  6838     0A2F  2AA7               	goto	l5391
  6839     0A30                     u4300:
  6840     0A30                     l5365:
  6841                           
  6842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6843     0A30  0852               	movf	vfpfcnvrt@fmt,w
  6844     0A31  0086               	movwf	6
  6845     0A32  0187               	clrf	7
  6846     0A33  3001               	movlw	1
  6847     0A34  0781               	addwf	1,f
  6848     0A35  3141               	addfsr 1,1
  6849     0A36  1803               	skipnc
  6850     0A37  0A81               	incf	1,f
  6851     0A38                     l5367:
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6854     0A38  0022               	movlb	2	; select bank2
  6855     0A39  01CB               	clrf	_width^(0+256)
  6856     0A3A  01CC               	clrf	(_width+1)^(0+256)
  6857     0A3B  1003               	clrc
  6858     0A3C  3000               	movlw	0
  6859     0A3D  1803               	btfsc	3,0
  6860     0A3E  3001               	movlw	1
  6861     0A3F  0021               	movlb	1	; select bank1
  6862     0A40  00A6               	movwf	_flags^(0+128)
  6863     0A41                     l5369:
  6864                           
  6865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6866     0A41  30FF               	movlw	255
  6867     0A42  00A0               	movwf	_prec^(0+128)
  6868     0A43  30FF               	movlw	255
  6869     0A44  00A1               	movwf	(_prec^(0+128)+1)
  6870     0A45                     l5371:
  6871                           
  6872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  6873     0A45  0020               	movlb	0	; select bank0
  6874     0A46  0852               	movf	vfpfcnvrt@fmt,w
  6875     0A47  0086               	movwf	6
  6876     0A48  0187               	clrf	7
  6877     0A49  3F40               	moviw [0]fsr1
  6878     0A4A  00E1               	movwf	vfpfcnvrt@cp
  6879     0A4B  3F41               	moviw [1]fsr1
  6880     0A4C  00E2               	movwf	vfpfcnvrt@cp+1
  6881     0A4D                     l5373:
  6882     0A4D  0861               	movf	vfpfcnvrt@cp,w
  6883     0A4E  0084               	movwf	4
  6884     0A4F  0862               	movf	vfpfcnvrt@cp+1,w
  6885     0A50  0085               	movwf	5
  6886     0A51  0012               	moviw fsr0++
  6887     0A52  3A75               	xorlw	117
  6888     0A53  1D03               	btfss	3,2
  6889     0A54  2A56               	goto	u4311
  6890     0A55  2A57               	goto	u4310
  6891     0A56                     u4311:
  6892     0A56  2A9D               	goto	l5387
  6893     0A57                     u4310:
  6894     0A57                     l5375:
  6895                           
  6896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6897     0A57  0853               	movf	vfpfcnvrt@ap,w
  6898     0A58  0086               	movwf	6
  6899     0A59  0187               	clrf	7
  6900     0A5A  0801               	movf	1,w
  6901     0A5B  0084               	movwf	4
  6902     0A5C  0185               	clrf	5
  6903     0A5D  3002               	movlw	2
  6904     0A5E  0781               	addwf	1,f
  6905     0A5F  3F00               	moviw [0]fsr0
  6906     0A60  00D8               	movwf	vfpfcnvrt@convarg
  6907     0A61  3F01               	moviw [1]fsr0
  6908     0A62  00D9               	movwf	vfpfcnvrt@convarg+1
  6909     0A63  01DA               	clrf	vfpfcnvrt@convarg+2
  6910     0A64  01DB               	clrf	vfpfcnvrt@convarg+3
  6911     0A65  01DC               	clrf	vfpfcnvrt@convarg+4
  6912     0A66  01DD               	clrf	vfpfcnvrt@convarg+5
  6913     0A67  01DE               	clrf	vfpfcnvrt@convarg+6
  6914     0A68  01DF               	clrf	vfpfcnvrt@convarg+7
  6915     0A69                     l5377:
  6916                           
  6917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  6918     0A69  0861               	movf	vfpfcnvrt@cp,w
  6919     0A6A  3E01               	addlw	1
  6920     0A6B  00D4               	movwf	??_vfpfcnvrt
  6921     0A6C  3000               	movlw	0
  6922     0A6D  3D62               	addwfc	vfpfcnvrt@cp+1,w
  6923     0A6E  00D5               	movwf	??_vfpfcnvrt+1
  6924     0A6F  0852               	movf	vfpfcnvrt@fmt,w
  6925     0A70  0086               	movwf	6
  6926     0A71  0187               	clrf	7
  6927     0A72  0854               	movf	??_vfpfcnvrt,w
  6928     0A73  3FC0               	movwi [0]fsr1
  6929     0A74  0855               	movf	??_vfpfcnvrt+1,w
  6930     0A75  3FC1               	movwi [1]fsr1
  6931                           
  6932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  6933     0A76  2A8C               	goto	l5385
  6934     0A77                     l5379:
  6935                           
  6936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  6937     0A77  0858               	movf	vfpfcnvrt@convarg,w
  6938     0A78  00BA               	movwf	utoa@d
  6939     0A79  0859               	movf	vfpfcnvrt@convarg+1,w
  6940     0A7A  00BB               	movwf	utoa@d+1
  6941     0A7B  085A               	movf	vfpfcnvrt@convarg+2,w
  6942     0A7C  00BC               	movwf	utoa@d+2
  6943     0A7D  085B               	movf	vfpfcnvrt@convarg+3,w
  6944     0A7E  00BD               	movwf	utoa@d+3
  6945     0A7F  085C               	movf	vfpfcnvrt@convarg+4,w
  6946     0A80  00BE               	movwf	utoa@d+4
  6947     0A81  085D               	movf	vfpfcnvrt@convarg+5,w
  6948     0A82  00BF               	movwf	utoa@d+5
  6949     0A83  085E               	movf	vfpfcnvrt@convarg+6,w
  6950     0A84  00C0               	movwf	utoa@d+6
  6951     0A85  085F               	movf	vfpfcnvrt@convarg+7,w
  6952     0A86  00C1               	movwf	utoa@d+7
  6953     0A87  0860               	movf	vfpfcnvrt@fp,w
  6954     0A88  318B  2379  318A   	fcall	_utoa
  6955     0A8B  2ABF               	goto	l1293
  6956     0A8C                     l5385:
  6957     0A8C  0861               	movf	vfpfcnvrt@cp,w
  6958     0A8D  0084               	movwf	4
  6959     0A8E  0862               	movf	vfpfcnvrt@cp+1,w
  6960     0A8F  0085               	movwf	5
  6961     0A90  0800               	movf	0,w	;code access
  6962     0A91  00D4               	movwf	??_vfpfcnvrt
  6963     0A92  01D5               	clrf	??_vfpfcnvrt+1
  6964                           
  6965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6966                           ; Switch size 1, requested type "simple"
  6967                           ; Number of cases is 1, Range of values is 0 to 0
  6968                           ; switch strategies available:
  6969                           ; Name         Instructions Cycles
  6970                           ; simple_byte            4     3 (average)
  6971                           ; direct_byte            8     6 (fixed)
  6972                           ; jumptable            260     6 (fixed)
  6973                           ;	Chosen strategy is simple_byte
  6974     0A93  0855               	movf	??_vfpfcnvrt+1,w
  6975     0A94  3A00               	xorlw	0	; case 0
  6976     0A95  1903               	skipnz
  6977     0A96  2A98               	goto	l6763
  6978     0A97  2A9D               	goto	l5387
  6979     0A98                     l6763:
  6980                           
  6981                           ; Switch size 1, requested type "simple"
  6982                           ; Number of cases is 1, Range of values is 117 to 117
  6983                           ; switch strategies available:
  6984                           ; Name         Instructions Cycles
  6985                           ; simple_byte            4     3 (average)
  6986                           ; direct_byte           11     9 (fixed)
  6987                           ; jumptable            263     9 (fixed)
  6988                           ;	Chosen strategy is simple_byte
  6989     0A98  0854               	movf	??_vfpfcnvrt,w
  6990     0A99  3A75               	xorlw	117	; case 117
  6991     0A9A  1903               	skipnz
  6992     0A9B  2A77               	goto	l5379
  6993     0A9C  2A9D               	goto	l5387
  6994     0A9D                     l5387:
  6995                           
  6996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  6997     0A9D  0020               	movlb	0	; select bank0
  6998     0A9E  0852               	movf	vfpfcnvrt@fmt,w
  6999     0A9F  0086               	movwf	6
  7000     0AA0  0187               	clrf	7
  7001     0AA1  3001               	movlw	1
  7002     0AA2  0781               	addwf	1,f
  7003     0AA3  3141               	addfsr 1,1
  7004     0AA4  1803               	skipnc
  7005     0AA5  0A81               	incf	1,f
  7006     0AA6  2ABF               	goto	l1293
  7007     0AA7                     l5391:
  7008                           
  7009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7010     0AA7  0852               	movf	vfpfcnvrt@fmt,w
  7011     0AA8  0086               	movwf	6
  7012     0AA9  0187               	clrf	7
  7013     0AAA  3F40               	moviw [0]fsr1
  7014     0AAB  00D4               	movwf	??_vfpfcnvrt
  7015     0AAC  3F41               	moviw [1]fsr1
  7016     0AAD  00D5               	movwf	??_vfpfcnvrt+1
  7017     0AAE  0854               	movf	??_vfpfcnvrt,w
  7018     0AAF  0084               	movwf	4
  7019     0AB0  0855               	movf	??_vfpfcnvrt+1,w
  7020     0AB1  0085               	movwf	5
  7021     0AB2  0800               	movf	0,w	;code access
  7022     0AB3  00D6               	movwf	??_vfpfcnvrt+2
  7023     0AB4  01D7               	clrf	??_vfpfcnvrt+3
  7024     0AB5  0856               	movf	??_vfpfcnvrt+2,w
  7025     0AB6  00A0               	movwf	fputc@c
  7026     0AB7  0857               	movf	??_vfpfcnvrt+3,w
  7027     0AB8  00A1               	movwf	fputc@c+1
  7028     0AB9  0860               	movf	vfpfcnvrt@fp,w
  7029     0ABA  00A2               	movwf	fputc@fp
  7030     0ABB  3188  2016  318A   	fcall	_fputc
  7031     0ABE  2A9D               	goto	l5387
  7032     0ABF                     l1293:
  7033     0ABF  0008               	return
  7034     0AC0                     __end_of_vfpfcnvrt:
  7035                           
  7036                           	psect	text17
  7037     0B79                     __ptext17:	
  7038 ;; *************** function _utoa *****************
  7039 ;; Defined at:
  7040 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  fp              1    wreg     PTR struct _IO_FILE
  7043 ;;		 -> sprintf@f(10), 
  7044 ;;  d               8   26[BANK0 ] unsigned long long 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  7047 ;;		 -> sprintf@f(10), 
  7048 ;;  n               8   40[BANK0 ] unsigned long long 
  7049 ;;  i               2   48[BANK0 ] int 
  7050 ;;  p               2   38[BANK0 ] int 
  7051 ;;  w               2   36[BANK0 ] int 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7061 ;;      Params:         0       8       0       0       0       0       0       0
  7062 ;;      Locals:         0      15       0       0       0       0       0       0
  7063 ;;      Temps:          0       1       0       0       0       0       0       0
  7064 ;;      Totals:         0      24       0       0       0       0       0       0
  7065 ;;Total ram usage:       24 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 6
  7068 ;; This function calls:
  7069 ;;		___lodiv
  7070 ;;		___lomod
  7071 ;;		_pad
  7072 ;; This function is called by:
  7073 ;;		_vfpfcnvrt
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077     0B79                     _utoa:	
  7078                           ;psect for function _utoa
  7079                           
  7080                           
  7081                           ;incstack = 0
  7082                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7083                           ;utoa@fp stored from wreg
  7084     0B79  0020               	movlb	0	; select bank0
  7085     0B7A  00C3               	movwf	utoa@fp
  7086     0B7B                     l5319:
  7087                           
  7088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  7089     0B7B  0021               	movlb	1	; select bank1
  7090     0B7C  0821               	movf	(_prec+1)^(0+128),w
  7091     0B7D  3A80               	xorlw	128
  7092     0B7E  0020               	movlb	0	; select bank0
  7093     0B7F  00C2               	movwf	??_utoa
  7094     0B80  3080               	movlw	128
  7095     0B81  0242               	subwf	??_utoa,w
  7096     0B82  1D03               	skipz
  7097     0B83  2B87               	goto	u4255
  7098     0B84  3001               	movlw	1
  7099     0B85  0021               	movlb	1	; select bank1
  7100     0B86  0220               	subwf	_prec^(0+128),w
  7101     0B87                     u4255:
  7102     0B87  1803               	skipnc
  7103     0B88  2B8A               	goto	u4251
  7104     0B89  2B8B               	goto	u4250
  7105     0B8A                     u4251:
  7106     0B8A  2B91               	goto	l5323
  7107     0B8B                     u4250:
  7108     0B8B                     l5321:
  7109     0B8B  3001               	movlw	1
  7110     0B8C  0020               	movlb	0	; select bank0
  7111     0B8D  00C6               	movwf	utoa@p
  7112     0B8E  3000               	movlw	0
  7113     0B8F  00C7               	movwf	utoa@p+1
  7114     0B90  2B99               	goto	l1278
  7115     0B91                     l5323:
  7116     0B91  0021               	movlb	1	; select bank1
  7117     0B92  0821               	movf	(_prec+1)^(0+128),w
  7118     0B93  0020               	movlb	0	; select bank0
  7119     0B94  00C7               	movwf	utoa@p+1
  7120     0B95  0021               	movlb	1	; select bank1
  7121     0B96  0820               	movf	_prec^(0+128),w
  7122     0B97  0020               	movlb	0	; select bank0
  7123     0B98  00C6               	movwf	utoa@p
  7124     0B99                     l1278:
  7125                           
  7126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  7127     0B99  0022               	movlb	2	; select bank2
  7128     0B9A  084C               	movf	(_width+1)^(0+256),w
  7129     0B9B  0020               	movlb	0	; select bank0
  7130     0B9C  00C5               	movwf	utoa@w+1
  7131     0B9D  0022               	movlb	2	; select bank2
  7132     0B9E  084B               	movf	_width^(0+256),w
  7133     0B9F  0020               	movlb	0	; select bank0
  7134     0BA0  00C4               	movwf	utoa@w
  7135     0BA1                     l5325:
  7136                           
  7137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  7138     0BA1  083A               	movf	utoa@d,w
  7139     0BA2  00C8               	movwf	utoa@n
  7140     0BA3  083B               	movf	utoa@d+1,w
  7141     0BA4  00C9               	movwf	utoa@n+1
  7142     0BA5  083C               	movf	utoa@d+2,w
  7143     0BA6  00CA               	movwf	utoa@n+2
  7144     0BA7  083D               	movf	utoa@d+3,w
  7145     0BA8  00CB               	movwf	utoa@n+3
  7146     0BA9  083E               	movf	utoa@d+4,w
  7147     0BAA  00CC               	movwf	utoa@n+4
  7148     0BAB  083F               	movf	utoa@d+5,w
  7149     0BAC  00CD               	movwf	utoa@n+5
  7150     0BAD  0840               	movf	utoa@d+6,w
  7151     0BAE  00CE               	movwf	utoa@n+6
  7152     0BAF  0841               	movf	utoa@d+7,w
  7153     0BB0  00CF               	movwf	utoa@n+7
  7154                           
  7155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  7156     0BB1  301F               	movlw	31
  7157     0BB2  00D0               	movwf	utoa@i
  7158     0BB3  3000               	movlw	0
  7159     0BB4  00D1               	movwf	utoa@i+1
  7160     0BB5                     l5327:
  7161                           
  7162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  7163     0BB5  0023               	movlb	3	; select bank3
  7164     0BB6  01BF               	clrf	(_dbuf^(0+384)+31)
  7165                           
  7166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  7167     0BB7  2C17               	goto	l5339
  7168     0BB8                     l5329:
  7169                           
  7170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  7171     0BB8  30FF               	movlw	255
  7172     0BB9  0020               	movlb	0	; select bank0
  7173     0BBA  07D0               	addwf	utoa@i,f
  7174     0BBB  30FF               	movlw	255
  7175     0BBC  3DD1               	addwfc	utoa@i+1,f
  7176     0BBD                     l5331:
  7177                           
  7178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  7179     0BBD  0850               	movf	utoa@i,w
  7180     0BBE  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7181     0BBF  0086               	movwf	6
  7182     0BC0  3001               	movlw	1	; select bank3/4
  7183     0BC1  0087               	movwf	7
  7184     0BC2  300A               	movlw	10
  7185     0BC3  00A0               	movwf	___lomod@divisor
  7186     0BC4  01A1               	clrf	___lomod@divisor+1
  7187     0BC5  01A2               	clrf	___lomod@divisor+2
  7188     0BC6  01A3               	clrf	___lomod@divisor+3
  7189     0BC7  01A4               	clrf	___lomod@divisor+4
  7190     0BC8  01A5               	clrf	___lomod@divisor+5
  7191     0BC9  01A6               	clrf	___lomod@divisor+6
  7192     0BCA  01A7               	clrf	___lomod@divisor+7
  7193     0BCB  0848               	movf	utoa@n,w
  7194     0BCC  00A8               	movwf	___lomod@dividend
  7195     0BCD  0849               	movf	utoa@n+1,w
  7196     0BCE  00A9               	movwf	___lomod@dividend+1
  7197     0BCF  084A               	movf	utoa@n+2,w
  7198     0BD0  00AA               	movwf	___lomod@dividend+2
  7199     0BD1  084B               	movf	utoa@n+3,w
  7200     0BD2  00AB               	movwf	___lomod@dividend+3
  7201     0BD3  084C               	movf	utoa@n+4,w
  7202     0BD4  00AC               	movwf	___lomod@dividend+4
  7203     0BD5  084D               	movf	utoa@n+5,w
  7204     0BD6  00AD               	movwf	___lomod@dividend+5
  7205     0BD7  084E               	movf	utoa@n+6,w
  7206     0BD8  00AE               	movwf	___lomod@dividend+6
  7207     0BD9  084F               	movf	utoa@n+7,w
  7208     0BDA  00AF               	movwf	___lomod@dividend+7
  7209     0BDB  3189  2128  318B   	fcall	___lomod
  7210     0BDE  0020               	movlb	0	; select bank0
  7211     0BDF  0820               	movf	?___lomod,w
  7212     0BE0  3E30               	addlw	48
  7213     0BE1  0081               	movwf	1
  7214     0BE2                     l5333:
  7215                           
  7216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  7217     0BE2  30FF               	movlw	255
  7218     0BE3  07C6               	addwf	utoa@p,f
  7219     0BE4  30FF               	movlw	255
  7220     0BE5  3DC7               	addwfc	utoa@p+1,f
  7221     0BE6                     l5335:
  7222                           
  7223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  7224     0BE6  30FF               	movlw	255
  7225     0BE7  07C4               	addwf	utoa@w,f
  7226     0BE8  30FF               	movlw	255
  7227     0BE9  3DC5               	addwfc	utoa@w+1,f
  7228     0BEA                     l5337:
  7229                           
  7230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  7231     0BEA  300A               	movlw	10
  7232     0BEB  00A0               	movwf	___lodiv@divisor
  7233     0BEC  01A1               	clrf	___lodiv@divisor+1
  7234     0BED  01A2               	clrf	___lodiv@divisor+2
  7235     0BEE  01A3               	clrf	___lodiv@divisor+3
  7236     0BEF  01A4               	clrf	___lodiv@divisor+4
  7237     0BF0  01A5               	clrf	___lodiv@divisor+5
  7238     0BF1  01A6               	clrf	___lodiv@divisor+6
  7239     0BF2  01A7               	clrf	___lodiv@divisor+7
  7240     0BF3  0848               	movf	utoa@n,w
  7241     0BF4  00A8               	movwf	___lodiv@dividend
  7242     0BF5  0849               	movf	utoa@n+1,w
  7243     0BF6  00A9               	movwf	___lodiv@dividend+1
  7244     0BF7  084A               	movf	utoa@n+2,w
  7245     0BF8  00AA               	movwf	___lodiv@dividend+2
  7246     0BF9  084B               	movf	utoa@n+3,w
  7247     0BFA  00AB               	movwf	___lodiv@dividend+3
  7248     0BFB  084C               	movf	utoa@n+4,w
  7249     0BFC  00AC               	movwf	___lodiv@dividend+4
  7250     0BFD  084D               	movf	utoa@n+5,w
  7251     0BFE  00AD               	movwf	___lodiv@dividend+5
  7252     0BFF  084E               	movf	utoa@n+6,w
  7253     0C00  00AE               	movwf	___lodiv@dividend+6
  7254     0C01  084F               	movf	utoa@n+7,w
  7255     0C02  00AF               	movwf	___lodiv@dividend+7
  7256     0C03  3187  276B  318B   	fcall	___lodiv
  7257     0C06  0020               	movlb	0	; select bank0
  7258     0C07  0820               	movf	?___lodiv,w
  7259     0C08  00C8               	movwf	utoa@n
  7260     0C09  0821               	movf	?___lodiv+1,w
  7261     0C0A  00C9               	movwf	utoa@n+1
  7262     0C0B  0822               	movf	?___lodiv+2,w
  7263     0C0C  00CA               	movwf	utoa@n+2
  7264     0C0D  0823               	movf	?___lodiv+3,w
  7265     0C0E  00CB               	movwf	utoa@n+3
  7266     0C0F  0824               	movf	?___lodiv+4,w
  7267     0C10  00CC               	movwf	utoa@n+4
  7268     0C11  0825               	movf	?___lodiv+5,w
  7269     0C12  00CD               	movwf	utoa@n+5
  7270     0C13  0826               	movf	?___lodiv+6,w
  7271     0C14  00CE               	movwf	utoa@n+6
  7272     0C15  0827               	movf	?___lodiv+7,w
  7273     0C16  00CF               	movwf	utoa@n+7
  7274     0C17                     l5339:
  7275                           
  7276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  7277     0C17  0020               	movlb	0	; select bank0
  7278     0C18  0850               	movf	utoa@i,w
  7279     0C19  0451               	iorwf	utoa@i+1,w
  7280     0C1A  1903               	btfsc	3,2
  7281     0C1B  2C1D               	goto	u4261
  7282     0C1C  2C1E               	goto	u4260
  7283     0C1D                     u4261:
  7284     0C1D  2C37               	goto	l5345
  7285     0C1E                     u4260:
  7286     0C1E                     l5341:
  7287     0C1E  0848               	movf	utoa@n,w
  7288     0C1F  0449               	iorwf	utoa@n+1,w
  7289     0C20  044A               	iorwf	utoa@n+2,w
  7290     0C21  044B               	iorwf	utoa@n+3,w
  7291     0C22  044C               	iorwf	utoa@n+4,w
  7292     0C23  044D               	iorwf	utoa@n+5,w
  7293     0C24  044E               	iorwf	utoa@n+6,w
  7294     0C25  044F               	iorwf	utoa@n+7,w
  7295     0C26  1D03               	skipz
  7296     0C27  2C29               	goto	u4271
  7297     0C28  2C2A               	goto	u4270
  7298     0C29                     u4271:
  7299     0C29  2BB8               	goto	l5329
  7300     0C2A                     u4270:
  7301     0C2A                     l5343:
  7302     0C2A  0847               	movf	utoa@p+1,w
  7303     0C2B  3A80               	xorlw	128
  7304     0C2C  00C2               	movwf	??_utoa
  7305     0C2D  3080               	movlw	128
  7306     0C2E  0242               	subwf	??_utoa,w
  7307     0C2F  1D03               	skipz
  7308     0C30  2C33               	goto	u4285
  7309     0C31  3001               	movlw	1
  7310     0C32  0246               	subwf	utoa@p,w
  7311     0C33                     u4285:
  7312     0C33  1803               	skipnc
  7313     0C34  2C36               	goto	u4281
  7314     0C35  2C37               	goto	u4280
  7315     0C36                     u4281:
  7316     0C36  2BB8               	goto	l5329
  7317     0C37                     u4280:
  7318     0C37                     l5345:
  7319                           
  7320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7321     0C37  0020               	movlb	0	; select bank0
  7322     0C38  0850               	movf	utoa@i,w
  7323     0C39  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7324     0C3A  00AF               	movwf	pad@buf
  7325     0C3B  0845               	movf	utoa@w+1,w
  7326     0C3C  00B1               	movwf	pad@p+1
  7327     0C3D  0844               	movf	utoa@w,w
  7328     0C3E  00B0               	movwf	pad@p
  7329     0C3F  0843               	movf	utoa@fp,w
  7330     0C40  3195  25CC  318B   	fcall	_pad
  7331     0C43                     l1284:
  7332     0C43  0008               	return
  7333     0C44                     __end_of_utoa:
  7334                           
  7335                           	psect	text18
  7336     15CC                     __ptext18:	
  7337 ;; *************** function _pad *****************
  7338 ;; Defined at:
  7339 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  fp              1    wreg     PTR struct _IO_FILE
  7342 ;;		 -> sprintf@f(10), 
  7343 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  7344 ;;		 -> dbuf(32), 
  7345 ;;  p               2   16[BANK0 ] int 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  7348 ;;		 -> sprintf@f(10), 
  7349 ;;  w               2   21[BANK0 ] int 
  7350 ;;  i               2   19[BANK0 ] int 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1    wreg      void 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7360 ;;      Params:         0       3       0       0       0       0       0       0
  7361 ;;      Locals:         0       5       0       0       0       0       0       0
  7362 ;;      Temps:          0       1       0       0       0       0       0       0
  7363 ;;      Totals:         0       9       0       0       0       0       0       0
  7364 ;;Total ram usage:        9 bytes
  7365 ;; Hardware stack levels used: 1
  7366 ;; Hardware stack levels required when called: 5
  7367 ;; This function calls:
  7368 ;;		_fputc
  7369 ;;		_fputs
  7370 ;; This function is called by:
  7371 ;;		_utoa
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375     15CC                     _pad:	
  7376                           ;psect for function _pad
  7377                           
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7381                           ;pad@fp stored from wreg
  7382     15CC  0020               	movlb	0	; select bank0
  7383     15CD  00B7               	movwf	pad@fp
  7384     15CE                     l5305:
  7385                           
  7386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7387     15CE  1BB1               	btfsc	pad@p+1,7
  7388     15CF  2DD1               	goto	u4231
  7389     15D0  2DD2               	goto	u4230
  7390     15D1                     u4231:
  7391     15D1  2DD7               	goto	l5309
  7392     15D2                     u4230:
  7393     15D2                     l5307:
  7394     15D2  0831               	movf	pad@p+1,w
  7395     15D3  00B6               	movwf	pad@w+1
  7396     15D4  0830               	movf	pad@p,w
  7397     15D5  00B5               	movwf	pad@w
  7398     15D6  2DD9               	goto	l1268
  7399     15D7                     l5309:
  7400     15D7  01B5               	clrf	pad@w
  7401     15D8  01B6               	clrf	pad@w+1
  7402     15D9                     l1268:
  7403                           
  7404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7405     15D9  01B3               	clrf	pad@i
  7406     15DA  01B4               	clrf	pad@i+1
  7407                           
  7408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7409     15DB  2DEB               	goto	l5315
  7410     15DC                     l5311:
  7411                           
  7412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7413     15DC  3020               	movlw	32
  7414     15DD  0020               	movlb	0	; select bank0
  7415     15DE  00A0               	movwf	fputc@c
  7416     15DF  3000               	movlw	0
  7417     15E0  00A1               	movwf	fputc@c+1
  7418     15E1  0837               	movf	pad@fp,w
  7419     15E2  00A2               	movwf	fputc@fp
  7420     15E3  3188  2016  3195   	fcall	_fputc
  7421     15E6                     l5313:
  7422                           
  7423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7424     15E6  3001               	movlw	1
  7425     15E7  0020               	movlb	0	; select bank0
  7426     15E8  07B3               	addwf	pad@i,f
  7427     15E9  3000               	movlw	0
  7428     15EA  3DB4               	addwfc	pad@i+1,f
  7429     15EB                     l5315:
  7430                           
  7431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7432     15EB  0834               	movf	pad@i+1,w
  7433     15EC  3A80               	xorlw	128
  7434     15ED  00B2               	movwf	??_pad
  7435     15EE  0836               	movf	pad@w+1,w
  7436     15EF  3A80               	xorlw	128
  7437     15F0  0232               	subwf	??_pad,w
  7438     15F1  1D03               	skipz
  7439     15F2  2DF5               	goto	u4245
  7440     15F3  0835               	movf	pad@w,w
  7441     15F4  0233               	subwf	pad@i,w
  7442     15F5                     u4245:
  7443     15F5  1C03               	skipc
  7444     15F6  2DF8               	goto	u4241
  7445     15F7  2DF9               	goto	u4240
  7446     15F8                     u4241:
  7447     15F8  2DDC               	goto	l5311
  7448     15F9                     u4240:
  7449     15F9                     l5317:
  7450                           
  7451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7452     15F9  0020               	movlb	0	; select bank0
  7453     15FA  0837               	movf	pad@fp,w
  7454     15FB  00A8               	movwf	fputs@fp
  7455     15FC  082F               	movf	pad@buf,w
  7456     15FD  3194  24CF  3195   	fcall	_fputs
  7457     1600                     l1272:
  7458     1600  0008               	return
  7459     1601                     __end_of_pad:
  7460                           
  7461                           	psect	text19
  7462     14CF                     __ptext19:	
  7463 ;; *************** function _fputs *****************
  7464 ;; Defined at:
  7465 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  s               1    wreg     PTR const unsigned char 
  7468 ;;		 -> dbuf(32), 
  7469 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  7470 ;;		 -> sprintf@f(10), 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  s               1   11[BANK0 ] PTR const unsigned char 
  7473 ;;		 -> dbuf(32), 
  7474 ;;  i               2   13[BANK0 ] int 
  7475 ;;  c               1   12[BANK0 ] unsigned char 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  2    8[BANK0 ] int 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7485 ;;      Params:         0       1       0       0       0       0       0       0
  7486 ;;      Locals:         0       4       0       0       0       0       0       0
  7487 ;;      Temps:          0       2       0       0       0       0       0       0
  7488 ;;      Totals:         0       7       0       0       0       0       0       0
  7489 ;;Total ram usage:        7 bytes
  7490 ;; Hardware stack levels used: 1
  7491 ;; Hardware stack levels required when called: 4
  7492 ;; This function calls:
  7493 ;;		_fputc
  7494 ;; This function is called by:
  7495 ;;		_pad
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499     14CF                     _fputs:	
  7500                           ;psect for function _fputs
  7501                           
  7502                           
  7503                           ;incstack = 0
  7504                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7505                           ;fputs@s stored from wreg
  7506     14CF  0020               	movlb	0	; select bank0
  7507     14D0  00AB               	movwf	fputs@s
  7508     14D1                     l5259:
  7509     14D1  01AD               	clrf	fputs@i
  7510     14D2  01AE               	clrf	fputs@i+1
  7511     14D3  2CE5               	goto	l5265
  7512     14D4                     l5261:
  7513     14D4  082C               	movf	fputs@c,w
  7514     14D5  00A9               	movwf	??_fputs
  7515     14D6  01AA               	clrf	??_fputs+1
  7516     14D7  0829               	movf	??_fputs,w
  7517     14D8  00A0               	movwf	fputc@c
  7518     14D9  082A               	movf	??_fputs+1,w
  7519     14DA  00A1               	movwf	fputc@c+1
  7520     14DB  0828               	movf	fputs@fp,w
  7521     14DC  00A2               	movwf	fputc@fp
  7522     14DD  3188  2016  3194   	fcall	_fputc
  7523     14E0                     l5263:
  7524     14E0  3001               	movlw	1
  7525     14E1  0020               	movlb	0	; select bank0
  7526     14E2  07AD               	addwf	fputs@i,f
  7527     14E3  3000               	movlw	0
  7528     14E4  3DAE               	addwfc	fputs@i+1,f
  7529     14E5                     l5265:
  7530     14E5  082D               	movf	fputs@i,w
  7531     14E6  072B               	addwf	fputs@s,w
  7532     14E7  00A9               	movwf	??_fputs
  7533     14E8  0829               	movf	??_fputs,w
  7534     14E9  0086               	movwf	6
  7535     14EA  3001               	movlw	1	; select bank2/3
  7536     14EB  0087               	movwf	7
  7537     14EC  0801               	movf	1,w
  7538     14ED  00AC               	movwf	fputs@c
  7539     14EE  082C               	movf	fputs@c,w
  7540     14EF  1D03               	btfss	3,2
  7541     14F0  2CF2               	goto	u4131
  7542     14F1  2CF3               	goto	u4130
  7543     14F2                     u4131:
  7544     14F2  2CD4               	goto	l5261
  7545     14F3                     u4130:
  7546     14F3                     l1320:
  7547     14F3  0008               	return
  7548     14F4                     __end_of_fputs:
  7549                           
  7550                           	psect	text20
  7551     0816                     __ptext20:	
  7552 ;; *************** function _fputc *****************
  7553 ;; Defined at:
  7554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  c               2    0[BANK0 ] int 
  7557 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  7558 ;;		 -> sprintf@f(10), 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  2    0[BANK0 ] int 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7570 ;;      Params:         0       3       0       0       0       0       0       0
  7571 ;;      Locals:         0       0       0       0       0       0       0       0
  7572 ;;      Temps:          0       5       0       0       0       0       0       0
  7573 ;;      Totals:         0       8       0       0       0       0       0       0
  7574 ;;Total ram usage:        8 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 3
  7577 ;; This function calls:
  7578 ;;		_putch
  7579 ;; This function is called by:
  7580 ;;		_pad
  7581 ;;		_vfpfcnvrt
  7582 ;;		_fputs
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586     0816                     _fputc:	
  7587                           ;psect for function _fputc
  7588                           
  7589     0816                     l5243:	
  7590                           ;incstack = 0
  7591                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7592                           
  7593     0816  0020               	movlb	0	; select bank0
  7594     0817  0822               	movf	fputc@fp,w
  7595     0818  1903               	btfsc	3,2
  7596     0819  281B               	goto	u4091
  7597     081A  281C               	goto	u4090
  7598     081B                     u4091:
  7599     081B  2821               	goto	l5247
  7600     081C                     u4090:
  7601     081C                     l5245:
  7602     081C  0822               	movf	fputc@fp,w
  7603     081D  1D03               	btfss	3,2
  7604     081E  2820               	goto	u4101
  7605     081F  2821               	goto	u4100
  7606     0820                     u4101:
  7607     0820  2826               	goto	l5249
  7608     0821                     u4100:
  7609     0821                     l5247:
  7610     0821  0820               	movf	fputc@c,w
  7611     0822  3180  2003  3188   	fcall	_putch
  7612     0825  286C               	goto	l1312
  7613     0826                     l5249:
  7614     0826  0822               	movf	fputc@fp,w
  7615     0827  3E08               	addlw	8
  7616     0828  0086               	movwf	6
  7617     0829  0187               	clrf	7
  7618     082A  0016               	moviw fsr1++
  7619     082B  0401               	iorwf	1,w
  7620     082C  1903               	btfsc	3,2
  7621     082D  282F               	goto	u4111
  7622     082E  2830               	goto	u4110
  7623     082F                     u4111:
  7624     082F  284E               	goto	l5253
  7625     0830                     u4110:
  7626     0830                     l5251:
  7627     0830  0822               	movf	fputc@fp,w
  7628     0831  3E08               	addlw	8
  7629     0832  0086               	movwf	6
  7630     0833  0187               	clrf	7
  7631     0834  3F40               	moviw [0]fsr1
  7632     0835  00A3               	movwf	??_fputc
  7633     0836  3F41               	moviw [1]fsr1
  7634     0837  00A4               	movwf	??_fputc+1
  7635     0838  0822               	movf	fputc@fp,w
  7636     0839  3E02               	addlw	2
  7637     083A  0086               	movwf	6
  7638     083B  0187               	clrf	7
  7639     083C  3F40               	moviw [0]fsr1
  7640     083D  00A5               	movwf	??_fputc+2
  7641     083E  3F41               	moviw [1]fsr1
  7642     083F  00A6               	movwf	??_fputc+3
  7643     0840  0826               	movf	??_fputc+3,w
  7644     0841  3A80               	xorlw	128
  7645     0842  00A7               	movwf	??_fputc+4
  7646     0843  0824               	movf	??_fputc+1,w
  7647     0844  3A80               	xorlw	128
  7648     0845  0227               	subwf	??_fputc+4,w
  7649     0846  1D03               	skipz
  7650     0847  284A               	goto	u4125
  7651     0848  0823               	movf	??_fputc,w
  7652     0849  0225               	subwf	??_fputc+2,w
  7653     084A                     u4125:
  7654     084A  1803               	skipnc
  7655     084B  284D               	goto	u4121
  7656     084C  284E               	goto	u4120
  7657     084D                     u4121:
  7658     084D  286C               	goto	l1312
  7659     084E                     u4120:
  7660     084E                     l5253:
  7661     084E  0020               	movlb	0	; select bank0
  7662     084F  0822               	movf	fputc@fp,w
  7663     0850  3E02               	addlw	2
  7664     0851  0086               	movwf	6
  7665     0852  0187               	clrf	7
  7666     0853  0822               	movf	fputc@fp,w
  7667     0854  0084               	movwf	4
  7668     0855  0185               	clrf	5
  7669     0856  3F40               	moviw [0]fsr1
  7670     0857  0700               	addwf	0,w
  7671     0858  00A3               	movwf	??_fputc
  7672     0859  3101               	addfsr 0,1
  7673     085A  3F41               	moviw [1]fsr1
  7674     085B  3D00               	addwfc	0,w
  7675     085C  00A4               	movwf	??_fputc+1
  7676     085D  0823               	movf	??_fputc,w
  7677     085E  0086               	movwf	6
  7678     085F  0824               	movf	??_fputc+1,w
  7679     0860  0087               	movwf	7
  7680     0861  0820               	movf	fputc@c,w
  7681     0862  0081               	movwf	1
  7682     0863                     l5255:
  7683     0863  0822               	movf	fputc@fp,w
  7684     0864  3E02               	addlw	2
  7685     0865  0086               	movwf	6
  7686     0866  0187               	clrf	7
  7687     0867  3001               	movlw	1
  7688     0868  0781               	addwf	1,f
  7689     0869  3141               	addfsr 1,1
  7690     086A  1803               	skipnc
  7691     086B  0A81               	incf	1,f
  7692     086C                     l1312:
  7693     086C  0008               	return
  7694     086D                     __end_of_fputc:
  7695                           
  7696                           	psect	text21
  7697     0003                     __ptext21:	
  7698 ;; *************** function _putch *****************
  7699 ;; Defined at:
  7700 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  c               1    wreg     unsigned char 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  c               1    0[COMMON] unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7714 ;;      Params:         0       0       0       0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 2
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_fputc
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728     0003                     _putch:	
  7729                           ;psect for function _putch
  7730                           
  7731     0003                     l1323:	
  7732                           ;incstack = 0
  7733                           ; Regs used in _putch: [wreg]
  7734                           
  7735     0003  0008               	return
  7736     0004                     __end_of_putch:
  7737                           
  7738                           	psect	text22
  7739     0928                     __ptext22:	
  7740 ;; *************** function ___lomod *****************
  7741 ;; Defined at:
  7742 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7745 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  counter         1   17[BANK0 ] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  8    0[BANK0 ] unsigned long long 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7757 ;;      Params:         0      16       0       0       0       0       0       0
  7758 ;;      Locals:         0       1       0       0       0       0       0       0
  7759 ;;      Temps:          0       1       0       0       0       0       0       0
  7760 ;;      Totals:         0      18       0       0       0       0       0       0
  7761 ;;Total ram usage:       18 bytes
  7762 ;; Hardware stack levels used: 1
  7763 ;; Hardware stack levels required when called: 2
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_utoa
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771     0928                     ___lomod:	
  7772                           ;psect for function ___lomod
  7773                           
  7774     0928                     l5289:	
  7775                           ;incstack = 0
  7776                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7777                           
  7778     0928  0020               	movlb	0	; select bank0
  7779     0929  0820               	movf	___lomod@divisor,w
  7780     092A  0421               	iorwf	___lomod@divisor+1,w
  7781     092B  0422               	iorwf	___lomod@divisor+2,w
  7782     092C  0423               	iorwf	___lomod@divisor+3,w
  7783     092D  0424               	iorwf	___lomod@divisor+4,w
  7784     092E  0425               	iorwf	___lomod@divisor+5,w
  7785     092F  0426               	iorwf	___lomod@divisor+6,w
  7786     0930  0427               	iorwf	___lomod@divisor+7,w
  7787     0931  1903               	skipnz
  7788     0932  2934               	goto	u4191
  7789     0933  2935               	goto	u4190
  7790     0934                     u4191:
  7791     0934  2988               	goto	l1028
  7792     0935                     u4190:
  7793     0935                     l5291:
  7794     0935  01B1               	clrf	___lomod@counter
  7795     0936  0AB1               	incf	___lomod@counter,f
  7796     0937  2944               	goto	l5297
  7797     0938                     l5293:
  7798     0938  35A0               	lslf	___lomod@divisor,f
  7799     0939  0DA1               	rlf	___lomod@divisor+1,f
  7800     093A  0DA2               	rlf	___lomod@divisor+2,f
  7801     093B  0DA3               	rlf	___lomod@divisor+3,f
  7802     093C  0DA4               	rlf	___lomod@divisor+4,f
  7803     093D  0DA5               	rlf	___lomod@divisor+5,f
  7804     093E  0DA6               	rlf	___lomod@divisor+6,f
  7805     093F  0DA7               	rlf	___lomod@divisor+7,f
  7806     0940                     l5295:
  7807     0940  3001               	movlw	1
  7808     0941  00B0               	movwf	??___lomod
  7809     0942  0830               	movf	??___lomod,w
  7810     0943  07B1               	addwf	___lomod@counter,f
  7811     0944                     l5297:
  7812     0944  1FA7               	btfss	___lomod@divisor+7,7
  7813     0945  2947               	goto	u4201
  7814     0946  2948               	goto	u4200
  7815     0947                     u4201:
  7816     0947  2938               	goto	l5293
  7817     0948                     u4200:
  7818     0948                     l5299:
  7819     0948  0827               	movf	___lomod@divisor+7,w
  7820     0949  022F               	subwf	___lomod@dividend+7,w
  7821     094A  1D03               	skipz
  7822     094B  2966               	goto	u4215
  7823     094C  0826               	movf	___lomod@divisor+6,w
  7824     094D  022E               	subwf	___lomod@dividend+6,w
  7825     094E  1D03               	skipz
  7826     094F  2966               	goto	u4215
  7827     0950  0825               	movf	___lomod@divisor+5,w
  7828     0951  022D               	subwf	___lomod@dividend+5,w
  7829     0952  1D03               	skipz
  7830     0953  2966               	goto	u4215
  7831     0954  0824               	movf	___lomod@divisor+4,w
  7832     0955  022C               	subwf	___lomod@dividend+4,w
  7833     0956  1D03               	skipz
  7834     0957  2966               	goto	u4215
  7835     0958  0823               	movf	___lomod@divisor+3,w
  7836     0959  022B               	subwf	___lomod@dividend+3,w
  7837     095A  1D03               	skipz
  7838     095B  2966               	goto	u4215
  7839     095C  0822               	movf	___lomod@divisor+2,w
  7840     095D  022A               	subwf	___lomod@dividend+2,w
  7841     095E  1D03               	skipz
  7842     095F  2966               	goto	u4215
  7843     0960  0821               	movf	___lomod@divisor+1,w
  7844     0961  0229               	subwf	___lomod@dividend+1,w
  7845     0962  1D03               	skipz
  7846     0963  2966               	goto	u4215
  7847     0964  0820               	movf	___lomod@divisor,w
  7848     0965  0228               	subwf	___lomod@dividend,w
  7849     0966                     u4215:
  7850     0966  1C03               	skipc
  7851     0967  2969               	goto	u4211
  7852     0968  296A               	goto	u4210
  7853     0969                     u4211:
  7854     0969  297A               	goto	l5303
  7855     096A                     u4210:
  7856     096A                     l5301:
  7857     096A  0820               	movf	___lomod@divisor,w
  7858     096B  02A8               	subwf	___lomod@dividend,f
  7859     096C  0821               	movf	___lomod@divisor+1,w
  7860     096D  3BA9               	subwfb	___lomod@dividend+1,f
  7861     096E  0822               	movf	___lomod@divisor+2,w
  7862     096F  3BAA               	subwfb	___lomod@dividend+2,f
  7863     0970  0823               	movf	___lomod@divisor+3,w
  7864     0971  3BAB               	subwfb	___lomod@dividend+3,f
  7865     0972  0824               	movf	___lomod@divisor+4,w
  7866     0973  3BAC               	subwfb	___lomod@dividend+4,f
  7867     0974  0825               	movf	___lomod@divisor+5,w
  7868     0975  3BAD               	subwfb	___lomod@dividend+5,f
  7869     0976  0826               	movf	___lomod@divisor+6,w
  7870     0977  3BAE               	subwfb	___lomod@dividend+6,f
  7871     0978  0827               	movf	___lomod@divisor+7,w
  7872     0979  3BAF               	subwfb	___lomod@dividend+7,f
  7873     097A                     l5303:
  7874     097A  36A7               	lsrf	___lomod@divisor+7,f
  7875     097B  0CA6               	rrf	___lomod@divisor+6,f
  7876     097C  0CA5               	rrf	___lomod@divisor+5,f
  7877     097D  0CA4               	rrf	___lomod@divisor+4,f
  7878     097E  0CA3               	rrf	___lomod@divisor+3,f
  7879     097F  0CA2               	rrf	___lomod@divisor+2,f
  7880     0980  0CA1               	rrf	___lomod@divisor+1,f
  7881     0981  0CA0               	rrf	___lomod@divisor,f
  7882     0982  3001               	movlw	1
  7883     0983  02B1               	subwf	___lomod@counter,f
  7884     0984  1D03               	btfss	3,2
  7885     0985  2987               	goto	u4221
  7886     0986  2988               	goto	u4220
  7887     0987                     u4221:
  7888     0987  2948               	goto	l5299
  7889     0988                     u4220:
  7890     0988                     l1028:
  7891     0988  0828               	movf	___lomod@dividend,w
  7892     0989  00A0               	movwf	?___lomod
  7893     098A  0829               	movf	___lomod@dividend+1,w
  7894     098B  00A1               	movwf	?___lomod+1
  7895     098C  082A               	movf	___lomod@dividend+2,w
  7896     098D  00A2               	movwf	?___lomod+2
  7897     098E  082B               	movf	___lomod@dividend+3,w
  7898     098F  00A3               	movwf	?___lomod+3
  7899     0990  082C               	movf	___lomod@dividend+4,w
  7900     0991  00A4               	movwf	?___lomod+4
  7901     0992  082D               	movf	___lomod@dividend+5,w
  7902     0993  00A5               	movwf	?___lomod+5
  7903     0994  082E               	movf	___lomod@dividend+6,w
  7904     0995  00A6               	movwf	?___lomod+6
  7905     0996  082F               	movf	___lomod@dividend+7,w
  7906     0997  00A7               	movwf	?___lomod+7
  7907     0998                     l1035:
  7908     0998  0008               	return
  7909     0999                     __end_of___lomod:
  7910                           
  7911                           	psect	text23
  7912     076B                     __ptext23:	
  7913 ;; *************** function ___lodiv *****************
  7914 ;; Defined at:
  7915 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7918 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  quotient        8   17[BANK0 ] unsigned long long 
  7921 ;;  counter         1   25[BANK0 ] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  8    0[BANK0 ] unsigned long long 
  7924 ;; Registers used:
  7925 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7931 ;;      Params:         0      16       0       0       0       0       0       0
  7932 ;;      Locals:         0       9       0       0       0       0       0       0
  7933 ;;      Temps:          0       1       0       0       0       0       0       0
  7934 ;;      Totals:         0      26       0       0       0       0       0       0
  7935 ;;Total ram usage:       26 bytes
  7936 ;; Hardware stack levels used: 1
  7937 ;; Hardware stack levels required when called: 2
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_utoa
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945     076B                     ___lodiv:	
  7946                           ;psect for function ___lodiv
  7947                           
  7948     076B                     l5267:	
  7949                           ;incstack = 0
  7950                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7951                           
  7952     076B  3031               	movlw	low ___lodiv@quotient
  7953     076C  0086               	movwf	6
  7954     076D  3000               	movlw	high ___lodiv@quotient
  7955     076E  0087               	movwf	7
  7956     076F  3008               	movlw	8
  7957     0770  0020               	movlb	0	; select bank0
  7958     0771  00B0               	movwf	??___lodiv
  7959     0772  3000               	movlw	0
  7960     0773                     u4140:
  7961     0773  001E               	movwi fsr1++
  7962     0774  0BB0               	decfsz	??___lodiv,f
  7963     0775  2F73               	goto	u4140
  7964     0776                     l5269:
  7965     0776  0820               	movf	___lodiv@divisor,w
  7966     0777  0421               	iorwf	___lodiv@divisor+1,w
  7967     0778  0422               	iorwf	___lodiv@divisor+2,w
  7968     0779  0423               	iorwf	___lodiv@divisor+3,w
  7969     077A  0424               	iorwf	___lodiv@divisor+4,w
  7970     077B  0425               	iorwf	___lodiv@divisor+5,w
  7971     077C  0426               	iorwf	___lodiv@divisor+6,w
  7972     077D  0427               	iorwf	___lodiv@divisor+7,w
  7973     077E  1903               	skipnz
  7974     077F  2F81               	goto	u4151
  7975     0780  2F82               	goto	u4150
  7976     0781                     u4151:
  7977     0781  2FDE               	goto	l1018
  7978     0782                     u4150:
  7979     0782                     l5271:
  7980     0782  01B9               	clrf	___lodiv@counter
  7981     0783  0AB9               	incf	___lodiv@counter,f
  7982     0784  2F91               	goto	l5277
  7983     0785                     l5273:
  7984     0785  35A0               	lslf	___lodiv@divisor,f
  7985     0786  0DA1               	rlf	___lodiv@divisor+1,f
  7986     0787  0DA2               	rlf	___lodiv@divisor+2,f
  7987     0788  0DA3               	rlf	___lodiv@divisor+3,f
  7988     0789  0DA4               	rlf	___lodiv@divisor+4,f
  7989     078A  0DA5               	rlf	___lodiv@divisor+5,f
  7990     078B  0DA6               	rlf	___lodiv@divisor+6,f
  7991     078C  0DA7               	rlf	___lodiv@divisor+7,f
  7992     078D                     l5275:
  7993     078D  3001               	movlw	1
  7994     078E  00B0               	movwf	??___lodiv
  7995     078F  0830               	movf	??___lodiv,w
  7996     0790  07B9               	addwf	___lodiv@counter,f
  7997     0791                     l5277:
  7998     0791  1FA7               	btfss	___lodiv@divisor+7,7
  7999     0792  2F94               	goto	u4161
  8000     0793  2F95               	goto	u4160
  8001     0794                     u4161:
  8002     0794  2F85               	goto	l5273
  8003     0795                     u4160:
  8004     0795                     l5279:
  8005     0795  35B1               	lslf	___lodiv@quotient,f
  8006     0796  0DB2               	rlf	___lodiv@quotient+1,f
  8007     0797  0DB3               	rlf	___lodiv@quotient+2,f
  8008     0798  0DB4               	rlf	___lodiv@quotient+3,f
  8009     0799  0DB5               	rlf	___lodiv@quotient+4,f
  8010     079A  0DB6               	rlf	___lodiv@quotient+5,f
  8011     079B  0DB7               	rlf	___lodiv@quotient+6,f
  8012     079C  0DB8               	rlf	___lodiv@quotient+7,f
  8013     079D                     l5281:
  8014     079D  0827               	movf	___lodiv@divisor+7,w
  8015     079E  022F               	subwf	___lodiv@dividend+7,w
  8016     079F  1D03               	skipz
  8017     07A0  2FBB               	goto	u4175
  8018     07A1  0826               	movf	___lodiv@divisor+6,w
  8019     07A2  022E               	subwf	___lodiv@dividend+6,w
  8020     07A3  1D03               	skipz
  8021     07A4  2FBB               	goto	u4175
  8022     07A5  0825               	movf	___lodiv@divisor+5,w
  8023     07A6  022D               	subwf	___lodiv@dividend+5,w
  8024     07A7  1D03               	skipz
  8025     07A8  2FBB               	goto	u4175
  8026     07A9  0824               	movf	___lodiv@divisor+4,w
  8027     07AA  022C               	subwf	___lodiv@dividend+4,w
  8028     07AB  1D03               	skipz
  8029     07AC  2FBB               	goto	u4175
  8030     07AD  0823               	movf	___lodiv@divisor+3,w
  8031     07AE  022B               	subwf	___lodiv@dividend+3,w
  8032     07AF  1D03               	skipz
  8033     07B0  2FBB               	goto	u4175
  8034     07B1  0822               	movf	___lodiv@divisor+2,w
  8035     07B2  022A               	subwf	___lodiv@dividend+2,w
  8036     07B3  1D03               	skipz
  8037     07B4  2FBB               	goto	u4175
  8038     07B5  0821               	movf	___lodiv@divisor+1,w
  8039     07B6  0229               	subwf	___lodiv@dividend+1,w
  8040     07B7  1D03               	skipz
  8041     07B8  2FBB               	goto	u4175
  8042     07B9  0820               	movf	___lodiv@divisor,w
  8043     07BA  0228               	subwf	___lodiv@dividend,w
  8044     07BB                     u4175:
  8045     07BB  1C03               	skipc
  8046     07BC  2FBE               	goto	u4171
  8047     07BD  2FBF               	goto	u4170
  8048     07BE                     u4171:
  8049     07BE  2FD0               	goto	l5287
  8050     07BF                     u4170:
  8051     07BF                     l5283:
  8052     07BF  0820               	movf	___lodiv@divisor,w
  8053     07C0  02A8               	subwf	___lodiv@dividend,f
  8054     07C1  0821               	movf	___lodiv@divisor+1,w
  8055     07C2  3BA9               	subwfb	___lodiv@dividend+1,f
  8056     07C3  0822               	movf	___lodiv@divisor+2,w
  8057     07C4  3BAA               	subwfb	___lodiv@dividend+2,f
  8058     07C5  0823               	movf	___lodiv@divisor+3,w
  8059     07C6  3BAB               	subwfb	___lodiv@dividend+3,f
  8060     07C7  0824               	movf	___lodiv@divisor+4,w
  8061     07C8  3BAC               	subwfb	___lodiv@dividend+4,f
  8062     07C9  0825               	movf	___lodiv@divisor+5,w
  8063     07CA  3BAD               	subwfb	___lodiv@dividend+5,f
  8064     07CB  0826               	movf	___lodiv@divisor+6,w
  8065     07CC  3BAE               	subwfb	___lodiv@dividend+6,f
  8066     07CD  0827               	movf	___lodiv@divisor+7,w
  8067     07CE  3BAF               	subwfb	___lodiv@dividend+7,f
  8068     07CF                     l5285:
  8069     07CF  1431               	bsf	___lodiv@quotient,0
  8070     07D0                     l5287:
  8071     07D0  36A7               	lsrf	___lodiv@divisor+7,f
  8072     07D1  0CA6               	rrf	___lodiv@divisor+6,f
  8073     07D2  0CA5               	rrf	___lodiv@divisor+5,f
  8074     07D3  0CA4               	rrf	___lodiv@divisor+4,f
  8075     07D4  0CA3               	rrf	___lodiv@divisor+3,f
  8076     07D5  0CA2               	rrf	___lodiv@divisor+2,f
  8077     07D6  0CA1               	rrf	___lodiv@divisor+1,f
  8078     07D7  0CA0               	rrf	___lodiv@divisor,f
  8079     07D8  3001               	movlw	1
  8080     07D9  02B9               	subwf	___lodiv@counter,f
  8081     07DA  1D03               	btfss	3,2
  8082     07DB  2FDD               	goto	u4181
  8083     07DC  2FDE               	goto	u4180
  8084     07DD                     u4181:
  8085     07DD  2F95               	goto	l5279
  8086     07DE                     u4180:
  8087     07DE                     l1018:
  8088     07DE  0831               	movf	___lodiv@quotient,w
  8089     07DF  00A0               	movwf	?___lodiv
  8090     07E0  0832               	movf	___lodiv@quotient+1,w
  8091     07E1  00A1               	movwf	?___lodiv+1
  8092     07E2  0833               	movf	___lodiv@quotient+2,w
  8093     07E3  00A2               	movwf	?___lodiv+2
  8094     07E4  0834               	movf	___lodiv@quotient+3,w
  8095     07E5  00A3               	movwf	?___lodiv+3
  8096     07E6  0835               	movf	___lodiv@quotient+4,w
  8097     07E7  00A4               	movwf	?___lodiv+4
  8098     07E8  0836               	movf	___lodiv@quotient+5,w
  8099     07E9  00A5               	movwf	?___lodiv+5
  8100     07EA  0837               	movf	___lodiv@quotient+6,w
  8101     07EB  00A6               	movwf	?___lodiv+6
  8102     07EC  0838               	movf	___lodiv@quotient+7,w
  8103     07ED  00A7               	movwf	?___lodiv+7
  8104     07EE                     l1025:
  8105     07EE  0008               	return
  8106     07EF                     __end_of___lodiv:
  8107                           
  8108                           	psect	text24
  8109     1757                     __ptext24:	
  8110 ;; *************** function _DHT22READ *****************
  8111 ;; Defined at:
  8112 ;;		line 90 in file "Sensores.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  port            1    wreg     unsigned char 
  8115 ;;  tris            1    6[BANK0 ] unsigned char 
  8116 ;;  entry           1    7[BANK0 ] unsigned char 
  8117 ;;  TOUT            1    8[BANK0 ] unsigned char 
  8118 ;;  dhtresult       1    9[BANK0 ] PTR unsigned char 
  8119 ;;		 -> dhtresult(4), 
  8120 ;;  COM             1   10[BANK0 ] PTR unsigned char 
  8121 ;;		 -> COM(4), 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  port            1   11[BANK0 ] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8133 ;;      Params:         0       5       0       0       0       0       0       0
  8134 ;;      Locals:         0       1       0       0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0
  8136 ;;      Totals:         0       6       0       0       0       0       0       0
  8137 ;;Total ram usage:        6 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; Hardware stack levels required when called: 3
  8140 ;; This function calls:
  8141 ;;		_check_response
  8142 ;;		_read_byte
  8143 ;;		_start_signal
  8144 ;; This function is called by:
  8145 ;;		_DHTRESULT
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149     1757                     _DHT22READ:	
  8150                           ;psect for function _DHT22READ
  8151                           
  8152                           
  8153                           ;incstack = 0
  8154                           ; Regs used in _DHT22READ: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8155                           ;DHT22READ@port stored from wreg
  8156     1757  0020               	movlb	0	; select bank0
  8157     1758  00AB               	movwf	DHT22READ@port
  8158     1759                     l3635:
  8159                           
  8160                           ;Sensores.c: 90: void DHT22READ (unsigned char port, unsigned char tris, unsigned char e
      +                          ntry, unsigned char TOUT, unsigned char dhtresult[], unsigned char COM[]);Sensores.c: 91
      +                          : {;Sensores.c: 92:     static unsigned char check = 0;;Sensores.c: 93:     start_signal
      +                          (port, tris);
  8161     1759  0826               	movf	DHT22READ@tris,w
  8162     175A  00A0               	movwf	start_signal@tris
  8163     175B  082B               	movf	DHT22READ@port,w
  8164     175C  3196  267C  3197   	fcall	_start_signal
  8165                           
  8166                           ;Sensores.c: 94:     check = check_response(port, tris, TOUT);
  8167     175F  0020               	movlb	0	; select bank0
  8168     1760  0826               	movf	DHT22READ@tris,w
  8169     1761  00A0               	movwf	check_response@tris
  8170     1762  0828               	movf	DHT22READ@TOUT,w
  8171     1763  00A1               	movwf	check_response@TOUT
  8172     1764  082B               	movf	DHT22READ@port,w
  8173     1765  3197  27AB  3197   	fcall	_check_response
  8174     1768  0021               	movlb	1	; select bank1
  8175     1769  00A8               	movwf	DHT22READ@check^(0+128)
  8176     176A                     l3637:
  8177                           
  8178                           ;Sensores.c: 95:     if (!check)
  8179     176A  0828               	movf	DHT22READ@check^(0+128),w
  8180     176B  1D03               	btfss	3,2
  8181     176C  2F6E               	goto	u2541
  8182     176D  2F6F               	goto	u2540
  8183     176E                     u2541:
  8184     176E  2F71               	goto	l3641
  8185     176F                     u2540:
  8186     176F                     l3639:
  8187                           
  8188                           ;Sensores.c: 96:        {;Sensores.c: 97:           PIE1bits.TXIE = 1;
  8189     176F  1611               	bsf	17,4	;volatile
  8190                           
  8191                           ;Sensores.c: 98:        }
  8192     1770  2FAA               	goto	l604
  8193     1771                     l3641:
  8194                           
  8195                           ;Sensores.c: 100:        {;Sensores.c: 101:          dhtresult[0] = read_byte(port, tris
      +                          );
  8196     1771  0020               	movlb	0	; select bank0
  8197     1772  0829               	movf	DHT22READ@dhtresult,w
  8198     1773  0086               	movwf	6
  8199     1774  3001               	movlw	1	; select bank2/3
  8200     1775  0087               	movwf	7
  8201     1776  0826               	movf	DHT22READ@tris,w
  8202     1777  00A0               	movwf	read_byte@tris
  8203     1778  082B               	movf	DHT22READ@port,w
  8204     1779  3197  2703  3197   	fcall	_read_byte
  8205     177C  0081               	movwf	1
  8206                           
  8207                           ;Sensores.c: 102:          dhtresult[1] = read_byte(port, tris);
  8208     177D  0020               	movlb	0	; select bank0
  8209     177E  0A29               	incf	DHT22READ@dhtresult,w
  8210     177F  0086               	movwf	6
  8211     1780  3001               	movlw	1	; select bank2/3
  8212     1781  0087               	movwf	7
  8213     1782  0826               	movf	DHT22READ@tris,w
  8214     1783  00A0               	movwf	read_byte@tris
  8215     1784  082B               	movf	DHT22READ@port,w
  8216     1785  3197  2703  3197   	fcall	_read_byte
  8217     1788  0081               	movwf	1
  8218                           
  8219                           ;Sensores.c: 103:          dhtresult[2]= read_byte(port, tris);
  8220     1789  0020               	movlb	0	; select bank0
  8221     178A  0829               	movf	DHT22READ@dhtresult,w
  8222     178B  3E02               	addlw	2
  8223     178C  0086               	movwf	6
  8224     178D  3001               	movlw	1	; select bank2/3
  8225     178E  0087               	movwf	7
  8226     178F  0826               	movf	DHT22READ@tris,w
  8227     1790  00A0               	movwf	read_byte@tris
  8228     1791  082B               	movf	DHT22READ@port,w
  8229     1792  3197  2703  3197   	fcall	_read_byte
  8230     1795  0081               	movwf	1
  8231                           
  8232                           ;Sensores.c: 104:          dhtresult[3] = read_byte(port, tris);
  8233     1796  0020               	movlb	0	; select bank0
  8234     1797  0829               	movf	DHT22READ@dhtresult,w
  8235     1798  3E03               	addlw	3
  8236     1799  0086               	movwf	6
  8237     179A  3001               	movlw	1	; select bank2/3
  8238     179B  0087               	movwf	7
  8239     179C  0826               	movf	DHT22READ@tris,w
  8240     179D  00A0               	movwf	read_byte@tris
  8241     179E  082B               	movf	DHT22READ@port,w
  8242     179F  3197  2703  3197   	fcall	_read_byte
  8243     17A2  0081               	movwf	1
  8244     17A3                     l3643:
  8245                           
  8246                           ;Sensores.c: 105:          COM[1]=entry + 48;
  8247     17A3  0020               	movlb	0	; select bank0
  8248     17A4  0A2A               	incf	DHT22READ@COM,w
  8249     17A5  0086               	movwf	6
  8250     17A6  0187               	clrf	7
  8251     17A7  0827               	movf	DHT22READ@entry,w
  8252     17A8  3E30               	addlw	48
  8253     17A9  0081               	movwf	1
  8254     17AA                     l604:
  8255     17AA  0008               	return
  8256     17AB                     __end_of_DHT22READ:
  8257                           
  8258                           	psect	text25
  8259     167C                     __ptext25:	
  8260 ;; *************** function _start_signal *****************
  8261 ;; Defined at:
  8262 ;;		line 13 in file "Sensores.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  port            1    wreg     unsigned char 
  8265 ;;  tris            1    0[BANK0 ] unsigned char 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  port            1    2[BANK0 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8277 ;;      Params:         0       1       0       0       0       0       0       0
  8278 ;;      Locals:         0       1       0       0       0       0       0       0
  8279 ;;      Temps:          0       1       0       0       0       0       0       0
  8280 ;;      Totals:         0       3       0       0       0       0       0       0
  8281 ;;Total ram usage:        3 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 2
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_DHT22READ
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291     167C                     _start_signal:	
  8292                           ;psect for function _start_signal
  8293                           
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in _start_signal: [wreg+status,2+status,0]
  8297                           ;start_signal@port stored from wreg
  8298     167C  0020               	movlb	0	; select bank0
  8299     167D  00A2               	movwf	start_signal@port
  8300     167E                     l3457:
  8301                           
  8302                           ;Sensores.c: 13: void start_signal(unsigned char port, unsigned char tris);Sensores.c: 1
      +                          4: {;Sensores.c: 15:    if(tris==0){
  8303     167E  0820               	movf	start_signal@tris,w
  8304     167F  1D03               	btfss	3,2
  8305     1680  2E82               	goto	u2291
  8306     1681  2E83               	goto	u2290
  8307     1682                     u2291:
  8308     1682  2EA0               	goto	l3465
  8309     1683                     u2290:
  8310     1683                     l3459:
  8311                           
  8312                           ;Sensores.c: 16:    TRISA &= (~port);
  8313     1683  0922               	comf	start_signal@port,w	;volatile
  8314     1684  00A1               	movwf	??_start_signal
  8315     1685  0821               	movf	??_start_signal,w
  8316     1686  0021               	movlb	1	; select bank1
  8317     1687  058C               	andwf	12,f	;volatile
  8318                           
  8319                           ;Sensores.c: 17:    PORTA &= (~port);
  8320     1688  0020               	movlb	0	; select bank0
  8321     1689  0922               	comf	start_signal@port,w	;volatile
  8322     168A  00A1               	movwf	??_start_signal
  8323     168B  0821               	movf	??_start_signal,w
  8324     168C  058C               	andwf	12,f	;volatile
  8325     168D                     l3461:
  8326                           
  8327                           ;Sensores.c: 18:    _delay((unsigned long)((18)*(32000000/4000.0)));
  8328     168D  30BC               	movlw	188
  8329     168E  0020               	movlb	0	; select bank0
  8330     168F  00A1               	movwf	??_start_signal
  8331     1690  3001               	movlw	1
  8332     1691                     u5967:
  8333     1691  0B89               	decfsz	9,f
  8334     1692  2E91               	goto	u5967
  8335     1693  0BA1               	decfsz	??_start_signal,f
  8336     1694  2E91               	goto	u5967
  8337     1695  3200               	nop2
  8338     1696                     l3463:
  8339                           
  8340                           ;Sensores.c: 19:    TRISA |= port;
  8341     1696  0020               	movlb	0	; select bank0
  8342     1697  0822               	movf	start_signal@port,w	;volatile
  8343     1698  00A1               	movwf	??_start_signal
  8344     1699  0821               	movf	??_start_signal,w
  8345     169A  0021               	movlb	1	; select bank1
  8346     169B  048C               	iorwf	12,f	;volatile
  8347                           
  8348                           ;Sensores.c: 20:    _delay((unsigned long)((30)*(32000000/4000000.0)));
  8349     169C  3050               	movlw	80
  8350     169D                     u5977:
  8351     169D  0B89               	decfsz	9,f
  8352     169E  2E9D               	goto	u5977
  8353                           
  8354                           ;Sensores.c: 21: }else{
  8355     169F  2EBC               	goto	l543
  8356     16A0                     l3465:
  8357                           
  8358                           ;Sensores.c: 22:    TRISC &= (~port);
  8359     16A0  0922               	comf	start_signal@port,w	;volatile
  8360     16A1  00A1               	movwf	??_start_signal
  8361     16A2  0821               	movf	??_start_signal,w
  8362     16A3  0021               	movlb	1	; select bank1
  8363     16A4  058E               	andwf	14,f	;volatile
  8364                           
  8365                           ;Sensores.c: 23:    PORTC &= (~port);
  8366     16A5  0020               	movlb	0	; select bank0
  8367     16A6  0922               	comf	start_signal@port,w	;volatile
  8368     16A7  00A1               	movwf	??_start_signal
  8369     16A8  0821               	movf	??_start_signal,w
  8370     16A9  058E               	andwf	14,f	;volatile
  8371     16AA                     l3467:
  8372                           
  8373                           ;Sensores.c: 24:    _delay((unsigned long)((18)*(32000000/4000.0)));
  8374     16AA  30BC               	movlw	188
  8375     16AB  0020               	movlb	0	; select bank0
  8376     16AC  00A1               	movwf	??_start_signal
  8377     16AD  3001               	movlw	1
  8378     16AE                     u5987:
  8379     16AE  0B89               	decfsz	9,f
  8380     16AF  2EAE               	goto	u5987
  8381     16B0  0BA1               	decfsz	??_start_signal,f
  8382     16B1  2EAE               	goto	u5987
  8383     16B2  3200               	nop2
  8384     16B3                     l3469:
  8385                           
  8386                           ;Sensores.c: 25:    TRISC |= port;
  8387     16B3  0020               	movlb	0	; select bank0
  8388     16B4  0822               	movf	start_signal@port,w	;volatile
  8389     16B5  00A1               	movwf	??_start_signal
  8390     16B6  0821               	movf	??_start_signal,w
  8391     16B7  0021               	movlb	1	; select bank1
  8392     16B8  048E               	iorwf	14,f	;volatile
  8393                           
  8394                           ;Sensores.c: 26:    _delay((unsigned long)((30)*(32000000/4000000.0)));
  8395     16B9  3050               	movlw	80
  8396     16BA                     u5997:
  8397     16BA  0B89               	decfsz	9,f
  8398     16BB  2EBA               	goto	u5997
  8399     16BC                     l543:
  8400     16BC  0008               	return
  8401     16BD                     __end_of_start_signal:
  8402                           
  8403                           	psect	text26
  8404     1703                     __ptext26:	
  8405 ;; *************** function _read_byte *****************
  8406 ;; Defined at:
  8407 ;;		line 64 in file "Sensores.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  port            1    wreg     unsigned char 
  8410 ;;  tris            1    0[BANK0 ] unsigned char 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  port            1    4[BANK0 ] unsigned char 
  8413 ;;  i               1    5[BANK0 ] unsigned char 
  8414 ;;  num             1    3[BANK0 ] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      unsigned char 
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8424 ;;      Params:         0       1       0       0       0       0       0       0
  8425 ;;      Locals:         0       3       0       0       0       0       0       0
  8426 ;;      Temps:          0       2       0       0       0       0       0       0
  8427 ;;      Totals:         0       6       0       0       0       0       0       0
  8428 ;;Total ram usage:        6 bytes
  8429 ;; Hardware stack levels used: 1
  8430 ;; Hardware stack levels required when called: 2
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_DHT22READ
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438     1703                     _read_byte:	
  8439                           ;psect for function _read_byte
  8440                           
  8441                           
  8442                           ;incstack = 0
  8443                           ; Regs used in _read_byte: [wreg+status,2+status,0]
  8444                           ;read_byte@port stored from wreg
  8445     1703  0020               	movlb	0	; select bank0
  8446     1704  00A4               	movwf	read_byte@port
  8447     1705                     l3539:
  8448                           
  8449                           ;Sensores.c: 64: unsigned char read_byte(unsigned char port, unsigned char tris);Sensore
      +                          s.c: 65:  { unsigned char num = 0, i=0;
  8450     1705  01A3               	clrf	read_byte@num
  8451     1706                     l3541:
  8452                           
  8453                           ;Sensores.c: 66:    TRISA |= port;
  8454     1706  0824               	movf	read_byte@port,w	;volatile
  8455     1707  00A1               	movwf	??_read_byte
  8456     1708  0821               	movf	??_read_byte,w
  8457     1709  0021               	movlb	1	; select bank1
  8458     170A  048C               	iorwf	12,f	;volatile
  8459     170B                     l3543:
  8460                           
  8461                           ;Sensores.c: 67:    for (i=0; i<8; i++)
  8462     170B  0020               	movlb	0	; select bank0
  8463     170C  01A5               	clrf	read_byte@i
  8464     170D                     l3549:
  8465                           
  8466                           ;Sensores.c: 68:    {;Sensores.c: 69:       if(tris==0){
  8467     170D  0820               	movf	read_byte@tris,w
  8468     170E  1D03               	btfss	3,2
  8469     170F  2F11               	goto	u2431
  8470     1710  2F12               	goto	u2430
  8471     1711                     u2431:
  8472     1711  2F35               	goto	l3565
  8473     1712                     u2430:
  8474     1712                     l3553:
  8475     1712  080C               	movf	12,w	;volatile
  8476     1713  0524               	andwf	read_byte@port,w
  8477     1714  1903               	btfsc	3,2
  8478     1715  2F17               	goto	u2441
  8479     1716  2F18               	goto	u2440
  8480     1717                     u2441:
  8481     1717  2F12               	goto	l3553
  8482     1718                     u2440:
  8483     1718                     l3555:
  8484                           
  8485                           ;Sensores.c: 71:       TMR2 = 0;
  8486     1718  019A               	clrf	26	;volatile
  8487     1719                     l3557:
  8488                           
  8489                           ;Sensores.c: 72:       TMR2ON = 1;
  8490     1719  151C               	bsf	28,2	;volatile
  8491     171A                     l3559:	
  8492                           ;Sensores.c: 73:       while (((PORTA & port)>0));
  8493                           
  8494     171A  080C               	movf	12,w	;volatile
  8495     171B  0524               	andwf	read_byte@port,w
  8496     171C  1D03               	btfss	3,2
  8497     171D  2F1F               	goto	u2451
  8498     171E  2F20               	goto	u2450
  8499     171F                     u2451:
  8500     171F  2F1A               	goto	l3559
  8501     1720                     u2450:
  8502     1720                     l587:
  8503                           
  8504                           ;Sensores.c: 74:       TMR2ON = 0;
  8505     1720  111C               	bcf	28,2	;volatile
  8506     1721                     l3561:
  8507                           
  8508                           ;Sensores.c: 75:       if (TMR2 > 80)
  8509     1721  3051               	movlw	81
  8510     1722  021A               	subwf	26,w	;volatile
  8511     1723  1C03               	skipc
  8512     1724  2F26               	goto	u2461
  8513     1725  2F27               	goto	u2460
  8514     1726                     u2461:
  8515     1726  2F4B               	goto	l589
  8516     1727                     u2460:
  8517     1727                     l3563:
  8518                           
  8519                           ;Sensores.c: 76:          num |= 1<<(7-i);
  8520     1727  3001               	movlw	1
  8521     1728  00A1               	movwf	??_read_byte
  8522     1729  0825               	movf	read_byte@i,w
  8523     172A  3C07               	sublw	7
  8524     172B  0A89               	incf	9,f
  8525     172C  2F2E               	goto	u2474
  8526     172D                     u2475:
  8527     172D  35A1               	lslf	??_read_byte,f
  8528     172E                     u2474:
  8529     172E  0B89               	decfsz	9,f
  8530     172F  2F2D               	goto	u2475
  8531     1730  0821               	movf	??_read_byte,w
  8532     1731  00A2               	movwf	??_read_byte+1
  8533     1732  0822               	movf	??_read_byte+1,w
  8534     1733  04A3               	iorwf	read_byte@num,f
  8535     1734  2F4B               	goto	l589
  8536     1735                     l3565:
  8537     1735  080E               	movf	14,w	;volatile
  8538     1736  0524               	andwf	read_byte@port,w
  8539     1737  1903               	btfsc	3,2
  8540     1738  2F3A               	goto	u2481
  8541     1739  2F3B               	goto	u2480
  8542     173A                     u2481:
  8543     173A  2F35               	goto	l3565
  8544     173B                     u2480:
  8545     173B                     l3567:
  8546                           
  8547                           ;Sensores.c: 79:       TMR2 = 0;
  8548     173B  019A               	clrf	26	;volatile
  8549     173C                     l3569:
  8550                           
  8551                           ;Sensores.c: 80:       TMR2ON = 1;
  8552     173C  151C               	bsf	28,2	;volatile
  8553     173D                     l3571:	
  8554                           ;Sensores.c: 81:       while (((PORTC & port)>0));
  8555                           
  8556     173D  080E               	movf	14,w	;volatile
  8557     173E  0524               	andwf	read_byte@port,w
  8558     173F  1D03               	btfss	3,2
  8559     1740  2F42               	goto	u2491
  8560     1741  2F43               	goto	u2490
  8561     1742                     u2491:
  8562     1742  2F3D               	goto	l3571
  8563     1743                     u2490:
  8564     1743                     l595:
  8565                           
  8566                           ;Sensores.c: 82:       TMR2ON = 0;
  8567     1743  111C               	bcf	28,2	;volatile
  8568     1744                     l3573:
  8569                           
  8570                           ;Sensores.c: 83:       if (TMR2 > 80)
  8571     1744  3051               	movlw	81
  8572     1745  021A               	subwf	26,w	;volatile
  8573     1746  1C03               	skipc
  8574     1747  2F49               	goto	u2501
  8575     1748  2F4A               	goto	u2500
  8576     1749                     u2501:
  8577     1749  2F4B               	goto	l589
  8578     174A                     u2500:
  8579     174A  2F27               	goto	l3563
  8580     174B                     l589:	
  8581                           ;Sensores.c: 85:    }
  8582                           
  8583                           
  8584                           ;Sensores.c: 86:     }
  8585     174B  3001               	movlw	1
  8586     174C  00A1               	movwf	??_read_byte
  8587     174D  0821               	movf	??_read_byte,w
  8588     174E  07A5               	addwf	read_byte@i,f
  8589     174F                     l3577:
  8590     174F  3008               	movlw	8
  8591     1750  0225               	subwf	read_byte@i,w
  8592     1751  1C03               	skipc
  8593     1752  2F54               	goto	u2511
  8594     1753  2F55               	goto	u2510
  8595     1754                     u2511:
  8596     1754  2F0D               	goto	l3549
  8597     1755                     u2510:
  8598     1755                     l3579:
  8599     1755                     l3581:
  8600                           
  8601                           ;Sensores.c: 88:    return num;
  8602     1755  0823               	movf	read_byte@num,w
  8603     1756                     l597:
  8604     1756  0008               	return
  8605     1757                     __end_of_read_byte:
  8606                           
  8607                           	psect	text27
  8608     17AB                     __ptext27:	
  8609 ;; *************** function _check_response *****************
  8610 ;; Defined at:
  8611 ;;		line 29 in file "Sensores.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  port            1    wreg     unsigned char 
  8614 ;;  tris            1    0[BANK0 ] unsigned char 
  8615 ;;  TOUT            1    1[BANK0 ] unsigned char 
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;  port            1    2[BANK0 ] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      unsigned char 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8627 ;;      Params:         0       2       0       0       0       0       0       0
  8628 ;;      Locals:         0       1       0       0       0       0       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0
  8630 ;;      Totals:         0       3       0       0       0       0       0       0
  8631 ;;Total ram usage:        3 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 2
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_DHT22READ
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641     17AB                     _check_response:	
  8642                           ;psect for function _check_response
  8643                           
  8644                           
  8645                           ;incstack = 0
  8646                           ; Regs used in _check_response: [wreg+status,2+status,0]
  8647                           ;check_response@port stored from wreg
  8648     17AB  0020               	movlb	0	; select bank0
  8649     17AC  00A2               	movwf	check_response@port
  8650     17AD                     l3471:
  8651                           
  8652                           ;Sensores.c: 29: unsigned char check_response(unsigned char port, unsigned char tris, un
      +                          signed char TOUT);Sensores.c: 30:  {;Sensores.c: 31:    TOUT = 0;
  8653     17AD  01A1               	clrf	check_response@TOUT
  8654                           
  8655                           ;Sensores.c: 32:    TMR2 = 0;
  8656     17AE  019A               	clrf	26	;volatile
  8657     17AF                     l3473:
  8658                           
  8659                           ;Sensores.c: 33:    TMR2ON = 1;
  8660     17AF  151C               	bsf	28,2	;volatile
  8661     17B0                     l3475:
  8662                           
  8663                           ;Sensores.c: 34:    if(tris==0){
  8664     17B0  0820               	movf	check_response@tris,w
  8665     17B1  1D03               	btfss	3,2
  8666     17B2  2FB4               	goto	u2301
  8667     17B3  2FB5               	goto	u2300
  8668     17B4                     u2301:
  8669     17B4  2FDC               	goto	l3509
  8670     17B5                     u2300:
  8671     17B5                     l3479:
  8672     17B5  080C               	movf	12,w	;volatile
  8673     17B6  0522               	andwf	check_response@port,w
  8674     17B7  1D03               	btfss	3,2
  8675     17B8  2FBA               	goto	u2311
  8676     17B9  2FBB               	goto	u2310
  8677     17BA                     u2311:
  8678     17BA  2FC0               	goto	l3483
  8679     17BB                     u2310:
  8680     17BB                     l3481:
  8681     17BB  0821               	movf	check_response@TOUT,w
  8682     17BC  1903               	btfsc	3,2
  8683     17BD  2FBF               	goto	u2321
  8684     17BE  2FC0               	goto	u2320
  8685     17BF                     u2321:
  8686     17BF  2FB5               	goto	l3479
  8687     17C0                     u2320:
  8688     17C0                     l3483:
  8689                           
  8690                           ;Sensores.c: 36:    if (TOUT)
  8691     17C0  0821               	movf	check_response@TOUT,w
  8692     17C1  1903               	btfsc	3,2
  8693     17C2  2FC4               	goto	u2331
  8694     17C3  2FC5               	goto	u2330
  8695     17C4                     u2331:
  8696     17C4  2FC7               	goto	l3491
  8697     17C5                     u2330:
  8698     17C5                     l3485:
  8699                           
  8700                           ;Sensores.c: 37:       return 0;
  8701     17C5  3000               	movlw	0
  8702     17C6  2FFF               	goto	l553
  8703     17C7                     l3491:
  8704                           
  8705                           ;Sensores.c: 39:     { TMR2 = 0;
  8706     17C7  019A               	clrf	26	;volatile
  8707     17C8                     l3493:	
  8708                           ;Sensores.c: 40:       while (((PORTA & port)>0) && !TOUT);
  8709                           
  8710     17C8  080C               	movf	12,w	;volatile
  8711     17C9  0522               	andwf	check_response@port,w
  8712     17CA  1903               	btfsc	3,2
  8713     17CB  2FCD               	goto	u2341
  8714     17CC  2FCE               	goto	u2340
  8715     17CD                     u2341:
  8716     17CD  2FD3               	goto	l3497
  8717     17CE                     u2340:
  8718     17CE                     l3495:
  8719     17CE  0821               	movf	check_response@TOUT,w
  8720     17CF  1903               	btfsc	3,2
  8721     17D0  2FD2               	goto	u2351
  8722     17D1  2FD3               	goto	u2350
  8723     17D2                     u2351:
  8724     17D2  2FC8               	goto	l3493
  8725     17D3                     u2350:
  8726     17D3                     l3497:
  8727                           
  8728                           ;Sensores.c: 41:       if (TOUT)
  8729     17D3  0821               	movf	check_response@TOUT,w
  8730     17D4  1903               	btfsc	3,2
  8731     17D5  2FD7               	goto	u2361
  8732     17D6  2FD8               	goto	u2360
  8733     17D7                     u2361:
  8734     17D7  2FD9               	goto	l560
  8735     17D8                     u2360:
  8736     17D8  2FC5               	goto	l3485
  8737     17D9                     l560:	
  8738                           ;Sensores.c: 43:       else
  8739                           
  8740                           
  8741                           ;Sensores.c: 44:       { TMR2ON = 0;
  8742     17D9  111C               	bcf	28,2	;volatile
  8743     17DA                     l3505:
  8744                           
  8745                           ;Sensores.c: 45:          return 1;
  8746     17DA  3001               	movlw	1
  8747     17DB  2FFF               	goto	l553
  8748     17DC                     l3509:
  8749     17DC  080E               	movf	14,w	;volatile
  8750     17DD  0522               	andwf	check_response@port,w
  8751     17DE  1D03               	btfss	3,2
  8752     17DF  2FE1               	goto	u2371
  8753     17E0  2FE2               	goto	u2370
  8754     17E1                     u2371:
  8755     17E1  2FE7               	goto	l3513
  8756     17E2                     u2370:
  8757     17E2                     l3511:
  8758     17E2  0821               	movf	check_response@TOUT,w
  8759     17E3  1903               	btfsc	3,2
  8760     17E4  2FE6               	goto	u2381
  8761     17E5  2FE7               	goto	u2380
  8762     17E6                     u2381:
  8763     17E6  2FDC               	goto	l3509
  8764     17E7                     u2380:
  8765     17E7                     l3513:
  8766                           
  8767                           ;Sensores.c: 50:    if (TOUT)
  8768     17E7  0821               	movf	check_response@TOUT,w
  8769     17E8  1903               	btfsc	3,2
  8770     17E9  2FEB               	goto	u2391
  8771     17EA  2FEC               	goto	u2390
  8772     17EB                     u2391:
  8773     17EB  2FED               	goto	l3521
  8774     17EC                     u2390:
  8775     17EC  2FC5               	goto	l3485
  8776     17ED                     l3521:
  8777                           
  8778                           ;Sensores.c: 53:     { TMR2 = 0;
  8779     17ED  019A               	clrf	26	;volatile
  8780     17EE                     l3523:	
  8781                           ;Sensores.c: 54:       while (((PORTC & port)>0) && !TOUT);
  8782                           
  8783     17EE  080E               	movf	14,w	;volatile
  8784     17EF  0522               	andwf	check_response@port,w
  8785     17F0  1903               	btfsc	3,2
  8786     17F1  2FF3               	goto	u2401
  8787     17F2  2FF4               	goto	u2400
  8788     17F3                     u2401:
  8789     17F3  2FF9               	goto	l3527
  8790     17F4                     u2400:
  8791     17F4                     l3525:
  8792     17F4  0821               	movf	check_response@TOUT,w
  8793     17F5  1903               	btfsc	3,2
  8794     17F6  2FF8               	goto	u2411
  8795     17F7  2FF9               	goto	u2410
  8796     17F8                     u2411:
  8797     17F8  2FEE               	goto	l3523
  8798     17F9                     u2410:
  8799     17F9                     l3527:
  8800                           
  8801                           ;Sensores.c: 55:       if (TOUT)
  8802     17F9  0821               	movf	check_response@TOUT,w
  8803     17FA  1903               	btfsc	3,2
  8804     17FB  2FFD               	goto	u2421
  8805     17FC  2FFE               	goto	u2420
  8806     17FD                     u2421:
  8807     17FD  2FD9               	goto	l560
  8808     17FE                     u2420:
  8809     17FE  2FC5               	goto	l3485
  8810     17FF                     l553:
  8811     17FF  0008               	return
  8812     1800                     __end_of_check_response:
  8813                           
  8814                           	psect	intentry
  8815     0004                     __pintentry:	
  8816 ;; *************** function _INTERRUPT_InterruptManager *****************
  8817 ;; Defined at:
  8818 ;;		line 730 in file "main.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;		None
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;		None
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      void 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8832 ;;      Params:         0       0       0       0       0       0       0       0
  8833 ;;      Locals:         0       0       0       0       0       0       0       0
  8834 ;;      Temps:          2       0       0       0       0       0       0       0
  8835 ;;      Totals:         2       0       0       0       0       0       0       0
  8836 ;;Total ram usage:        2 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 1
  8839 ;; This function calls:
  8840 ;;		_TXsend
  8841 ;;		_i2cread3byte
  8842 ;;		_i2creadbyte
  8843 ;;		_i2cwrite2byte
  8844 ;;		_i2cwritebyte
  8845 ;; This function is called by:
  8846 ;;		Interrupt level 1
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850     0004                     _INTERRUPT_InterruptManager:
  8851                           
  8852                           ;incstack = 0
  8853     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8854                           
  8855                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8856     0005  3180               	pagesel	$
  8857     0006                     i1l6271:
  8858                           
  8859                           ;main.c: 734:     static unsigned char i2cstep=0;;main.c: 735:     static unsigned char 
      +                          rp=0, h=0, sspo=0;;main.c: 736:     if(RCIF){
  8860     0006  0020               	movlb	0	; select bank0
  8861     0007  1E91               	btfss	17,5	;volatile
  8862     0008  280A               	goto	u544_21
  8863     0009  280B               	goto	u544_20
  8864     000A                     u544_21:
  8865     000A  28E0               	goto	i1l385
  8866     000B                     u544_20:
  8867     000B  28C9               	goto	i1l6389
  8868     000C                     i1l6275:
  8869                           
  8870                           ;main.c: 739:             h = RCREG;
  8871     000C  0023               	movlb	3	; select bank3
  8872     000D  0819               	movf	25,w	;volatile
  8873     000E  00FC               	movwf	INTERRUPT_InterruptManager@h
  8874     000F                     i1l6277:
  8875                           
  8876                           ;main.c: 740:             if(h=='C') rp=1, h=0, sspo=0;;
  8877     000F  3043               	movlw	67
  8878     0010  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8879     0011  1D03               	btfss	3,2
  8880     0012  2814               	goto	u545_21
  8881     0013  2815               	goto	u545_20
  8882     0014                     u545_21:
  8883     0014  281A               	goto	i1l6283
  8884     0015                     u545_20:
  8885     0015                     i1l6279:
  8886     0015  0021               	movlb	1	; select bank1
  8887     0016  01AA               	clrf	INTERRUPT_InterruptManager@rp^(0+128)
  8888     0017  0AAA               	incf	INTERRUPT_InterruptManager@rp^(0+128),f
  8889     0018                     i1l6281:
  8890     0018  01FC               	clrf	INTERRUPT_InterruptManager@h
  8891     0019  01A9               	clrf	INTERRUPT_InterruptManager@sspo^(0+128)
  8892     001A                     i1l6283:
  8893                           
  8894                           ;main.c: 741:             if(h=='R') meddone=0x3FF, h=0;
  8895     001A  3052               	movlw	82
  8896     001B  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8897     001C  1D03               	btfss	3,2
  8898     001D  281F               	goto	u546_21
  8899     001E  2820               	goto	u546_20
  8900     001F                     u546_21:
  8901     001F  2826               	goto	i1l6289
  8902     0020                     u546_20:
  8903     0020                     i1l6285:
  8904     0020  30FF               	movlw	255
  8905     0021  0021               	movlb	1	; select bank1
  8906     0022  00A2               	movwf	_meddone^(0+128)
  8907     0023  3003               	movlw	3
  8908     0024  00A3               	movwf	(_meddone^(0+128)+1)
  8909     0025                     i1l6287:
  8910     0025  01FC               	clrf	INTERRUPT_InterruptManager@h
  8911     0026                     i1l6289:
  8912                           
  8913                           ;main.c: 742:             if(h=='M') rp=3, h=0;
  8914     0026  304D               	movlw	77
  8915     0027  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8916     0028  1D03               	btfss	3,2
  8917     0029  282B               	goto	u547_21
  8918     002A  282C               	goto	u547_20
  8919     002B                     u547_21:
  8920     002B  2830               	goto	i1l6295
  8921     002C                     u547_20:
  8922     002C                     i1l6291:
  8923     002C  3003               	movlw	3
  8924     002D  0021               	movlb	1	; select bank1
  8925     002E  00AA               	movwf	INTERRUPT_InterruptManager@rp^(0+128)
  8926     002F                     i1l6293:
  8927     002F  01FC               	clrf	INTERRUPT_InterruptManager@h
  8928     0030                     i1l6295:
  8929                           
  8930                           ;main.c: 743:             if(h=='L') med_sl=5, COM[1]=48, h=0, PIE1bits.TXIE = 1;
  8931     0030  304C               	movlw	76
  8932     0031  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8933     0032  1D03               	btfss	3,2
  8934     0033  2835               	goto	u548_21
  8935     0034  2836               	goto	u548_20
  8936     0035                     u548_21:
  8937     0035  283D               	goto	i1l6303
  8938     0036                     u548_20:
  8939     0036                     i1l6297:
  8940     0036  3005               	movlw	5
  8941     0037  0021               	movlb	1	; select bank1
  8942     0038  00B8               	movwf	_med_sl^(0+128)
  8943     0039  3030               	movlw	48
  8944     003A  00ED               	movwf	(_COM^(0+128)+1)
  8945     003B                     i1l6299:
  8946     003B  01FC               	clrf	INTERRUPT_InterruptManager@h
  8947     003C                     i1l6301:
  8948     003C  1611               	bsf	17,4	;volatile
  8949     003D                     i1l6303:
  8950                           
  8951                           ;main.c: 744:             if(h=='0') meddone|= 0x01,h=0;
  8952     003D  3030               	movlw	48
  8953     003E  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8954     003F  1D03               	btfss	3,2
  8955     0040  2842               	goto	u549_21
  8956     0041  2843               	goto	u549_20
  8957     0042                     u549_21:
  8958     0042  2846               	goto	i1l6309
  8959     0043                     u549_20:
  8960     0043                     i1l6305:
  8961     0043  0021               	movlb	1	; select bank1
  8962     0044  1422               	bsf	_meddone^(0+128),0
  8963     0045                     i1l6307:
  8964     0045  01FC               	clrf	INTERRUPT_InterruptManager@h
  8965     0046                     i1l6309:
  8966                           
  8967                           ;main.c: 745:             if(h=='1') meddone|=0x02, h=0;
  8968     0046  3031               	movlw	49
  8969     0047  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8970     0048  1D03               	btfss	3,2
  8971     0049  284B               	goto	u550_21
  8972     004A  284C               	goto	u550_20
  8973     004B                     u550_21:
  8974     004B  284F               	goto	i1l6315
  8975     004C                     u550_20:
  8976     004C                     i1l6311:
  8977     004C  0021               	movlb	1	; select bank1
  8978     004D  14A2               	bsf	_meddone^(0+128),1
  8979     004E                     i1l6313:
  8980     004E  01FC               	clrf	INTERRUPT_InterruptManager@h
  8981     004F                     i1l6315:
  8982                           
  8983                           ;main.c: 746:             if(h=='2') meddone|=0x04, h=0;
  8984     004F  3032               	movlw	50
  8985     0050  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8986     0051  1D03               	btfss	3,2
  8987     0052  2854               	goto	u551_21
  8988     0053  2855               	goto	u551_20
  8989     0054                     u551_21:
  8990     0054  2858               	goto	i1l6321
  8991     0055                     u551_20:
  8992     0055                     i1l6317:
  8993     0055  0021               	movlb	1	; select bank1
  8994     0056  1522               	bsf	_meddone^(0+128),2
  8995     0057                     i1l6319:
  8996     0057  01FC               	clrf	INTERRUPT_InterruptManager@h
  8997     0058                     i1l6321:
  8998                           
  8999                           ;main.c: 747:             if(h=='3') meddone|=0x08, h=0;
  9000     0058  3033               	movlw	51
  9001     0059  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9002     005A  1D03               	btfss	3,2
  9003     005B  285D               	goto	u552_21
  9004     005C  285E               	goto	u552_20
  9005     005D                     u552_21:
  9006     005D  2861               	goto	i1l6327
  9007     005E                     u552_20:
  9008     005E                     i1l6323:
  9009     005E  0021               	movlb	1	; select bank1
  9010     005F  15A2               	bsf	_meddone^(0+128),3
  9011     0060                     i1l6325:
  9012     0060  01FC               	clrf	INTERRUPT_InterruptManager@h
  9013     0061                     i1l6327:
  9014                           
  9015                           ;main.c: 748:             if(h=='4') meddone|=0x10, h=0;
  9016     0061  3034               	movlw	52
  9017     0062  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9018     0063  1D03               	btfss	3,2
  9019     0064  2866               	goto	u553_21
  9020     0065  2867               	goto	u553_20
  9021     0066                     u553_21:
  9022     0066  286A               	goto	i1l6333
  9023     0067                     u553_20:
  9024     0067                     i1l6329:
  9025     0067  0021               	movlb	1	; select bank1
  9026     0068  1622               	bsf	_meddone^(0+128),4
  9027     0069                     i1l6331:
  9028     0069  01FC               	clrf	INTERRUPT_InterruptManager@h
  9029     006A                     i1l6333:
  9030                           
  9031                           ;main.c: 749:             if(h=='5') meddone|=0x20, h=0;
  9032     006A  3035               	movlw	53
  9033     006B  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9034     006C  1D03               	btfss	3,2
  9035     006D  286F               	goto	u554_21
  9036     006E  2870               	goto	u554_20
  9037     006F                     u554_21:
  9038     006F  2873               	goto	i1l6339
  9039     0070                     u554_20:
  9040     0070                     i1l6335:
  9041     0070  0021               	movlb	1	; select bank1
  9042     0071  16A2               	bsf	_meddone^(0+128),5
  9043     0072                     i1l6337:
  9044     0072  01FC               	clrf	INTERRUPT_InterruptManager@h
  9045     0073                     i1l6339:
  9046                           
  9047                           ;main.c: 750:             if(h=='6') meddone|=0x40, h=0;
  9048     0073  3036               	movlw	54
  9049     0074  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9050     0075  1D03               	btfss	3,2
  9051     0076  2878               	goto	u555_21
  9052     0077  2879               	goto	u555_20
  9053     0078                     u555_21:
  9054     0078  287C               	goto	i1l6345
  9055     0079                     u555_20:
  9056     0079                     i1l6341:
  9057     0079  0021               	movlb	1	; select bank1
  9058     007A  1722               	bsf	_meddone^(0+128),6
  9059     007B                     i1l6343:
  9060     007B  01FC               	clrf	INTERRUPT_InterruptManager@h
  9061     007C                     i1l6345:
  9062                           
  9063                           ;main.c: 751:             if(h=='7') meddone|=0x80, h=0;
  9064     007C  3037               	movlw	55
  9065     007D  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9066     007E  1D03               	btfss	3,2
  9067     007F  2881               	goto	u556_21
  9068     0080  2882               	goto	u556_20
  9069     0081                     u556_21:
  9070     0081  2885               	goto	i1l6351
  9071     0082                     u556_20:
  9072     0082                     i1l6347:
  9073     0082  0021               	movlb	1	; select bank1
  9074     0083  17A2               	bsf	_meddone^(0+128),7
  9075     0084                     i1l6349:
  9076     0084  01FC               	clrf	INTERRUPT_InterruptManager@h
  9077     0085                     i1l6351:
  9078                           
  9079                           ;main.c: 752:             if(h=='8') meddone|=0x100, h=0;
  9080     0085  3038               	movlw	56
  9081     0086  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9082     0087  1D03               	btfss	3,2
  9083     0088  288A               	goto	u557_21
  9084     0089  288B               	goto	u557_20
  9085     008A                     u557_21:
  9086     008A  288E               	goto	i1l6357
  9087     008B                     u557_20:
  9088     008B                     i1l6353:
  9089     008B  0021               	movlb	1	; select bank1
  9090     008C  1423               	bsf	(_meddone^(0+128)+1),0
  9091     008D                     i1l6355:
  9092     008D  01FC               	clrf	INTERRUPT_InterruptManager@h
  9093     008E                     i1l6357:
  9094                           
  9095                           ;main.c: 753:             if(h=='9') meddone|=0x200, h=0;
  9096     008E  3039               	movlw	57
  9097     008F  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9098     0090  1D03               	btfss	3,2
  9099     0091  2893               	goto	u558_21
  9100     0092  2894               	goto	u558_20
  9101     0093                     u558_21:
  9102     0093  28E0               	goto	i1l385
  9103     0094                     u558_20:
  9104     0094                     i1l6359:
  9105     0094  0021               	movlb	1	; select bank1
  9106     0095  14A3               	bsf	(_meddone^(0+128)+1),1
  9107     0096                     i1l6361:
  9108     0096  01FC               	clrf	INTERRUPT_InterruptManager@h
  9109     0097  28E0               	goto	i1l385
  9110     0098                     i1l6363:
  9111                           
  9112                           ;main.c: 758:             if(sspo<9){
  9113     0098  3009               	movlw	9
  9114     0099  0229               	subwf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9115     009A  1803               	skipnc
  9116     009B  289D               	goto	u559_21
  9117     009C  289E               	goto	u559_20
  9118     009D                     u559_21:
  9119     009D  28AB               	goto	i1l6369
  9120     009E                     u559_20:
  9121     009E                     i1l6365:
  9122                           
  9123                           ;main.c: 759:               sport[sspo]=RCREG;
  9124     009E  0829               	movf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9125     009F  3EBD               	addlw	(low (_sport| 0))& (0+255)
  9126     00A0  0086               	movwf	6
  9127     00A1  0187               	clrf	7
  9128     00A2  0023               	movlb	3	; select bank3
  9129     00A3  0819               	movf	25,w	;volatile
  9130     00A4  0081               	movwf	1
  9131     00A5                     i1l6367:
  9132                           
  9133                           ;main.c: 760:               sspo++;
  9134     00A5  3001               	movlw	1
  9135     00A6  00FA               	movwf	??_INTERRUPT_InterruptManager
  9136     00A7  087A               	movf	??_INTERRUPT_InterruptManager,w
  9137     00A8  0021               	movlb	1	; select bank1
  9138     00A9  07A9               	addwf	INTERRUPT_InterruptManager@sspo^(0+128),f
  9139                           
  9140                           ;main.c: 761:             }else{
  9141     00AA  28E0               	goto	i1l385
  9142     00AB                     i1l6369:
  9143                           
  9144                           ;main.c: 762:               rp=2;
  9145     00AB  3002               	movlw	2
  9146     00AC  00AA               	movwf	INTERRUPT_InterruptManager@rp^(0+128)
  9147     00AD  28E0               	goto	i1l385
  9148     00AE                     i1l6371:
  9149                           
  9150                           ;main.c: 766:             sport[sspo]=RCREG;
  9151     00AE  0829               	movf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9152     00AF  3EBD               	addlw	(low (_sport| 0))& (0+255)
  9153     00B0  0086               	movwf	6
  9154     00B1  0187               	clrf	7
  9155     00B2  0023               	movlb	3	; select bank3
  9156     00B3  0819               	movf	25,w	;volatile
  9157     00B4  0081               	movwf	1
  9158     00B5                     i1l6373:
  9159                           
  9160                           ;main.c: 767:             port_save=1;
  9161     00B5  0021               	movlb	1	; select bank1
  9162     00B6  01BC               	clrf	_port_save^(0+128)
  9163     00B7  0ABC               	incf	_port_save^(0+128),f
  9164     00B8                     i1l6375:
  9165                           
  9166                           ;main.c: 769:             rp=0;
  9167     00B8  01AA               	clrf	INTERRUPT_InterruptManager@rp^(0+128)
  9168                           
  9169                           ;main.c: 771:             break;
  9170     00B9  28E0               	goto	i1l385
  9171     00BA                     i1l6377:
  9172                           
  9173                           ;main.c: 773:             sport[sspo]=RCREG;
  9174     00BA  0829               	movf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9175     00BB  3EBD               	addlw	(low (_sport| 0))& (0+255)
  9176     00BC  0086               	movwf	6
  9177     00BD  0187               	clrf	7
  9178     00BE  0023               	movlb	3	; select bank3
  9179     00BF  0819               	movf	25,w	;volatile
  9180     00C0  0081               	movwf	1
  9181     00C1                     i1l6379:
  9182                           
  9183                           ;main.c: 774:             port_save=1;
  9184     00C1  0021               	movlb	1	; select bank1
  9185     00C2  01BC               	clrf	_port_save^(0+128)
  9186     00C3  0ABC               	incf	_port_save^(0+128),f
  9187     00C4                     i1l6381:
  9188                           
  9189                           ;main.c: 775:             med_sl=5;
  9190     00C4  3005               	movlw	5
  9191     00C5  00B8               	movwf	_med_sl^(0+128)
  9192     00C6                     i1l6383:
  9193                           
  9194                           ;main.c: 776:             rp=0;
  9195     00C6  01AA               	clrf	INTERRUPT_InterruptManager@rp^(0+128)
  9196     00C7                     i1l6385:
  9197                           
  9198                           ;main.c: 777:             PIE1bits.TXIE = 1;
  9199     00C7  1611               	bsf	17,4	;volatile
  9200                           
  9201                           ;main.c: 778:             break;
  9202     00C8  28E0               	goto	i1l385
  9203     00C9                     i1l6389:
  9204     00C9  0021               	movlb	1	; select bank1
  9205     00CA  082A               	movf	INTERRUPT_InterruptManager@rp^(0+128),w
  9206     00CB  00FA               	movwf	??_INTERRUPT_InterruptManager
  9207     00CC  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9208                           
  9209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9210                           ; Switch size 1, requested type "simple"
  9211                           ; Number of cases is 1, Range of values is 0 to 0
  9212                           ; switch strategies available:
  9213                           ; Name         Instructions Cycles
  9214                           ; simple_byte            4     3 (average)
  9215                           ; direct_byte            8     6 (fixed)
  9216                           ; jumptable            260     6 (fixed)
  9217                           ;	Chosen strategy is simple_byte
  9218     00CD  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9219     00CE  3A00               	xorlw	0	; case 0
  9220     00CF  1903               	skipnz
  9221     00D0  28D2               	goto	i1l6765
  9222     00D1  28E0               	goto	i1l385
  9223     00D2                     i1l6765:
  9224                           
  9225                           ; Switch size 1, requested type "simple"
  9226                           ; Number of cases is 4, Range of values is 0 to 3
  9227                           ; switch strategies available:
  9228                           ; Name         Instructions Cycles
  9229                           ; simple_byte           13     7 (average)
  9230                           ; direct_byte           14     6 (fixed)
  9231                           ; jumptable            260     6 (fixed)
  9232                           ;	Chosen strategy is simple_byte
  9233     00D2  087A               	movf	??_INTERRUPT_InterruptManager,w
  9234     00D3  3A00               	xorlw	0	; case 0
  9235     00D4  1903               	skipnz
  9236     00D5  280C               	goto	i1l6275
  9237     00D6  3A01               	xorlw	1	; case 1
  9238     00D7  1903               	skipnz
  9239     00D8  2898               	goto	i1l6363
  9240     00D9  3A03               	xorlw	3	; case 2
  9241     00DA  1903               	skipnz
  9242     00DB  28AE               	goto	i1l6371
  9243     00DC  3A01               	xorlw	1	; case 3
  9244     00DD  1903               	skipnz
  9245     00DE  28BA               	goto	i1l6377
  9246     00DF  28E0               	goto	i1l385
  9247     00E0                     i1l385:	
  9248                           ;main.c: 782:     }
  9249                           
  9250                           
  9251                           ;main.c: 783:     static unsigned char plb[]="N";;main.c: 784:     if(TXIF && PIE1bits.T
      +                          XIE){
  9252     00E0  0020               	movlb	0	; select bank0
  9253     00E1  1E11               	btfss	17,4	;volatile
  9254     00E2  28E4               	goto	u560_21
  9255     00E3  28E5               	goto	u560_20
  9256     00E4                     u560_21:
  9257     00E4  297D               	goto	i1l410
  9258     00E5                     u560_20:
  9259     00E5                     i1l6391:
  9260     00E5  0021               	movlb	1	; select bank1
  9261     00E6  1E11               	btfss	17,4	;volatile
  9262     00E7  28E9               	goto	u561_21
  9263     00E8  28EA               	goto	u561_20
  9264     00E9                     u561_21:
  9265     00E9  297D               	goto	i1l410
  9266     00EA                     u561_20:
  9267     00EA  2961               	goto	i1l6433
  9268     00EB                     i1l6395:
  9269                           
  9270                           ;main.c: 814:             TXREG='{';
  9271     00EB  307B               	movlw	123
  9272     00EC  0023               	movlb	3	; select bank3
  9273     00ED  009A               	movwf	26	;volatile
  9274     00EE                     i1l6397:
  9275                           
  9276                           ;main.c: 815:             cs=1;
  9277     00EE  0021               	movlb	1	; select bank1
  9278     00EF  01BB               	clrf	_cs^(0+128)
  9279     00F0  0ABB               	incf	_cs^(0+128),f
  9280                           
  9281                           ;main.c: 816:             break;
  9282     00F1  297D               	goto	i1l410
  9283     00F2                     i1l6399:
  9284                           
  9285                           ;main.c: 818:             TXsend(COM, 4);
  9286     00F2  30EC               	movlw	low _COM
  9287     00F3  00F0               	movwf	TXsend@word
  9288     00F4  3000               	movlw	high _COM
  9289     00F5  00F1               	movwf	TXsend@word+1
  9290     00F6  3004               	movlw	4
  9291     00F7  00F2               	movwf	TXsend@size
  9292     00F8  3195  256E  3180   	fcall	_TXsend
  9293                           
  9294                           ;main.c: 819:             break;
  9295     00FB  297D               	goto	i1l410
  9296     00FC                     i1l6401:
  9297                           
  9298                           ;main.c: 821:             if(med_sl==1){
  9299     00FC  0338               	decf	_med_sl^(0+128),w
  9300     00FD  1D03               	btfss	3,2
  9301     00FE  2900               	goto	u562_21
  9302     00FF  2901               	goto	u562_20
  9303     0100                     u562_21:
  9304     0100  290B               	goto	i1l6405
  9305     0101                     u562_20:
  9306     0101                     i1l6403:
  9307                           
  9308                           ;main.c: 822:                TXsend(DHTS, 23);
  9309     0101  30C0               	movlw	low _DHTS
  9310     0102  00F0               	movwf	TXsend@word
  9311     0103  3001               	movlw	high _DHTS
  9312     0104  00F1               	movwf	TXsend@word+1
  9313     0105  3017               	movlw	23
  9314     0106  00F2               	movwf	TXsend@size
  9315     0107  3195  256E  3180   	fcall	_TXsend
  9316                           
  9317                           ;main.c: 823:             }else if(med_sl==2){
  9318     010A  297D               	goto	i1l410
  9319     010B                     i1l6405:
  9320     010B  3002               	movlw	2
  9321     010C  0638               	xorwf	_med_sl^(0+128),w
  9322     010D  1D03               	btfss	3,2
  9323     010E  2910               	goto	u563_21
  9324     010F  2911               	goto	u563_20
  9325     0110                     u563_21:
  9326     0110  291B               	goto	i1l6409
  9327     0111                     u563_20:
  9328     0111                     i1l6407:
  9329                           
  9330                           ;main.c: 824:                TXsend(DS18B, 12);
  9331     0111  303F               	movlw	low _DS18B
  9332     0112  00F0               	movwf	TXsend@word
  9333     0113  3001               	movlw	high _DS18B
  9334     0114  00F1               	movwf	TXsend@word+1
  9335     0115  300C               	movlw	12
  9336     0116  00F2               	movwf	TXsend@size
  9337     0117  3195  256E  3180   	fcall	_TXsend
  9338                           
  9339                           ;main.c: 825:             }else if(med_sl==3){
  9340     011A  297D               	goto	i1l410
  9341     011B                     i1l6409:
  9342     011B  3003               	movlw	3
  9343     011C  0638               	xorwf	_med_sl^(0+128),w
  9344     011D  1D03               	btfss	3,2
  9345     011E  2920               	goto	u564_21
  9346     011F  2921               	goto	u564_20
  9347     0120                     u564_21:
  9348     0120  292B               	goto	i1l6413
  9349     0121                     u564_20:
  9350     0121                     i1l6411:
  9351                           
  9352                           ;main.c: 826:                TXsend(VEML7700, 13);
  9353     0121  3032               	movlw	low _VEML7700
  9354     0122  00F0               	movwf	TXsend@word
  9355     0123  3001               	movlw	high _VEML7700
  9356     0124  00F1               	movwf	TXsend@word+1
  9357     0125  300D               	movlw	13
  9358     0126  00F2               	movwf	TXsend@size
  9359     0127  3195  256E  3180   	fcall	_TXsend
  9360                           
  9361                           ;main.c: 827:             }else if(med_sl==4){
  9362     012A  297D               	goto	i1l410
  9363     012B                     i1l6413:
  9364     012B  3004               	movlw	4
  9365     012C  0638               	xorwf	_med_sl^(0+128),w
  9366     012D  1D03               	btfss	3,2
  9367     012E  2930               	goto	u565_21
  9368     012F  2931               	goto	u565_20
  9369     0130                     u565_21:
  9370     0130  293B               	goto	i1l6417
  9371     0131                     u565_20:
  9372     0131                     i1l6415:
  9373                           
  9374                           ;main.c: 828:                TXsend(LOAD_CELL, 16);
  9375     0131  3022               	movlw	low _LOAD_CELL
  9376     0132  00F0               	movwf	TXsend@word
  9377     0133  3001               	movlw	high _LOAD_CELL
  9378     0134  00F1               	movwf	TXsend@word+1
  9379     0135  3010               	movlw	16
  9380     0136  00F2               	movwf	TXsend@size
  9381     0137  3195  256E  3180   	fcall	_TXsend
  9382                           
  9383                           ;main.c: 829:             }else if(med_sl==5){
  9384     013A  297D               	goto	i1l410
  9385     013B                     i1l6417:
  9386     013B  3005               	movlw	5
  9387     013C  0638               	xorwf	_med_sl^(0+128),w
  9388     013D  1D03               	btfss	3,2
  9389     013E  2940               	goto	u566_21
  9390     013F  2941               	goto	u566_20
  9391     0140                     u566_21:
  9392     0140  294B               	goto	i1l419
  9393     0141                     u566_20:
  9394     0141                     i1l6419:
  9395                           
  9396                           ;main.c: 830:                TXsend(sport, 10);
  9397     0141  30BD               	movlw	low _sport
  9398     0142  00F0               	movwf	TXsend@word
  9399     0143  3000               	movlw	high _sport
  9400     0144  00F1               	movwf	TXsend@word+1
  9401     0145  300A               	movlw	10
  9402     0146  00F2               	movwf	TXsend@size
  9403     0147  3195  256E  3180   	fcall	_TXsend
  9404     014A  297D               	goto	i1l410
  9405     014B                     i1l419:
  9406     014B  297D               	goto	i1l410
  9407     014C                     i1l6421:
  9408                           
  9409                           ;main.c: 834:             TXREG='}';
  9410     014C  307D               	movlw	125
  9411     014D  0023               	movlb	3	; select bank3
  9412     014E  009A               	movwf	26	;volatile
  9413                           
  9414                           ;main.c: 835:             cs=4;
  9415     014F  3004               	movlw	4
  9416     0150  0021               	movlb	1	; select bank1
  9417     0151  00BB               	movwf	_cs^(0+128)
  9418                           
  9419                           ;main.c: 836:             break;
  9420     0152  297D               	goto	i1l410
  9421     0153                     i1l6423:
  9422                           
  9423                           ;main.c: 838:             TXREG=13;
  9424     0153  300D               	movlw	13
  9425     0154  0023               	movlb	3	; select bank3
  9426     0155  009A               	movwf	26	;volatile
  9427                           
  9428                           ;main.c: 839:             cs=5;
  9429     0156  3005               	movlw	5
  9430     0157  0021               	movlb	1	; select bank1
  9431     0158  00BB               	movwf	_cs^(0+128)
  9432                           
  9433                           ;main.c: 840:             break;
  9434     0159  297D               	goto	i1l410
  9435     015A                     i1l6425:
  9436                           
  9437                           ;main.c: 842:             TXREG=10;
  9438     015A  300A               	movlw	10
  9439     015B  0023               	movlb	3	; select bank3
  9440     015C  009A               	movwf	26	;volatile
  9441     015D                     i1l6427:
  9442                           
  9443                           ;main.c: 843:             cs=0;
  9444     015D  0021               	movlb	1	; select bank1
  9445     015E  01BB               	clrf	_cs^(0+128)
  9446     015F                     i1l6429:
  9447                           
  9448                           ;main.c: 844:             PIE1bits.TXIE = 0;
  9449     015F  1211               	bcf	17,4	;volatile
  9450                           
  9451                           ;main.c: 845:             break;
  9452     0160  297D               	goto	i1l410
  9453     0161                     i1l6433:
  9454     0161  083B               	movf	_cs^(0+128),w
  9455     0162  00FA               	movwf	??_INTERRUPT_InterruptManager
  9456     0163  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9457                           
  9458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9459                           ; Switch size 1, requested type "simple"
  9460                           ; Number of cases is 1, Range of values is 0 to 0
  9461                           ; switch strategies available:
  9462                           ; Name         Instructions Cycles
  9463                           ; simple_byte            4     3 (average)
  9464                           ; direct_byte            8     6 (fixed)
  9465                           ; jumptable            260     6 (fixed)
  9466                           ;	Chosen strategy is simple_byte
  9467     0164  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9468     0165  3A00               	xorlw	0	; case 0
  9469     0166  1903               	skipnz
  9470     0167  2969               	goto	i1l6767
  9471     0168  297D               	goto	i1l410
  9472     0169                     i1l6767:
  9473                           
  9474                           ; Switch size 1, requested type "simple"
  9475                           ; Number of cases is 6, Range of values is 0 to 5
  9476                           ; switch strategies available:
  9477                           ; Name         Instructions Cycles
  9478                           ; direct_byte           18     6 (fixed)
  9479                           ; simple_byte           19    10 (average)
  9480                           ; jumptable            260     6 (fixed)
  9481                           ;	Chosen strategy is simple_byte
  9482     0169  087A               	movf	??_INTERRUPT_InterruptManager,w
  9483     016A  3A00               	xorlw	0	; case 0
  9484     016B  1903               	skipnz
  9485     016C  28EB               	goto	i1l6395
  9486     016D  3A01               	xorlw	1	; case 1
  9487     016E  1903               	skipnz
  9488     016F  28F2               	goto	i1l6399
  9489     0170  3A03               	xorlw	3	; case 2
  9490     0171  1903               	skipnz
  9491     0172  28FC               	goto	i1l6401
  9492     0173  3A01               	xorlw	1	; case 3
  9493     0174  1903               	skipnz
  9494     0175  294C               	goto	i1l6421
  9495     0176  3A07               	xorlw	7	; case 4
  9496     0177  1903               	skipnz
  9497     0178  2953               	goto	i1l6423
  9498     0179  3A01               	xorlw	1	; case 5
  9499     017A  1903               	skipnz
  9500     017B  295A               	goto	i1l6425
  9501     017C  297D               	goto	i1l410
  9502     017D                     i1l410:	
  9503                           ;main.c: 848:     }
  9504                           
  9505                           
  9506                           ;main.c: 849:     if(PIR1bits.SSPIF){
  9507     017D  0020               	movlb	0	; select bank0
  9508     017E  1D91               	btfss	17,3	;volatile
  9509     017F  2981               	goto	u567_21
  9510     0180  2982               	goto	u567_20
  9511     0181                     u567_21:
  9512     0181  2A46               	goto	i1l6509
  9513     0182                     u567_20:
  9514     0182                     i1l6435:
  9515                           
  9516                           ;main.c: 850:     if(i2select==1){
  9517     0182  0021               	movlb	1	; select bank1
  9518     0183  0332               	decf	_i2select^(0+128),w
  9519     0184  1D03               	btfss	3,2
  9520     0185  2987               	goto	u568_21
  9521     0186  2988               	goto	u568_20
  9522     0187                     u568_21:
  9523     0187  29CD               	goto	i1l6465
  9524     0188                     u568_20:
  9525     0188  299C               	goto	i1l6445
  9526     0189                     i1l6439:
  9527                           
  9528                           ;main.c: 854:          i2cwrite2byte (0x20, 0x00,0x0800);
  9529     0189  01F0               	clrf	i2cwrite2byte@dir
  9530     018A  3000               	movlw	0
  9531     018B  00F1               	movwf	i2cwrite2byte@data
  9532     018C  3008               	movlw	8
  9533     018D  00F2               	movwf	i2cwrite2byte@data+1
  9534     018E  3020               	movlw	32
  9535     018F  3196  26BD  3180   	fcall	_i2cwrite2byte
  9536                           
  9537                           ;main.c: 855:          break;
  9538     0192  29AC               	goto	i1l6447
  9539     0193                     i1l6441:
  9540                           
  9541                           ;main.c: 857:          i2creadbyte (0x20, 0x04, &Lum);
  9542     0193  3004               	movlw	4
  9543     0194  00F0               	movwf	i2creadbyte@dir
  9544     0195  30CB               	movlw	(low (_Lum| 0))& (0+255)
  9545     0196  00F1               	movwf	i2creadbyte@value
  9546     0197  3020               	movlw	32
  9547     0198  3189  2199  3180   	fcall	_i2creadbyte
  9548                           
  9549                           ;main.c: 858:          break;
  9550     019B  29AC               	goto	i1l6447
  9551     019C                     i1l6445:
  9552     019C  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9553     019D  00FA               	movwf	??_INTERRUPT_InterruptManager
  9554     019E  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9555                           
  9556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9557                           ; Switch size 1, requested type "simple"
  9558                           ; Number of cases is 1, Range of values is 0 to 0
  9559                           ; switch strategies available:
  9560                           ; Name         Instructions Cycles
  9561                           ; simple_byte            4     3 (average)
  9562                           ; direct_byte            8     6 (fixed)
  9563                           ; jumptable            260     6 (fixed)
  9564                           ;	Chosen strategy is simple_byte
  9565     019F  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9566     01A0  3A00               	xorlw	0	; case 0
  9567     01A1  1903               	skipnz
  9568     01A2  29A4               	goto	i1l6769
  9569     01A3  29AC               	goto	i1l6447
  9570     01A4                     i1l6769:
  9571                           
  9572                           ; Switch size 1, requested type "simple"
  9573                           ; Number of cases is 2, Range of values is 0 to 1
  9574                           ; switch strategies available:
  9575                           ; Name         Instructions Cycles
  9576                           ; simple_byte            7     4 (average)
  9577                           ; direct_byte           10     6 (fixed)
  9578                           ; jumptable            260     6 (fixed)
  9579                           ;	Chosen strategy is simple_byte
  9580     01A4  087A               	movf	??_INTERRUPT_InterruptManager,w
  9581     01A5  3A00               	xorlw	0	; case 0
  9582     01A6  1903               	skipnz
  9583     01A7  2989               	goto	i1l6439
  9584     01A8  3A01               	xorlw	1	; case 1
  9585     01A9  1903               	skipnz
  9586     01AA  2993               	goto	i1l6441
  9587     01AB  29AC               	goto	i1l6447
  9588     01AC                     i1l6447:
  9589                           
  9590                           ;main.c: 861:      if(endi2c && (!i2cstep)) {
  9591     01AC  0021               	movlb	1	; select bank1
  9592     01AD  0837               	movf	_endi2c^(0+128),w
  9593     01AE  1903               	btfsc	3,2
  9594     01AF  29B1               	goto	u569_21
  9595     01B0  29B2               	goto	u569_20
  9596     01B1                     u569_21:
  9597     01B1  29BF               	goto	i1l6457
  9598     01B2                     u569_20:
  9599     01B2                     i1l6449:
  9600     01B2  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9601     01B3  1D03               	btfss	3,2
  9602     01B4  29B6               	goto	u570_21
  9603     01B5  29B7               	goto	u570_20
  9604     01B6                     u570_21:
  9605     01B6  29BF               	goto	i1l6457
  9606     01B7                     u570_20:
  9607     01B7                     i1l6451:
  9608                           
  9609                           ;main.c: 862:          i2cstep++;
  9610     01B7  3001               	movlw	1
  9611     01B8  00FA               	movwf	??_INTERRUPT_InterruptManager
  9612     01B9  087A               	movf	??_INTERRUPT_InterruptManager,w
  9613     01BA  07AB               	addwf	INTERRUPT_InterruptManager@i2cstep^(0+128),f
  9614     01BB                     i1l6453:
  9615                           
  9616                           ;main.c: 863:          Lectura=1;
  9617     01BB  01B9               	clrf	_Lectura^(0+128)
  9618     01BC  0AB9               	incf	_Lectura^(0+128),f
  9619     01BD                     i1l6455:
  9620                           
  9621                           ;main.c: 864:          endi2c=0;
  9622     01BD  01B7               	clrf	_endi2c^(0+128)
  9623                           
  9624                           ;main.c: 865:      }else if(endi2c && (i2cstep)){
  9625     01BE  29CD               	goto	i1l6465
  9626     01BF                     i1l6457:
  9627     01BF  0837               	movf	_endi2c^(0+128),w
  9628     01C0  1903               	btfsc	3,2
  9629     01C1  29C3               	goto	u571_21
  9630     01C2  29C4               	goto	u571_20
  9631     01C3                     u571_21:
  9632     01C3  29CD               	goto	i1l6465
  9633     01C4                     u571_20:
  9634     01C4                     i1l6459:
  9635     01C4  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9636     01C5  1903               	btfsc	3,2
  9637     01C6  29C8               	goto	u572_21
  9638     01C7  29C9               	goto	u572_20
  9639     01C8                     u572_21:
  9640     01C8  29CD               	goto	i1l6465
  9641     01C9                     u572_20:
  9642     01C9                     i1l6461:
  9643                           
  9644                           ;main.c: 866:          i2cstep=0;
  9645     01C9  01AB               	clrf	INTERRUPT_InterruptManager@i2cstep^(0+128)
  9646                           
  9647                           ;main.c: 867:          endi2c=0;
  9648     01CA  01B7               	clrf	_endi2c^(0+128)
  9649     01CB                     i1l6463:
  9650                           
  9651                           ;main.c: 868:          i2cfinish=1;
  9652     01CB  01B5               	clrf	_i2cfinish^(0+128)
  9653     01CC  0AB5               	incf	_i2cfinish^(0+128),f
  9654     01CD                     i1l6465:
  9655                           
  9656                           ;main.c: 871:     if(i2select==2){
  9657     01CD  3002               	movlw	2
  9658     01CE  0632               	xorwf	_i2select^(0+128),w
  9659     01CF  1D03               	btfss	3,2
  9660     01D0  29D2               	goto	u573_21
  9661     01D1  29D3               	goto	u573_20
  9662     01D2                     u573_21:
  9663     01D2  2A44               	goto	i1l6507
  9664     01D3                     u573_20:
  9665     01D3  2A0B               	goto	i1l6483
  9666     01D4                     i1l6469:
  9667                           
  9668                           ;main.c: 875:          i2cwrite2byte (0x2A<<1, 0x00,0x2586);
  9669     01D4  01F0               	clrf	i2cwrite2byte@dir
  9670     01D5  3086               	movlw	134
  9671     01D6  00F1               	movwf	i2cwrite2byte@data
  9672     01D7  3025               	movlw	37
  9673     01D8  00F2               	movwf	i2cwrite2byte@data+1
  9674     01D9  3054               	movlw	84
  9675     01DA  3196  26BD  3180   	fcall	_i2cwrite2byte
  9676                           
  9677                           ;main.c: 876:          break;
  9678     01DD  2A27               	goto	i1l6485
  9679     01DE                     i1l6471:
  9680                           
  9681                           ;main.c: 878:          i2cwritebyte (0x2A<<1, 0x02,0x30);
  9682     01DE  3002               	movlw	2
  9683     01DF  00F0               	movwf	i2cwritebyte@dir
  9684     01E0  3030               	movlw	48
  9685     01E1  00F1               	movwf	i2cwritebyte@data
  9686     01E2  3054               	movlw	84
  9687     01E3  3196  2601  3180   	fcall	_i2cwritebyte
  9688                           
  9689                           ;main.c: 879:          break;
  9690     01E6  2A27               	goto	i1l6485
  9691     01E7                     i1l6473:
  9692                           
  9693                           ;main.c: 881:          i2cwritebyte (0x2A<<1, 0x11,0x51);
  9694     01E7  3011               	movlw	17
  9695     01E8  00F0               	movwf	i2cwritebyte@dir
  9696     01E9  3051               	movlw	81
  9697     01EA  00F1               	movwf	i2cwritebyte@data
  9698     01EB  3054               	movlw	84
  9699     01EC  3196  2601  3180   	fcall	_i2cwritebyte
  9700                           
  9701                           ;main.c: 882:          break;
  9702     01EF  2A27               	goto	i1l6485
  9703     01F0                     i1l6475:
  9704                           
  9705                           ;main.c: 884:          i2cwritebyte (0x2A<<1, 0x15,0x30);
  9706     01F0  3015               	movlw	21
  9707     01F1  00F0               	movwf	i2cwritebyte@dir
  9708     01F2  3030               	movlw	48
  9709     01F3  00F1               	movwf	i2cwritebyte@data
  9710     01F4  3054               	movlw	84
  9711     01F5  3196  2601  3180   	fcall	_i2cwritebyte
  9712                           
  9713                           ;main.c: 885:          break;
  9714     01F8  2A27               	goto	i1l6485
  9715     01F9                     i1l6477:
  9716                           
  9717                           ;main.c: 887:          i2cwritebyte (0x2A<<1, 0x1C,0x80);
  9718     01F9  301C               	movlw	28
  9719     01FA  00F0               	movwf	i2cwritebyte@dir
  9720     01FB  3080               	movlw	128
  9721     01FC  00F1               	movwf	i2cwritebyte@data
  9722     01FD  3054               	movlw	84
  9723     01FE  3196  2601  3180   	fcall	_i2cwritebyte
  9724                           
  9725                           ;main.c: 888:          break;
  9726     0201  2A27               	goto	i1l6485
  9727     0202                     i1l6479:
  9728                           
  9729                           ;main.c: 890:          i2cread3byte (0x2A<<1, 0x12, &weight);
  9730     0202  3012               	movlw	18
  9731     0203  00F0               	movwf	i2cread3byte@dir
  9732     0204  306C               	movlw	(low (_weight| (0+256)))& (0+255)
  9733     0205  00F1               	movwf	i2cread3byte@value
  9734     0206  3054               	movlw	84
  9735     0207  318A  22C0  3180   	fcall	_i2cread3byte
  9736                           
  9737                           ;main.c: 891:          break;
  9738     020A  2A27               	goto	i1l6485
  9739     020B                     i1l6483:
  9740     020B  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9741     020C  00FA               	movwf	??_INTERRUPT_InterruptManager
  9742     020D  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9743                           
  9744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9745                           ; Switch size 1, requested type "simple"
  9746                           ; Number of cases is 1, Range of values is 0 to 0
  9747                           ; switch strategies available:
  9748                           ; Name         Instructions Cycles
  9749                           ; simple_byte            4     3 (average)
  9750                           ; direct_byte            8     6 (fixed)
  9751                           ; jumptable            260     6 (fixed)
  9752                           ;	Chosen strategy is simple_byte
  9753     020E  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9754     020F  3A00               	xorlw	0	; case 0
  9755     0210  1903               	skipnz
  9756     0211  2A13               	goto	i1l6771
  9757     0212  2A27               	goto	i1l6485
  9758     0213                     i1l6771:
  9759                           
  9760                           ; Switch size 1, requested type "simple"
  9761                           ; Number of cases is 6, Range of values is 0 to 9
  9762                           ; switch strategies available:
  9763                           ; Name         Instructions Cycles
  9764                           ; simple_byte           19    10 (average)
  9765                           ; direct_byte           26     6 (fixed)
  9766                           ; jumptable            260     6 (fixed)
  9767                           ;	Chosen strategy is simple_byte
  9768     0213  087A               	movf	??_INTERRUPT_InterruptManager,w
  9769     0214  3A00               	xorlw	0	; case 0
  9770     0215  1903               	skipnz
  9771     0216  29D4               	goto	i1l6469
  9772     0217  3A01               	xorlw	1	; case 1
  9773     0218  1903               	skipnz
  9774     0219  29DE               	goto	i1l6471
  9775     021A  3A03               	xorlw	3	; case 2
  9776     021B  1903               	skipnz
  9777     021C  29E7               	goto	i1l6473
  9778     021D  3A01               	xorlw	1	; case 3
  9779     021E  1903               	skipnz
  9780     021F  29F9               	goto	i1l6477
  9781     0220  3A07               	xorlw	7	; case 4
  9782     0221  1903               	skipnz
  9783     0222  2A02               	goto	i1l6479
  9784     0223  3A0D               	xorlw	13	; case 9
  9785     0224  1903               	skipnz
  9786     0225  29F0               	goto	i1l6475
  9787     0226  2A27               	goto	i1l6485
  9788     0227                     i1l6485:
  9789                           
  9790                           ;main.c: 895:      if(endi2c ==1) {
  9791     0227  0021               	movlb	1	; select bank1
  9792     0228  0337               	decf	_endi2c^(0+128),w
  9793     0229  1D03               	btfss	3,2
  9794     022A  2A2C               	goto	u574_21
  9795     022B  2A2D               	goto	u574_20
  9796     022C                     u574_21:
  9797     022C  2A34               	goto	i1l6493
  9798     022D                     u574_20:
  9799     022D                     i1l6487:
  9800                           
  9801                           ;main.c: 896:          i2cstep++;
  9802     022D  3001               	movlw	1
  9803     022E  00FA               	movwf	??_INTERRUPT_InterruptManager
  9804     022F  087A               	movf	??_INTERRUPT_InterruptManager,w
  9805     0230  07AB               	addwf	INTERRUPT_InterruptManager@i2cstep^(0+128),f
  9806     0231                     i1l6489:
  9807                           
  9808                           ;main.c: 897:          Lectura=1;
  9809     0231  01B9               	clrf	_Lectura^(0+128)
  9810     0232  0AB9               	incf	_Lectura^(0+128),f
  9811     0233                     i1l6491:
  9812                           
  9813                           ;main.c: 898:          endi2c=0;
  9814     0233  01B7               	clrf	_endi2c^(0+128)
  9815     0234                     i1l6493:
  9816     0234  3002               	movlw	2
  9817     0235  0637               	xorwf	_endi2c^(0+128),w
  9818     0236  1D03               	btfss	3,2
  9819     0237  2A39               	goto	u575_21
  9820     0238  2A3A               	goto	u575_20
  9821     0239                     u575_21:
  9822     0239  2A44               	goto	i1l6507
  9823     023A                     u575_20:
  9824     023A                     i1l6495:
  9825                           
  9826                           ;main.c: 900:          i2cstep=0;
  9827     023A  01AB               	clrf	INTERRUPT_InterruptManager@i2cstep^(0+128)
  9828                           
  9829                           ;main.c: 901:          endi2c=0;
  9830     023B  01B7               	clrf	_endi2c^(0+128)
  9831     023C                     i1l6497:
  9832                           
  9833                           ;main.c: 902:          med_sl=5, COM[1]=48, PIE1bits.TXIE = 1;
  9834     023C  3005               	movlw	5
  9835     023D  00B8               	movwf	_med_sl^(0+128)
  9836     023E                     i1l6499:
  9837     023E  3030               	movlw	48
  9838     023F  00ED               	movwf	(_COM^(0+128)+1)
  9839     0240                     i1l6501:
  9840     0240  1611               	bsf	17,4	;volatile
  9841     0241                     i1l6503:
  9842                           
  9843                           ;main.c: 903:          i2cfinish=1;
  9844     0241  01B5               	clrf	_i2cfinish^(0+128)
  9845     0242  0AB5               	incf	_i2cfinish^(0+128),f
  9846     0243                     i1l6505:
  9847                           
  9848                           ;main.c: 904:          PIE1bits.SSPIE = 0;
  9849     0243  1191               	bcf	17,3	;volatile
  9850     0244                     i1l6507:
  9851                           
  9852                           ;main.c: 907:     PIR1bits.SSPIF = 0;
  9853     0244  0020               	movlb	0	; select bank0
  9854     0245  1191               	bcf	17,3	;volatile
  9855     0246                     i1l6509:
  9856                           
  9857                           ;main.c: 909:     if (TMR2IF || TMR2>100)
  9858     0246  1891               	btfsc	17,1	;volatile
  9859     0247  2A49               	goto	u576_21
  9860     0248  2A4A               	goto	u576_20
  9861     0249                     u576_21:
  9862     0249  2A50               	goto	i1l450
  9863     024A                     u576_20:
  9864     024A                     i1l6511:
  9865     024A  3065               	movlw	101
  9866     024B  021A               	subwf	26,w	;volatile
  9867     024C  1C03               	skipc
  9868     024D  2A4F               	goto	u577_21
  9869     024E  2A50               	goto	u577_20
  9870     024F                     u577_21:
  9871     024F  2A57               	goto	i1l451
  9872     0250                     u577_20:
  9873     0250                     i1l450:
  9874                           
  9875                           ;main.c: 910:     { TOUT = 1;
  9876     0250  0021               	movlb	1	; select bank1
  9877     0251  01BA               	clrf	_TOUT^(0+128)
  9878     0252  0ABA               	incf	_TOUT^(0+128),f
  9879     0253                     i1l6513:
  9880                           
  9881                           ;main.c: 911:       TMR2 = 0;
  9882     0253  0020               	movlb	0	; select bank0
  9883     0254  019A               	clrf	26	;volatile
  9884     0255                     i1l6515:
  9885                           
  9886                           ;main.c: 912:       TMR2ON = 0;
  9887     0255  111C               	bcf	28,2	;volatile
  9888     0256                     i1l6517:
  9889                           
  9890                           ;main.c: 913:       TMR2IF = 0;
  9891     0256  1091               	bcf	17,1	;volatile
  9892     0257                     i1l451:
  9893     0257  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9894     0258  0009               	retfie
  9895     0259                     __end_of_INTERRUPT_InterruptManager:
  9896                           
  9897                           	psect	text29
  9898     1601                     __ptext29:	
  9899 ;; *************** function _i2cwritebyte *****************
  9900 ;; Defined at:
  9901 ;;		line 189 in file "main.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  add             1    wreg     unsigned char 
  9904 ;;  dir             1    0[COMMON] unsigned char 
  9905 ;;  data            1    1[COMMON] unsigned char 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  add             1    4[COMMON] unsigned char 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9917 ;;      Params:         2       0       0       0       0       0       0       0
  9918 ;;      Locals:         1       0       0       0       0       0       0       0
  9919 ;;      Temps:          2       0       0       0       0       0       0       0
  9920 ;;      Totals:         5       0       0       0       0       0       0       0
  9921 ;;Total ram usage:        5 bytes
  9922 ;; Hardware stack levels used: 1
  9923 ;; This function calls:
  9924 ;;		Nothing
  9925 ;; This function is called by:
  9926 ;;		_INTERRUPT_InterruptManager
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930     1601                     _i2cwritebyte:	
  9931                           ;psect for function _i2cwritebyte
  9932                           
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in _i2cwritebyte: [wreg-fsr0h+status,2+status,0]
  9936                           ;i2cwritebyte@add stored from wreg
  9937     1601  00F4               	movwf	i2cwritebyte@add
  9938     1602                     i1l3895:
  9939                           
  9940                           ;main.c: 190:    static char si3=0;;main.c: 191:     switch (si3){
  9941     1602  2E22               	goto	i1l3917
  9942     1603                     i1l3897:
  9943                           
  9944                           ;main.c: 193:         SSPBUF = add;
  9945     1603  0874               	movf	i2cwritebyte@add,w
  9946     1604  0024               	movlb	4	; select bank4
  9947     1605  0091               	movwf	17	;volatile
  9948     1606                     i1l3899:
  9949                           
  9950                           ;main.c: 194:         si3=1;
  9951     1606  0021               	movlb	1	; select bank1
  9952     1607  01AE               	clrf	i2cwritebyte@si3^(0+128)
  9953     1608  0AAE               	incf	i2cwritebyte@si3^(0+128),f
  9954                           
  9955                           ;main.c: 195:         break;
  9956     1609  2E3C               	goto	i1l226
  9957     160A                     i1l3901:
  9958                           
  9959                           ;main.c: 197:         SSPBUF = dir;
  9960     160A  0870               	movf	i2cwritebyte@dir,w
  9961     160B  0024               	movlb	4	; select bank4
  9962     160C  0091               	movwf	17	;volatile
  9963                           
  9964                           ;main.c: 198:         si3=2;
  9965     160D  3002               	movlw	2
  9966     160E  0021               	movlb	1	; select bank1
  9967     160F  00AE               	movwf	i2cwritebyte@si3^(0+128)
  9968                           
  9969                           ;main.c: 199:         break;
  9970     1610  2E3C               	goto	i1l226
  9971     1611                     i1l3903:
  9972                           
  9973                           ;main.c: 201:         SSPBUF = data;
  9974     1611  0871               	movf	i2cwritebyte@data,w
  9975     1612  0024               	movlb	4	; select bank4
  9976     1613  0091               	movwf	17	;volatile
  9977                           
  9978                           ;main.c: 202:         si3=3;
  9979     1614  3003               	movlw	3
  9980     1615  0021               	movlb	1	; select bank1
  9981     1616  00AE               	movwf	i2cwritebyte@si3^(0+128)
  9982                           
  9983                           ;main.c: 203:         break;
  9984     1617  2E3C               	goto	i1l226
  9985     1618                     i1l3905:
  9986                           
  9987                           ;main.c: 205:         si3=4;
  9988     1618  3004               	movlw	4
  9989     1619  00AE               	movwf	i2cwritebyte@si3^(0+128)
  9990     161A                     i1l3907:
  9991                           
  9992                           ;main.c: 206:         SSPCON2bits.PEN = 1;
  9993     161A  0024               	movlb	4	; select bank4
  9994     161B  1516               	bsf	22,2	;volatile
  9995                           
  9996                           ;main.c: 207:         break;
  9997     161C  2E3C               	goto	i1l226
  9998     161D                     i1l3909:
  9999                           
 10000                           ;main.c: 209:         si3=0;
 10001     161D  01AE               	clrf	i2cwritebyte@si3^(0+128)
 10002     161E                     i1l3911:
 10003                           
 10004                           ;main.c: 210:         PIE1bits.SSPIE = 0;
 10005     161E  1191               	bcf	17,3	;volatile
 10006     161F                     i1l3913:
 10007                           
 10008                           ;main.c: 211:         endi2c=1;
 10009     161F  01B7               	clrf	_endi2c^(0+128)
 10010     1620  0AB7               	incf	_endi2c^(0+128),f
 10011                           
 10012                           ;main.c: 212:         break;
 10013     1621  2E3C               	goto	i1l226
 10014     1622                     i1l3917:
 10015     1622  0021               	movlb	1	; select bank1
 10016     1623  082E               	movf	i2cwritebyte@si3^(0+128),w
 10017     1624  00F2               	movwf	??_i2cwritebyte
 10018     1625  01F3               	clrf	??_i2cwritebyte+1
 10019                           
 10020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10021                           ; Switch size 1, requested type "simple"
 10022                           ; Number of cases is 1, Range of values is 0 to 0
 10023                           ; switch strategies available:
 10024                           ; Name         Instructions Cycles
 10025                           ; simple_byte            4     3 (average)
 10026                           ; direct_byte            8     6 (fixed)
 10027                           ; jumptable            260     6 (fixed)
 10028                           ;	Chosen strategy is simple_byte
 10029     1626  0873               	movf	??_i2cwritebyte+1,w
 10030     1627  3A00               	xorlw	0	; case 0
 10031     1628  1903               	skipnz
 10032     1629  2E2B               	goto	i1l6773
 10033     162A  2E3C               	goto	i1l226
 10034     162B                     i1l6773:
 10035                           
 10036                           ; Switch size 1, requested type "simple"
 10037                           ; Number of cases is 5, Range of values is 0 to 4
 10038                           ; switch strategies available:
 10039                           ; Name         Instructions Cycles
 10040                           ; direct_byte           16     6 (fixed)
 10041                           ; simple_byte           16     9 (average)
 10042                           ; jumptable            260     6 (fixed)
 10043                           ;	Chosen strategy is simple_byte
 10044     162B  0872               	movf	??_i2cwritebyte,w
 10045     162C  3A00               	xorlw	0	; case 0
 10046     162D  1903               	skipnz
 10047     162E  2E03               	goto	i1l3897
 10048     162F  3A01               	xorlw	1	; case 1
 10049     1630  1903               	skipnz
 10050     1631  2E0A               	goto	i1l3901
 10051     1632  3A03               	xorlw	3	; case 2
 10052     1633  1903               	skipnz
 10053     1634  2E11               	goto	i1l3903
 10054     1635  3A01               	xorlw	1	; case 3
 10055     1636  1903               	skipnz
 10056     1637  2E18               	goto	i1l3905
 10057     1638  3A07               	xorlw	7	; case 4
 10058     1639  1903               	skipnz
 10059     163A  2E1D               	goto	i1l3909
 10060     163B  2E3C               	goto	i1l226
 10061     163C                     i1l226:
 10062     163C  0008               	return
 10063     163D                     __end_of_i2cwritebyte:
 10064                           
 10065                           	psect	text30
 10066     16BD                     __ptext30:	
 10067 ;; *************** function _i2cwrite2byte *****************
 10068 ;; Defined at:
 10069 ;;		line 155 in file "main.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  add             1    wreg     unsigned char 
 10072 ;;  dir             1    0[COMMON] unsigned char 
 10073 ;;  data            2    1[COMMON] unsigned int 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  add             1    5[COMMON] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10085 ;;      Params:         3       0       0       0       0       0       0       0
 10086 ;;      Locals:         1       0       0       0       0       0       0       0
 10087 ;;      Temps:          2       0       0       0       0       0       0       0
 10088 ;;      Totals:         6       0       0       0       0       0       0       0
 10089 ;;Total ram usage:        6 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; This function calls:
 10092 ;;		Nothing
 10093 ;; This function is called by:
 10094 ;;		_INTERRUPT_InterruptManager
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098     16BD                     _i2cwrite2byte:	
 10099                           ;psect for function _i2cwrite2byte
 10100                           
 10101                           
 10102                           ;incstack = 0
 10103                           ; Regs used in _i2cwrite2byte: [wreg-fsr0h+status,2+status,0]
 10104                           ;i2cwrite2byte@add stored from wreg
 10105     16BD  00F5               	movwf	i2cwrite2byte@add
 10106     16BE                     i1l3863:
 10107                           
 10108                           ;main.c: 156:    static char si3=0;;main.c: 157:     switch (si3){
 10109     16BE  2EE5               	goto	i1l3889
 10110     16BF                     i1l3865:
 10111                           
 10112                           ;main.c: 159:         SSPBUF = add;
 10113     16BF  0875               	movf	i2cwrite2byte@add,w
 10114     16C0  0024               	movlb	4	; select bank4
 10115     16C1  0091               	movwf	17	;volatile
 10116     16C2                     i1l3867:
 10117                           
 10118                           ;main.c: 160:         si3=1;
 10119     16C2  0021               	movlb	1	; select bank1
 10120     16C3  01AF               	clrf	i2cwrite2byte@si3^(0+128)
 10121     16C4  0AAF               	incf	i2cwrite2byte@si3^(0+128),f
 10122                           
 10123                           ;main.c: 161:         break;
 10124     16C5  2F02               	goto	i1l214
 10125     16C6                     i1l3869:
 10126                           
 10127                           ;main.c: 163:         SSPBUF = dir;
 10128     16C6  0870               	movf	i2cwrite2byte@dir,w
 10129     16C7  0024               	movlb	4	; select bank4
 10130     16C8  0091               	movwf	17	;volatile
 10131                           
 10132                           ;main.c: 164:         si3=2;
 10133     16C9  3002               	movlw	2
 10134     16CA  0021               	movlb	1	; select bank1
 10135     16CB  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10136                           
 10137                           ;main.c: 165:         break;
 10138     16CC  2F02               	goto	i1l214
 10139     16CD                     i1l3871:
 10140                           
 10141                           ;main.c: 167:         SSPBUF = (unsigned char)(data & 0x00FF);
 10142     16CD  0871               	movf	i2cwrite2byte@data,w
 10143     16CE  0024               	movlb	4	; select bank4
 10144     16CF  0091               	movwf	17	;volatile
 10145                           
 10146                           ;main.c: 168:         si3=3;
 10147     16D0  3003               	movlw	3
 10148     16D1  0021               	movlb	1	; select bank1
 10149     16D2  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10150                           
 10151                           ;main.c: 169:         break;
 10152     16D3  2F02               	goto	i1l214
 10153     16D4                     i1l3873:
 10154                           
 10155                           ;main.c: 171:         SSPBUF = (unsigned char)(data >> 8);
 10156     16D4  0872               	movf	i2cwrite2byte@data+1,w
 10157     16D5  0024               	movlb	4	; select bank4
 10158     16D6  0091               	movwf	17	;volatile
 10159     16D7                     i1l3875:
 10160                           
 10161                           ;main.c: 172:         si3=4;
 10162     16D7  3004               	movlw	4
 10163     16D8  0021               	movlb	1	; select bank1
 10164     16D9  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10165                           
 10166                           ;main.c: 173:         break;
 10167     16DA  2F02               	goto	i1l214
 10168     16DB                     i1l3877:
 10169                           
 10170                           ;main.c: 175:         si3=5;
 10171     16DB  3005               	movlw	5
 10172     16DC  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10173     16DD                     i1l3879:
 10174                           
 10175                           ;main.c: 176:         SSPCON2bits.PEN = 1;
 10176     16DD  0024               	movlb	4	; select bank4
 10177     16DE  1516               	bsf	22,2	;volatile
 10178                           
 10179                           ;main.c: 177:         break;
 10180     16DF  2F02               	goto	i1l214
 10181     16E0                     i1l3881:
 10182                           
 10183                           ;main.c: 179:         si3=0;
 10184     16E0  01AF               	clrf	i2cwrite2byte@si3^(0+128)
 10185     16E1                     i1l3883:
 10186                           
 10187                           ;main.c: 180:         PIE1bits.SSPIE = 0;
 10188     16E1  1191               	bcf	17,3	;volatile
 10189     16E2                     i1l3885:
 10190                           
 10191                           ;main.c: 181:         endi2c=1;
 10192     16E2  01B7               	clrf	_endi2c^(0+128)
 10193     16E3  0AB7               	incf	_endi2c^(0+128),f
 10194                           
 10195                           ;main.c: 182:         break;
 10196     16E4  2F02               	goto	i1l214
 10197     16E5                     i1l3889:
 10198     16E5  0021               	movlb	1	; select bank1
 10199     16E6  082F               	movf	i2cwrite2byte@si3^(0+128),w
 10200     16E7  00F3               	movwf	??_i2cwrite2byte
 10201     16E8  01F4               	clrf	??_i2cwrite2byte+1
 10202                           
 10203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10204                           ; Switch size 1, requested type "simple"
 10205                           ; Number of cases is 1, Range of values is 0 to 0
 10206                           ; switch strategies available:
 10207                           ; Name         Instructions Cycles
 10208                           ; simple_byte            4     3 (average)
 10209                           ; direct_byte            8     6 (fixed)
 10210                           ; jumptable            260     6 (fixed)
 10211                           ;	Chosen strategy is simple_byte
 10212     16E9  0874               	movf	??_i2cwrite2byte+1,w
 10213     16EA  3A00               	xorlw	0	; case 0
 10214     16EB  1903               	skipnz
 10215     16EC  2EEE               	goto	i1l6775
 10216     16ED  2F02               	goto	i1l214
 10217     16EE                     i1l6775:
 10218                           
 10219                           ; Switch size 1, requested type "simple"
 10220                           ; Number of cases is 6, Range of values is 0 to 5
 10221                           ; switch strategies available:
 10222                           ; Name         Instructions Cycles
 10223                           ; direct_byte           18     6 (fixed)
 10224                           ; simple_byte           19    10 (average)
 10225                           ; jumptable            260     6 (fixed)
 10226                           ;	Chosen strategy is simple_byte
 10227     16EE  0873               	movf	??_i2cwrite2byte,w
 10228     16EF  3A00               	xorlw	0	; case 0
 10229     16F0  1903               	skipnz
 10230     16F1  2EBF               	goto	i1l3865
 10231     16F2  3A01               	xorlw	1	; case 1
 10232     16F3  1903               	skipnz
 10233     16F4  2EC6               	goto	i1l3869
 10234     16F5  3A03               	xorlw	3	; case 2
 10235     16F6  1903               	skipnz
 10236     16F7  2ECD               	goto	i1l3871
 10237     16F8  3A01               	xorlw	1	; case 3
 10238     16F9  1903               	skipnz
 10239     16FA  2ED4               	goto	i1l3873
 10240     16FB  3A07               	xorlw	7	; case 4
 10241     16FC  1903               	skipnz
 10242     16FD  2EDB               	goto	i1l3877
 10243     16FE  3A01               	xorlw	1	; case 5
 10244     16FF  1903               	skipnz
 10245     1700  2EE0               	goto	i1l3881
 10246     1701  2F02               	goto	i1l214
 10247     1702                     i1l214:
 10248     1702  0008               	return
 10249     1703                     __end_of_i2cwrite2byte:
 10250                           
 10251                           	psect	text31
 10252     0999                     __ptext31:	
 10253 ;; *************** function _i2creadbyte *****************
 10254 ;; Defined at:
 10255 ;;		line 217 in file "main.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  add             1    wreg     unsigned char 
 10258 ;;  dir             1    0[COMMON] unsigned char 
 10259 ;;  value           1    1[COMMON] PTR unsigned int 
 10260 ;;		 -> Lum(2), 
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;  add             1    5[COMMON] unsigned char 
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  2    0[COMMON] unsigned int 
 10265 ;; Registers used:
 10266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10267 ;; Tracked objects:
 10268 ;;		On entry : 0/0
 10269 ;;		On exit  : 0/0
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10272 ;;      Params:         2       0       0       0       0       0       0       0
 10273 ;;      Locals:         1       0       0       0       0       0       0       0
 10274 ;;      Temps:          3       0       0       0       0       0       0       0
 10275 ;;      Totals:         6       0       0       0       0       0       0       0
 10276 ;;Total ram usage:        6 bytes
 10277 ;; Hardware stack levels used: 1
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_INTERRUPT_InterruptManager
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285     0999                     _i2creadbyte:	
 10286                           ;psect for function _i2creadbyte
 10287                           
 10288                           
 10289                           ;incstack = 0
 10290                           ; Regs used in _i2creadbyte: [wreg-fsr1h+status,2+status,0]
 10291                           ;i2creadbyte@add stored from wreg
 10292     0999  00F5               	movwf	i2creadbyte@add
 10293     099A                     i1l3923:
 10294                           
 10295                           ;main.c: 218:    static char si2=0;;main.c: 219:     switch (si2){
 10296     099A  29F3               	goto	i1l3973
 10297     099B                     i1l3925:
 10298                           
 10299                           ;main.c: 221:         SSPBUF = add;
 10300     099B  0875               	movf	i2creadbyte@add,w
 10301     099C  0024               	movlb	4	; select bank4
 10302     099D  0091               	movwf	17	;volatile
 10303     099E                     i1l3927:
 10304                           
 10305                           ;main.c: 222:         si2=1;
 10306     099E  0021               	movlb	1	; select bank1
 10307     099F  01AD               	clrf	i2creadbyte@si2^(0+128)
 10308     09A0  0AAD               	incf	i2creadbyte@si2^(0+128),f
 10309                           
 10310                           ;main.c: 223:         break;
 10311     09A1  2A1C               	goto	i1l243
 10312     09A2                     i1l3929:
 10313                           
 10314                           ;main.c: 225:         SSPBUF = dir;
 10315     09A2  0870               	movf	i2creadbyte@dir,w
 10316     09A3  0024               	movlb	4	; select bank4
 10317     09A4  0091               	movwf	17	;volatile
 10318                           
 10319                           ;main.c: 226:         si2=2;
 10320     09A5  3002               	movlw	2
 10321     09A6  0021               	movlb	1	; select bank1
 10322     09A7  00AD               	movwf	i2creadbyte@si2^(0+128)
 10323                           
 10324                           ;main.c: 227:         break;
 10325     09A8  2A1C               	goto	i1l243
 10326     09A9                     i1l235:	
 10327                           ;main.c: 228:             case 2:
 10328                           
 10329                           
 10330                           ;main.c: 229:         SSPCON2bits.RSEN = 1;
 10331     09A9  0024               	movlb	4	; select bank4
 10332     09AA  1496               	bsf	22,1	;volatile
 10333     09AB                     i1l3931:
 10334                           
 10335                           ;main.c: 230:         si2=3;
 10336     09AB  3003               	movlw	3
 10337     09AC  0021               	movlb	1	; select bank1
 10338     09AD  00AD               	movwf	i2creadbyte@si2^(0+128)
 10339                           
 10340                           ;main.c: 231:         break;
 10341     09AE  2A1C               	goto	i1l243
 10342     09AF                     i1l3933:
 10343                           
 10344                           ;main.c: 233:         SSPBUF = add | 0x01;
 10345     09AF  0875               	movf	i2creadbyte@add,w
 10346     09B0  3801               	iorlw	1
 10347     09B1  0024               	movlb	4	; select bank4
 10348     09B2  0091               	movwf	17	;volatile
 10349     09B3                     i1l3935:
 10350                           
 10351                           ;main.c: 234:         si2=4;
 10352     09B3  3004               	movlw	4
 10353     09B4  0021               	movlb	1	; select bank1
 10354     09B5  00AD               	movwf	i2creadbyte@si2^(0+128)
 10355                           
 10356                           ;main.c: 235:         break;
 10357     09B6  2A1C               	goto	i1l243
 10358     09B7                     i1l3937:
 10359                           
 10360                           ;main.c: 237:         si2=5;
 10361     09B7  3005               	movlw	5
 10362     09B8  00AD               	movwf	i2creadbyte@si2^(0+128)
 10363     09B9                     i1l3939:
 10364                           
 10365                           ;main.c: 238:         SSPCON2bits.RCEN = 1;
 10366     09B9  0024               	movlb	4	; select bank4
 10367     09BA  1596               	bsf	22,3	;volatile
 10368                           
 10369                           ;main.c: 239:         break;
 10370     09BB  2A1C               	goto	i1l243
 10371     09BC                     i1l3941:
 10372                           
 10373                           ;main.c: 241:         *value = SSPBUF;
 10374     09BC  0024               	movlb	4	; select bank4
 10375     09BD  0811               	movf	17,w	;volatile
 10376     09BE  00F2               	movwf	??_i2creadbyte
 10377     09BF  01F3               	clrf	??_i2creadbyte+1
 10378     09C0  0871               	movf	i2creadbyte@value,w
 10379     09C1  0086               	movwf	6
 10380     09C2  0187               	clrf	7
 10381     09C3  0872               	movf	??_i2creadbyte,w
 10382     09C4  3FC0               	movwi [0]fsr1
 10383     09C5  0873               	movf	??_i2creadbyte+1,w
 10384     09C6  3FC1               	movwi [1]fsr1
 10385     09C7                     i1l3943:
 10386                           
 10387                           ;main.c: 242:         si2=6;
 10388     09C7  3006               	movlw	6
 10389     09C8  0021               	movlb	1	; select bank1
 10390     09C9  00AD               	movwf	i2creadbyte@si2^(0+128)
 10391     09CA                     i1l3945:
 10392                           
 10393                           ;main.c: 243:         SSPCON2bits.ACKDT = 0;
 10394     09CA  0024               	movlb	4	; select bank4
 10395     09CB  1296               	bcf	22,5	;volatile
 10396     09CC                     i1l3947:
 10397                           
 10398                           ;main.c: 244:         SSPCON2bits.ACKEN = 1;
 10399     09CC  1616               	bsf	22,4	;volatile
 10400                           
 10401                           ;main.c: 245:         break;
 10402     09CD  2A1C               	goto	i1l243
 10403     09CE                     i1l3949:
 10404                           
 10405                           ;main.c: 247:         si2=7;
 10406     09CE  3007               	movlw	7
 10407     09CF  00AD               	movwf	i2creadbyte@si2^(0+128)
 10408     09D0                     i1l3951:
 10409                           
 10410                           ;main.c: 248:         SSPCON2bits.RCEN = 1;
 10411     09D0  0024               	movlb	4	; select bank4
 10412     09D1  1596               	bsf	22,3	;volatile
 10413                           
 10414                           ;main.c: 249:         break;
 10415     09D2  2A1C               	goto	i1l243
 10416     09D3                     i1l3953:
 10417                           
 10418                           ;main.c: 251:         *value |= SSPBUF<<8;
 10419     09D3  0024               	movlb	4	; select bank4
 10420     09D4  0811               	movf	17,w	;volatile
 10421     09D5  00F2               	movwf	??_i2creadbyte
 10422     09D6  01F3               	clrf	??_i2creadbyte+1
 10423     09D7  0872               	movf	??_i2creadbyte,w
 10424     09D8  00F3               	movwf	??_i2creadbyte+1
 10425     09D9  01F2               	clrf	??_i2creadbyte
 10426     09DA  0871               	movf	i2creadbyte@value,w
 10427     09DB  0086               	movwf	6
 10428     09DC  0187               	clrf	7
 10429     09DD  0872               	movf	??_i2creadbyte,w
 10430     09DE  0481               	iorwf	1,f
 10431     09DF  3141               	addfsr 1,1
 10432     09E0  0873               	movf	??_i2creadbyte+1,w
 10433     09E1  0481               	iorwf	1,f
 10434     09E2                     i1l3955:
 10435                           
 10436                           ;main.c: 252:         si2=8;
 10437     09E2  3008               	movlw	8
 10438     09E3  0021               	movlb	1	; select bank1
 10439     09E4  00AD               	movwf	i2creadbyte@si2^(0+128)
 10440     09E5                     i1l3957:
 10441                           
 10442                           ;main.c: 253:         SSPCON2bits.ACKDT = 1;
 10443     09E5  0024               	movlb	4	; select bank4
 10444     09E6  1696               	bsf	22,5	;volatile
 10445     09E7                     i1l3959:
 10446                           
 10447                           ;main.c: 254:         SSPCON2bits.ACKEN = 1;
 10448     09E7  1616               	bsf	22,4	;volatile
 10449                           
 10450                           ;main.c: 255:         break;
 10451     09E8  2A1C               	goto	i1l243
 10452     09E9                     i1l3961:
 10453                           
 10454                           ;main.c: 257:         si2=9;
 10455     09E9  3009               	movlw	9
 10456     09EA  00AD               	movwf	i2creadbyte@si2^(0+128)
 10457     09EB                     i1l3963:
 10458                           
 10459                           ;main.c: 258:         SSPCON2bits.PEN = 1;
 10460     09EB  0024               	movlb	4	; select bank4
 10461     09EC  1516               	bsf	22,2	;volatile
 10462                           
 10463                           ;main.c: 259:         break;
 10464     09ED  2A1C               	goto	i1l243
 10465     09EE                     i1l3965:
 10466                           
 10467                           ;main.c: 261:         si2=0;
 10468     09EE  01AD               	clrf	i2creadbyte@si2^(0+128)
 10469     09EF                     i1l3967:
 10470                           
 10471                           ;main.c: 262:         PIE1bits.SSPIE = 0;
 10472     09EF  1191               	bcf	17,3	;volatile
 10473     09F0                     i1l3969:
 10474                           
 10475                           ;main.c: 263:         endi2c=1;
 10476     09F0  01B7               	clrf	_endi2c^(0+128)
 10477     09F1  0AB7               	incf	_endi2c^(0+128),f
 10478                           
 10479                           ;main.c: 264:         break;
 10480     09F2  2A1C               	goto	i1l243
 10481     09F3                     i1l3973:
 10482     09F3  0021               	movlb	1	; select bank1
 10483     09F4  082D               	movf	i2creadbyte@si2^(0+128),w
 10484     09F5  00F2               	movwf	??_i2creadbyte
 10485     09F6  01F3               	clrf	??_i2creadbyte+1
 10486                           
 10487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10488                           ; Switch size 1, requested type "simple"
 10489                           ; Number of cases is 1, Range of values is 0 to 0
 10490                           ; switch strategies available:
 10491                           ; Name         Instructions Cycles
 10492                           ; simple_byte            4     3 (average)
 10493                           ; direct_byte            8     6 (fixed)
 10494                           ; jumptable            260     6 (fixed)
 10495                           ;	Chosen strategy is simple_byte
 10496     09F7  0873               	movf	??_i2creadbyte+1,w
 10497     09F8  3A00               	xorlw	0	; case 0
 10498     09F9  1903               	skipnz
 10499     09FA  29FC               	goto	i1l6777
 10500     09FB  2A1C               	goto	i1l243
 10501     09FC                     i1l6777:
 10502                           
 10503                           ; Switch size 1, requested type "simple"
 10504                           ; Number of cases is 10, Range of values is 0 to 9
 10505                           ; switch strategies available:
 10506                           ; Name         Instructions Cycles
 10507                           ; direct_byte           26     6 (fixed)
 10508                           ; simple_byte           31    16 (average)
 10509                           ; jumptable            260     6 (fixed)
 10510                           ;	Chosen strategy is simple_byte
 10511     09FC  0872               	movf	??_i2creadbyte,w
 10512     09FD  3A00               	xorlw	0	; case 0
 10513     09FE  1903               	skipnz
 10514     09FF  299B               	goto	i1l3925
 10515     0A00  3A01               	xorlw	1	; case 1
 10516     0A01  1903               	skipnz
 10517     0A02  29A2               	goto	i1l3929
 10518     0A03  3A03               	xorlw	3	; case 2
 10519     0A04  1903               	skipnz
 10520     0A05  29A9               	goto	i1l235
 10521     0A06  3A01               	xorlw	1	; case 3
 10522     0A07  1903               	skipnz
 10523     0A08  29AF               	goto	i1l3933
 10524     0A09  3A07               	xorlw	7	; case 4
 10525     0A0A  1903               	skipnz
 10526     0A0B  29B7               	goto	i1l3937
 10527     0A0C  3A01               	xorlw	1	; case 5
 10528     0A0D  1903               	skipnz
 10529     0A0E  29BC               	goto	i1l3941
 10530     0A0F  3A03               	xorlw	3	; case 6
 10531     0A10  1903               	skipnz
 10532     0A11  29CE               	goto	i1l3949
 10533     0A12  3A01               	xorlw	1	; case 7
 10534     0A13  1903               	skipnz
 10535     0A14  29D3               	goto	i1l3953
 10536     0A15  3A0F               	xorlw	15	; case 8
 10537     0A16  1903               	skipnz
 10538     0A17  29E9               	goto	i1l3961
 10539     0A18  3A01               	xorlw	1	; case 9
 10540     0A19  1903               	skipnz
 10541     0A1A  29EE               	goto	i1l3965
 10542     0A1B  2A1C               	goto	i1l243
 10543     0A1C                     i1l243:
 10544     0A1C  0008               	return
 10545     0A1D                     __end_of_i2creadbyte:
 10546                           
 10547                           	psect	text32
 10548     0AC0                     __ptext32:	
 10549 ;; *************** function _i2cread3byte *****************
 10550 ;; Defined at:
 10551 ;;		line 268 in file "main.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  add             1    wreg     unsigned char 
 10554 ;;  dir             1    0[COMMON] unsigned char 
 10555 ;;  value           1    1[COMMON] PTR unsigned long 
 10556 ;;		 -> weight(4), 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  add             1    9[COMMON] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  4    0[COMMON] unsigned long 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10568 ;;      Params:         2       0       0       0       0       0       0       0
 10569 ;;      Locals:         1       0       0       0       0       0       0       0
 10570 ;;      Temps:          7       0       0       0       0       0       0       0
 10571 ;;      Totals:        10       0       0       0       0       0       0       0
 10572 ;;Total ram usage:       10 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; This function calls:
 10575 ;;		Nothing
 10576 ;; This function is called by:
 10577 ;;		_INTERRUPT_InterruptManager
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581     0AC0                     _i2cread3byte:	
 10582                           ;psect for function _i2cread3byte
 10583                           
 10584                           
 10585                           ;incstack = 0
 10586                           ; Regs used in _i2cread3byte: [wreg-fsr1h+status,2+status,0]
 10587                           ;i2cread3byte@add stored from wreg
 10588     0AC0  00F9               	movwf	i2cread3byte@add
 10589     0AC1                     i1l3979:
 10590                           
 10591                           ;main.c: 269:    static char si2=0;;main.c: 270:     switch (si2){
 10592     0AC1  2B4C               	goto	i1l4035
 10593     0AC2                     i1l3981:
 10594                           
 10595                           ;main.c: 272:         SSPBUF = add;
 10596     0AC2  0879               	movf	i2cread3byte@add,w
 10597     0AC3  0024               	movlb	4	; select bank4
 10598     0AC4  0091               	movwf	17	;volatile
 10599     0AC5                     i1l3983:
 10600                           
 10601                           ;main.c: 273:         si2=1;
 10602     0AC5  0021               	movlb	1	; select bank1
 10603     0AC6  01AC               	clrf	i2cread3byte@si2^(0+128)
 10604     0AC7  0AAC               	incf	i2cread3byte@si2^(0+128),f
 10605                           
 10606                           ;main.c: 274:         break;
 10607     0AC8  2B78               	goto	i1l261
 10608     0AC9                     i1l3985:
 10609                           
 10610                           ;main.c: 276:         SSPBUF = dir;
 10611     0AC9  0870               	movf	i2cread3byte@dir,w
 10612     0ACA  0024               	movlb	4	; select bank4
 10613     0ACB  0091               	movwf	17	;volatile
 10614                           
 10615                           ;main.c: 277:         si2=2;
 10616     0ACC  3002               	movlw	2
 10617     0ACD  0021               	movlb	1	; select bank1
 10618     0ACE  00AC               	movwf	i2cread3byte@si2^(0+128)
 10619                           
 10620                           ;main.c: 278:         break;
 10621     0ACF  2B78               	goto	i1l261
 10622     0AD0                     i1l252:	
 10623                           ;main.c: 279:             case 2:
 10624                           
 10625                           
 10626                           ;main.c: 280:         SSPCON2bits.RSEN = 1;
 10627     0AD0  0024               	movlb	4	; select bank4
 10628     0AD1  1496               	bsf	22,1	;volatile
 10629     0AD2                     i1l3987:
 10630                           
 10631                           ;main.c: 281:         si2=3;
 10632     0AD2  3003               	movlw	3
 10633     0AD3  0021               	movlb	1	; select bank1
 10634     0AD4  00AC               	movwf	i2cread3byte@si2^(0+128)
 10635                           
 10636                           ;main.c: 282:         break;
 10637     0AD5  2B78               	goto	i1l261
 10638     0AD6                     i1l3989:
 10639                           
 10640                           ;main.c: 284:         SSPBUF = add + 1 ;
 10641     0AD6  0879               	movf	i2cread3byte@add,w
 10642     0AD7  3E01               	addlw	1
 10643     0AD8  0024               	movlb	4	; select bank4
 10644     0AD9  0091               	movwf	17	;volatile
 10645     0ADA                     i1l3991:
 10646                           
 10647                           ;main.c: 285:         si2=4;
 10648     0ADA  3004               	movlw	4
 10649     0ADB  0021               	movlb	1	; select bank1
 10650     0ADC  00AC               	movwf	i2cread3byte@si2^(0+128)
 10651                           
 10652                           ;main.c: 286:         break;
 10653     0ADD  2B78               	goto	i1l261
 10654     0ADE                     i1l3993:
 10655                           
 10656                           ;main.c: 288:         si2=5;
 10657     0ADE  3005               	movlw	5
 10658     0ADF  00AC               	movwf	i2cread3byte@si2^(0+128)
 10659     0AE0                     i1l3995:
 10660                           
 10661                           ;main.c: 289:         SSPCON2bits.RCEN = 1;
 10662     0AE0  0024               	movlb	4	; select bank4
 10663     0AE1  1596               	bsf	22,3	;volatile
 10664                           
 10665                           ;main.c: 290:         break;
 10666     0AE2  2B78               	goto	i1l261
 10667     0AE3                     i1l3997:
 10668                           
 10669                           ;main.c: 292:         *value = SSPBUF <<16;
 10670     0AE3  0024               	movlb	4	; select bank4
 10671     0AE4  0811               	movf	17,w	;volatile
 10672     0AE5  00F2               	movwf	??_i2cread3byte
 10673     0AE6  01F3               	clrf	??_i2cread3byte+1
 10674     0AE7  01F4               	clrf	??_i2cread3byte+2
 10675     0AE8  01F5               	clrf	??_i2cread3byte+3
 10676     0AE9  0871               	movf	i2cread3byte@value,w
 10677     0AEA  0086               	movwf	6
 10678     0AEB  3001               	movlw	1	; select bank2/3
 10679     0AEC  0087               	movwf	7
 10680     0AED  0872               	movf	??_i2cread3byte,w
 10681     0AEE  3FC0               	movwi [0]fsr1
 10682     0AEF  0873               	movf	??_i2cread3byte+1,w
 10683     0AF0  3FC1               	movwi [1]fsr1
 10684     0AF1  0874               	movf	??_i2cread3byte+2,w
 10685     0AF2  3FC2               	movwi [2]fsr1
 10686     0AF3  0875               	movf	??_i2cread3byte+3,w
 10687     0AF4  3FC3               	movwi [3]fsr1
 10688     0AF5                     i1l3999:
 10689                           
 10690                           ;main.c: 293:         si2=6;
 10691     0AF5  3006               	movlw	6
 10692     0AF6  0021               	movlb	1	; select bank1
 10693     0AF7  00AC               	movwf	i2cread3byte@si2^(0+128)
 10694     0AF8                     i1l4001:
 10695                           
 10696                           ;main.c: 294:         SSPCON2bits.ACKDT = 0;
 10697     0AF8  0024               	movlb	4	; select bank4
 10698     0AF9  1296               	bcf	22,5	;volatile
 10699     0AFA                     i1l4003:
 10700                           
 10701                           ;main.c: 295:         SSPCON2bits.ACKEN = 1;
 10702     0AFA  1616               	bsf	22,4	;volatile
 10703                           
 10704                           ;main.c: 296:         break;
 10705     0AFB  2B78               	goto	i1l261
 10706     0AFC                     i1l4005:
 10707                           
 10708                           ;main.c: 298:         si2=7;
 10709     0AFC  3007               	movlw	7
 10710     0AFD  00AC               	movwf	i2cread3byte@si2^(0+128)
 10711     0AFE                     i1l4007:
 10712                           
 10713                           ;main.c: 299:         SSPCON2bits.RCEN = 1;
 10714     0AFE  0024               	movlb	4	; select bank4
 10715     0AFF  1596               	bsf	22,3	;volatile
 10716                           
 10717                           ;main.c: 300:         break;
 10718     0B00  2B78               	goto	i1l261
 10719     0B01                     i1l4009:
 10720                           
 10721                           ;main.c: 302:         *value |= SSPBUF<<8;
 10722     0B01  0024               	movlb	4	; select bank4
 10723     0B02  0811               	movf	17,w	;volatile
 10724     0B03  00F2               	movwf	??_i2cread3byte
 10725     0B04  01F3               	clrf	??_i2cread3byte+1
 10726     0B05  0872               	movf	??_i2cread3byte,w
 10727     0B06  00F3               	movwf	??_i2cread3byte+1
 10728     0B07  01F2               	clrf	??_i2cread3byte
 10729     0B08  0872               	movf	??_i2cread3byte,w
 10730     0B09  00F5               	movwf	??_i2cread3byte+3
 10731     0B0A  0873               	movf	??_i2cread3byte+1,w
 10732     0B0B  00F6               	movwf	??_i2cread3byte+4
 10733     0B0C  3000               	movlw	0
 10734     0B0D  1BF6               	btfsc	??_i2cread3byte+4,7
 10735     0B0E  30FF               	movlw	255
 10736     0B0F  00F7               	movwf	??_i2cread3byte+5
 10737     0B10  00F8               	movwf	??_i2cread3byte+6
 10738     0B11  0871               	movf	i2cread3byte@value,w
 10739     0B12  0086               	movwf	6
 10740     0B13  3001               	movlw	1	; select bank2/3
 10741     0B14  0087               	movwf	7
 10742     0B15  0875               	movf	??_i2cread3byte+3,w
 10743     0B16  0481               	iorwf	1,f
 10744     0B17  3141               	addfsr 1,1
 10745     0B18  0876               	movf	??_i2cread3byte+4,w
 10746     0B19  0481               	iorwf	1,f
 10747     0B1A  3141               	addfsr 1,1
 10748     0B1B  0877               	movf	??_i2cread3byte+5,w
 10749     0B1C  0481               	iorwf	1,f
 10750     0B1D  3141               	addfsr 1,1
 10751     0B1E  0878               	movf	??_i2cread3byte+6,w
 10752     0B1F  0481               	iorwf	1,f
 10753     0B20                     i1l4011:
 10754                           
 10755                           ;main.c: 303:         si2=8;
 10756     0B20  3008               	movlw	8
 10757     0B21  0021               	movlb	1	; select bank1
 10758     0B22  00AC               	movwf	i2cread3byte@si2^(0+128)
 10759     0B23                     i1l4013:
 10760                           
 10761                           ;main.c: 304:         SSPCON2bits.ACKDT = 0;
 10762     0B23  0024               	movlb	4	; select bank4
 10763     0B24  1296               	bcf	22,5	;volatile
 10764     0B25                     i1l4015:
 10765                           
 10766                           ;main.c: 305:         SSPCON2bits.ACKEN = 1;
 10767     0B25  1616               	bsf	22,4	;volatile
 10768                           
 10769                           ;main.c: 306:         break;
 10770     0B26  2B78               	goto	i1l261
 10771     0B27                     i1l4017:
 10772                           
 10773                           ;main.c: 308:         *value |= SSPBUF;
 10774     0B27  0024               	movlb	4	; select bank4
 10775     0B28  0811               	movf	17,w	;volatile
 10776     0B29  00F2               	movwf	??_i2cread3byte
 10777     0B2A  01F3               	clrf	??_i2cread3byte+1
 10778     0B2B  01F4               	clrf	??_i2cread3byte+2
 10779     0B2C  01F5               	clrf	??_i2cread3byte+3
 10780     0B2D  0871               	movf	i2cread3byte@value,w
 10781     0B2E  0086               	movwf	6
 10782     0B2F  3001               	movlw	1	; select bank2/3
 10783     0B30  0087               	movwf	7
 10784     0B31  0872               	movf	??_i2cread3byte,w
 10785     0B32  0481               	iorwf	1,f
 10786     0B33  3141               	addfsr 1,1
 10787     0B34  0873               	movf	??_i2cread3byte+1,w
 10788     0B35  0481               	iorwf	1,f
 10789     0B36  3141               	addfsr 1,1
 10790     0B37  0874               	movf	??_i2cread3byte+2,w
 10791     0B38  0481               	iorwf	1,f
 10792     0B39  3141               	addfsr 1,1
 10793     0B3A  0875               	movf	??_i2cread3byte+3,w
 10794     0B3B  0481               	iorwf	1,f
 10795     0B3C                     i1l4019:
 10796                           
 10797                           ;main.c: 309:         si2=9;
 10798     0B3C  3009               	movlw	9
 10799     0B3D  0021               	movlb	1	; select bank1
 10800     0B3E  00AC               	movwf	i2cread3byte@si2^(0+128)
 10801     0B3F                     i1l4021:
 10802                           
 10803                           ;main.c: 310:         SSPCON2bits.ACKDT = 1;
 10804     0B3F  0024               	movlb	4	; select bank4
 10805     0B40  1696               	bsf	22,5	;volatile
 10806     0B41                     i1l4023:
 10807                           
 10808                           ;main.c: 311:         SSPCON2bits.ACKEN = 1;
 10809     0B41  1616               	bsf	22,4	;volatile
 10810                           
 10811                           ;main.c: 312:         break;
 10812     0B42  2B78               	goto	i1l261
 10813     0B43                     i1l4025:
 10814                           
 10815                           ;main.c: 314:         si2=10;
 10816     0B43  300A               	movlw	10
 10817     0B44  00AC               	movwf	i2cread3byte@si2^(0+128)
 10818     0B45                     i1l4027:
 10819                           
 10820                           ;main.c: 315:         SSPCON2bits.PEN = 1;
 10821     0B45  0024               	movlb	4	; select bank4
 10822     0B46  1516               	bsf	22,2	;volatile
 10823                           
 10824                           ;main.c: 316:         break;
 10825     0B47  2B78               	goto	i1l261
 10826     0B48                     i1l4029:
 10827                           
 10828                           ;main.c: 319:         si2=0;
 10829     0B48  01AC               	clrf	i2cread3byte@si2^(0+128)
 10830     0B49                     i1l4031:
 10831                           
 10832                           ;main.c: 320:         endi2c=2;
 10833     0B49  3002               	movlw	2
 10834     0B4A  00B7               	movwf	_endi2c^(0+128)
 10835                           
 10836                           ;main.c: 321:         break;
 10837     0B4B  2B78               	goto	i1l261
 10838     0B4C                     i1l4035:
 10839     0B4C  0021               	movlb	1	; select bank1
 10840     0B4D  082C               	movf	i2cread3byte@si2^(0+128),w
 10841     0B4E  00F2               	movwf	??_i2cread3byte
 10842     0B4F  01F3               	clrf	??_i2cread3byte+1
 10843                           
 10844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10845                           ; Switch size 1, requested type "simple"
 10846                           ; Number of cases is 1, Range of values is 0 to 0
 10847                           ; switch strategies available:
 10848                           ; Name         Instructions Cycles
 10849                           ; simple_byte            4     3 (average)
 10850                           ; direct_byte            8     6 (fixed)
 10851                           ; jumptable            260     6 (fixed)
 10852                           ;	Chosen strategy is simple_byte
 10853     0B50  0873               	movf	??_i2cread3byte+1,w
 10854     0B51  3A00               	xorlw	0	; case 0
 10855     0B52  1903               	skipnz
 10856     0B53  2B55               	goto	i1l6779
 10857     0B54  2B78               	goto	i1l261
 10858     0B55                     i1l6779:
 10859                           
 10860                           ; Switch size 1, requested type "simple"
 10861                           ; Number of cases is 11, Range of values is 0 to 10
 10862                           ; switch strategies available:
 10863                           ; Name         Instructions Cycles
 10864                           ; direct_byte           28     6 (fixed)
 10865                           ; simple_byte           34    18 (average)
 10866                           ; jumptable            260     6 (fixed)
 10867                           ;	Chosen strategy is simple_byte
 10868     0B55  0872               	movf	??_i2cread3byte,w
 10869     0B56  3A00               	xorlw	0	; case 0
 10870     0B57  1903               	skipnz
 10871     0B58  2AC2               	goto	i1l3981
 10872     0B59  3A01               	xorlw	1	; case 1
 10873     0B5A  1903               	skipnz
 10874     0B5B  2AC9               	goto	i1l3985
 10875     0B5C  3A03               	xorlw	3	; case 2
 10876     0B5D  1903               	skipnz
 10877     0B5E  2AD0               	goto	i1l252
 10878     0B5F  3A01               	xorlw	1	; case 3
 10879     0B60  1903               	skipnz
 10880     0B61  2AD6               	goto	i1l3989
 10881     0B62  3A07               	xorlw	7	; case 4
 10882     0B63  1903               	skipnz
 10883     0B64  2ADE               	goto	i1l3993
 10884     0B65  3A01               	xorlw	1	; case 5
 10885     0B66  1903               	skipnz
 10886     0B67  2AE3               	goto	i1l3997
 10887     0B68  3A03               	xorlw	3	; case 6
 10888     0B69  1903               	skipnz
 10889     0B6A  2AFC               	goto	i1l4005
 10890     0B6B  3A01               	xorlw	1	; case 7
 10891     0B6C  1903               	skipnz
 10892     0B6D  2B01               	goto	i1l4009
 10893     0B6E  3A0F               	xorlw	15	; case 8
 10894     0B6F  1903               	skipnz
 10895     0B70  2B27               	goto	i1l4017
 10896     0B71  3A01               	xorlw	1	; case 9
 10897     0B72  1903               	skipnz
 10898     0B73  2B43               	goto	i1l4025
 10899     0B74  3A03               	xorlw	3	; case 10
 10900     0B75  1903               	skipnz
 10901     0B76  2B48               	goto	i1l4029
 10902     0B77  2B78               	goto	i1l261
 10903     0B78                     i1l261:
 10904     0B78  0008               	return
 10905     0B79                     __end_of_i2cread3byte:
 10906                           
 10907                           	psect	text33
 10908     156E                     __ptext33:	
 10909 ;; *************** function _TXsend *****************
 10910 ;; Defined at:
 10911 ;;		line 714 in file "main.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  word            2    0[COMMON] PTR unsigned char 
 10914 ;;		 -> sport(10), LOAD_CELL(16), VEML7700(13), DS18B(12), 
 10915 ;;		 -> COM(4), DHTS(23), 
 10916 ;;  size            1    2[COMMON] unsigned char 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10928 ;;      Params:         3       0       0       0       0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0       0
 10930 ;;      Temps:          2       0       0       0       0       0       0       0
 10931 ;;      Totals:         5       0       0       0       0       0       0       0
 10932 ;;Total ram usage:        5 bytes
 10933 ;; Hardware stack levels used: 1
 10934 ;; This function calls:
 10935 ;;		Nothing
 10936 ;; This function is called by:
 10937 ;;		_INTERRUPT_InterruptManager
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941     156E                     _TXsend:	
 10942                           ;psect for function _TXsend
 10943                           
 10944     156E                     i1l5727:	
 10945                           ;incstack = 0
 10946                           ; Regs used in _TXsend: [wreg+fsr1l+fsr1h+status,2+status,0]
 10947                           
 10948                           
 10949                           ;main.c: 715:     static unsigned char i=0;;main.c: 716:     if(i==0){
 10950     156E  087D               	movf	TXsend@i,w
 10951     156F  1D03               	btfss	3,2
 10952     1570  2D72               	goto	u451_21
 10953     1571  2D73               	goto	u451_20
 10954     1572                     u451_21:
 10955     1572  2D84               	goto	i1l5733
 10956     1573                     u451_20:
 10957     1573                     i1l5729:
 10958                           
 10959                           ;main.c: 718:        TXREG=word[i];
 10960     1573  087D               	movf	TXsend@i,w
 10961     1574  00F3               	movwf	??_TXsend
 10962     1575  01F4               	clrf	??_TXsend+1
 10963     1576  0873               	movf	??_TXsend,w
 10964     1577  0770               	addwf	TXsend@word,w
 10965     1578  0086               	movwf	6
 10966     1579  0874               	movf	??_TXsend+1,w
 10967     157A  3D71               	addwfc	TXsend@word+1,w
 10968     157B  0087               	movwf	7
 10969     157C  0801               	movf	1,w
 10970     157D  0023               	movlb	3	; select bank3
 10971     157E  009A               	movwf	26	;volatile
 10972     157F                     i1l5731:
 10973                           
 10974                           ;main.c: 719:        i++;
 10975     157F  3001               	movlw	1
 10976     1580  00F3               	movwf	??_TXsend
 10977     1581  0873               	movf	??_TXsend,w
 10978     1582  07FD               	addwf	TXsend@i,f
 10979                           
 10980                           ;main.c: 720:     }
 10981     1583  2D9B               	goto	i1l372
 10982     1584                     i1l5733:
 10983     1584  087D               	movf	TXsend@i,w
 10984     1585  1903               	btfsc	3,2
 10985     1586  2D88               	goto	u452_21
 10986     1587  2D89               	goto	u452_20
 10987     1588                     u452_21:
 10988     1588  2D90               	goto	i1l5741
 10989     1589                     u452_20:
 10990     1589                     i1l5735:
 10991     1589  0872               	movf	TXsend@size,w
 10992     158A  027D               	subwf	TXsend@i,w
 10993     158B  1803               	skipnc
 10994     158C  2D8E               	goto	u453_21
 10995     158D  2D8F               	goto	u453_20
 10996     158E                     u453_21:
 10997     158E  2D90               	goto	i1l5741
 10998     158F                     u453_20:
 10999     158F  2D73               	goto	i1l5729
 11000     1590                     i1l5741:
 11001     1590  0872               	movf	TXsend@size,w
 11002     1591  027D               	subwf	TXsend@i,w
 11003     1592  1C03               	skipc
 11004     1593  2D95               	goto	u454_21
 11005     1594  2D96               	goto	u454_20
 11006     1595                     u454_21:
 11007     1595  2D9B               	goto	i1l372
 11008     1596                     u454_20:
 11009     1596                     i1l5743:
 11010                           
 11011                           ;main.c: 725:         i=0;
 11012     1596  01FD               	clrf	TXsend@i
 11013     1597                     i1l5745:
 11014                           
 11015                           ;main.c: 726:         cs=cs+1;
 11016     1597  0021               	movlb	1	; select bank1
 11017     1598  083B               	movf	_cs^(0+128),w
 11018     1599  3E01               	addlw	1
 11019     159A  00BB               	movwf	_cs^(0+128)
 11020     159B                     i1l372:
 11021     159B  0008               	return
 11022     159C                     __end_of_TXsend:
 11023     007E                     btemp	set	126	;btemp
 11024     007E                     int$flags	set	126
 11025     007E                     wtemp0	set	126
 11026                           
 11027                           	psect	idloc
 11028                           
 11029                           ;Config register IDLOC0 @ 0x8000
 11030                           ;	unspecified, using default values
 11031     8000                     	org	32768
 11032     8000  3FFF               	dw	16383
 11033                           
 11034                           ;Config register IDLOC1 @ 0x8001
 11035                           ;	unspecified, using default values
 11036     8001                     	org	32769
 11037     8001  3FFF               	dw	16383
 11038                           
 11039                           ;Config register IDLOC2 @ 0x8002
 11040                           ;	unspecified, using default values
 11041     8002                     	org	32770
 11042     8002  3FFF               	dw	16383
 11043                           
 11044                           ;Config register IDLOC3 @ 0x8003
 11045                           ;	unspecified, using default values
 11046     8003                     	org	32771
 11047     8003  3FFF               	dw	16383
 11048                           
 11049                           	psect	config
 11050                           
 11051                           ;Config register CONFIG1 @ 0x8007
 11052                           ;	Oscillator Selection
 11053                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11054                           ;	Watchdog Timer Enable
 11055                           ;	WDTE = ON, WDT enabled
 11056                           ;	Power-up Timer Enable
 11057                           ;	PWRTE = OFF, PWRT disabled
 11058                           ;	MCLR Pin Function Select
 11059                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11060                           ;	Flash Program Memory Code Protection
 11061                           ;	CP = OFF, Program memory code protection is disabled
 11062                           ;	Data Memory Code Protection
 11063                           ;	CPD = OFF, Data memory code protection is disabled
 11064                           ;	Brown-out Reset Enable
 11065                           ;	BOREN = OFF, Brown-out Reset disabled
 11066                           ;	Clock Out Enable
 11067                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11068                           ;	Internal/External Switchover
 11069                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11070                           ;	Fail-Safe Clock Monitor Enable
 11071                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11072     8007                     	org	32775
 11073     8007  39FC               	dw	14844
 11074                           
 11075                           ;Config register CONFIG2 @ 0x8008
 11076                           ;	Flash Memory Self-Write Protection
 11077                           ;	WRT = OFF, Write protection off
 11078                           ;	Voltage Regulator Capacitor Enable
 11079                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 11080                           ;	PLL Enable
 11081                           ;	PLLEN = ON, 4x PLL enabled
 11082                           ;	Stack Overflow/Underflow Reset Enable
 11083                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11084                           ;	Brown-out Reset Voltage Selection
 11085                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11086                           ;	Low-Voltage Programming Enable
 11087                           ;	LVP = ON, Low-voltage programming enabled
 11088     8008                     	org	32776
 11089     8008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        70
    BSS         116
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      79
    BANK1            80     31      80
    BANK2            80      0      80
    BANK3            80      0      55
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    DS18B20_Read@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATC(SFR2[1]), LATA(SFR2[1]), 

    DS18B20_Read@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTA(SFR0[1]), 

    DS18B20_Read@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR1[1]), TRISA(SFR1[1]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1048$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> KG(BANK2[8]), LUX(BANK2[5]), TEMPDS(BANK2[4]), humar(BANK2[4]), 
		 -> tempar(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1000$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S1000$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    OW_read_byte@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_read_byte@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    OW_read_byte@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_write_byte@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_write_byte@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_read_bit@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    OW_read_bit@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_read_bit@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_write_bit@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_write_bit@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_reset_pulse@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    OW_reset_pulse@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_reset_pulse@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    read_OW@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    read_OW@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    DHT22READ@COM	PTR unsigned char  size(1) Largest target is 4
		 -> COM(BANK1[4]), 

    DHT22READ@dhtresult	PTR unsigned char  size(1) Largest target is 4
		 -> dhtresult(BANK2[4]), 

    TXsend@word	PTR unsigned char  size(2) Largest target is 23
		 -> sport(BANK1[10]), LOAD_CELL(BANK2[16]), VEML7700(BANK2[13]), DS18B(BANK2[12]), 
		 -> COM(BANK1[4]), DHTS(BANK3[23]), 

    port_config@stype	PTR unsigned char  size(1) Largest target is 10
		 -> sport(BANK1[10]), 

    i2cread3byte@value	PTR unsigned long  size(1) Largest target is 4
		 -> weight(BANK2[4]), 

    i2creadbyte@value	PTR unsigned int  size(1) Largest target is 2
		 -> Lum(BANK1[2]), 

    DHTRESULT@COM	PTR unsigned char  size(1) Largest target is 4
		 -> COM(BANK1[4]), 

    DHTRESULT@dht	PTR unsigned char  size(1) Largest target is 4
		 -> dhtresult(BANK2[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2cread3byte

Critical Paths under _main in BANK0

    _main->_DHTRESULT
    _main->_DS18B20_Read
    _Sys_Init->_Reg_init
    _OW_write_byte->_OW_write_bit
    _OW_reset_pulse->_read_OW
    _OW_read_byte->_OW_read_bit
    _OW_read_bit->_read_OW
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->___lodiv
    _pad->_fputs
    _fputs->_fputc
    _DHT22READ->_read_byte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DHTRESULT
    _main->_DS18B20_Read
    _i2c_Read->_sprintf
    _DS18B20_Read->_sprintf
    _DHTRESULT->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38567
                                             27 BANK1      4     4      0
                          _DHTRESULT
                       _DS18B20_Read
                           _Sys_Init
                           _i2c_Read
                        _port_config
 ---------------------------------------------------------------------------------
 (1) _port_config                                          2     2      0     286
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_Read                                             7     7      0    6950
                                             74 BANK0      2     2      0
                                             19 BANK1      5     5      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Sys_Init                                             0     0      0       0
                           _Pin_init
                           _Reg_init
 ---------------------------------------------------------------------------------
 (2) _Reg_init                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS18B20_Read                                        13     5      8   17840
                                             74 BANK0      5     5      0
                                             19 BANK1      8     0      8
                       _OW_read_byte
                     _OW_reset_pulse
                      _OW_write_byte
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _OW_write_byte                                        8     3      5    2072
                                              7 BANK0      8     3      5
                       _OW_write_bit
 ---------------------------------------------------------------------------------
 (3) _OW_write_bit                                         7     2      5     797
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (2) _OW_reset_pulse                                       9     2      7    2259
                                              7 BANK0      8     1      7
                            _read_OW
 ---------------------------------------------------------------------------------
 (2) _OW_read_byte                                        10     3      7    2391
                                             16 BANK0     10     3      7
                        _OW_read_bit
 ---------------------------------------------------------------------------------
 (3) _OW_read_bit                                          9     2      7    1439
                                              7 BANK0      9     2      7
                            _read_OW
 ---------------------------------------------------------------------------------
 (3) _read_OW                                              7     2      5     704
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _DHTRESULT                                           13     8      5   13200
                                             74 BANK0      5     5      0
                                             19 BANK1      8     3      5
                          _DHT22READ
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    13      8    6628
                                              0 BANK1     19    11      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    5672
                                             67 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    20      2    5265
                                             50 BANK0     17    15      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3752
                                             26 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2425
                                             15 BANK0      9     6      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1123
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     412
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     421
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _DHT22READ                                            6     1      5    2020
                                              6 BANK0      6     1      5
                     _check_response
                          _read_byte
                       _start_signal
 ---------------------------------------------------------------------------------
 (3) _start_signal                                         3     2      1     230
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _read_byte                                            6     5      1     553
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _check_response                                       3     1      2     439
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0    2516
                                             10 COMMON     2     2      0
                             _TXsend
                       _i2cread3byte
                        _i2creadbyte
                      _i2cwrite2byte
                       _i2cwritebyte
 ---------------------------------------------------------------------------------
 (11) _i2cwritebyte                                        5     3      2     674
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (11) _i2cwrite2byte                                       6     3      3     392
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (11) _i2creadbyte                                         6     4      2     262
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (11) _i2cread3byte                                       10     8      2     284
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (11) _TXsend                                              5     2      3     904
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHTRESULT
     _DHT22READ
       _check_response
       _read_byte
       _start_signal
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
   _DS18B20_Read
     _OW_read_byte
       _OW_read_bit
         _read_OW
     _OW_reset_pulse
       _read_OW
     _OW_write_byte
       _OW_write_bit
     _sprintf
   _Sys_Init
     _Pin_init
     _Reg_init
   _i2c_Read
     _sprintf
   _port_config

 _INTERRUPT_InterruptManager (ROOT)
   _TXsend
   _i2cread3byte
   _i2creadbyte
   _i2cwrite2byte
   _i2cwritebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     134       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1F      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      37      12       68.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     134      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Nov 13 23:55:54 2022

                   DS18B20_Read@LAT 00E4                     DS18B20_Read@PIN 00E6  
                                _KG 0153                                  _cs 00BB  
                  DS18B20_Read@PORT 00E2                    DS18B20_Read@TRIS 00E0  
                       i2c_Read@com 00E0                                 l302 02CC  
                               l311 0313                                 l303 02E6  
                               l308 02EE                                 l184 0E94  
                               l192 0FFF                                 l280 0C81  
                               l273 0DFE                                 l186 0EE4  
                               l522 07F5                                 l290 0CF4  
                               l282 0C98                                 l604 17AA  
                               l516 1479                                 l292 0D0B  
                               l284 0CAF                                 l276 0C54  
                               l613 1492                                 l621 08C5  
                               l286 0CC6                                 l278 0C6A  
                               l543 16BC                                 l519 15CB  
                               l295 0D20                                 l560 17D9  
                               l624 167B                                 l616 0927  
                               l288 0CDD                                 l553 17FF  
                               l635 1542                                 l629 14CE  
                               l595 1743                                 l587 1720  
                               l597 1756                                 l589 174B  
                               _COM 00EC                                 _RA0 0060  
                               _RA1 0061                                 _RA2 0062  
                               _RB0 0068                                 _RA3 0063  
                               _RB1 0069                                 _RB2 006A  
                               _RA4 0064                                 _RC0 0070  
                               _RC1 0071                                 _RB3 006B  
                               _RA5 0065                                 _RC2 0072  
                               _RA6 0066                                 _RB4 006C  
                               _RB5 006D                                 _RA7 0067  
                               _RC5 0075                                 _RB7 006F  
                               _LUX 015B                                 _Lum 00CB  
               __end_of_OW_read_bit 167C                                 _pad 15CC  
                 i2cwrite2byte@data 0071                                 wreg 0009  
                              l1025 07EE                                l1018 07DE  
                              l1035 0998                                l1028 0988  
                              l1300 14AE                                l1312 086C  
                              l1320 14F3                                l1323 0003  
                              l1272 1600                                l1248 1518  
                              l1268 15D9                                l1284 0C43  
                              l1293 0ABF                                l1278 0B99  
                              l4201 0D12                                l4203 0D1D  
                              l4205 07EF                                l3511 17E2  
                              l4151 0C56                                l3521 17ED  
                              l3513 17E7                                l3505 17DA  
                              l4161 0C7C                                l4153 0C5B  
                              l6001 0505                                l3523 17EE  
                              l4171 0C9F                                l4163 0C83  
                              l4155 0C65                                l4147 0C46  
                              l6011 0515                                l6003 0507  
                              l3525 17F4                                l3509 17DC  
                              l3541 1706                                l3461 168D  
                              l5301 096A                                l4181 0CC8  
                              l4173 0CAA                                l4165 0C88  
                              l4157 0C6C                                l4149 0C4F  
                              l6101 05EE                                l6021 0521  
                              l6013 051A                                l6005 0509  
                              l3527 17F9                                l3471 17AD  
                              l3543 170B                                l3463 1696  
                              l5303 097A                                l5311 15DC  
                              l3711 1462                                l4191 0CEF  
                              l4183 0CCD                                l4175 0CB1  
                              l4167 0C93                                l4159 0C71  
                              l6111 05FE                                l6103 05F0  
                              l6031 0536                                l6023 0523  
                              l6015 051B                                l6007 050B  
                              l3481 17BB                                l3473 17AF  
                              l3561 1721                                l3553 1712  
                              l3465 16A0                                l3457 167E  
                              l3641 1771                                l5313 15E6  
                              l5305 15CE                                l5321 0B8B  
                              l5401 086F                                l3721 146F  
                              l3713 1466                                l4193 0CF6  
                              l4185 0CD8                                l4177 0CB6  
                              l4169 0C9A                                l6201 06D6  
                              l6121 060A                                l6113 0603  
                              l6105 05F2                                l6041 0566  
                              l6033 0543                                l6017 051D  
                              l6009 050F                                l6025 0527  
                              l3491 17C7                                l3483 17C0  
                              l3475 17B0                                l3571 173D  
                              l3563 1727                                l3555 1718  
                              l3539 1705                                l3467 16AA  
                              l3459 1683                                l3643 17A3  
                              l3635 1759                                l5251 0830  
                              l5243 0816                                l5315 15EB  
                              l5307 15D2                                l5331 0BBD  
                              l5323 0B91                                l5411 0898  
                              l5403 0874                                l3731 1477  
                              l3723 1470                                l3715 1469  
                              l4195 0CFB                                l4187 0CDF  
                              l4179 0CC1                                l6211 06E9  
                              l6203 06D8                                l6131 061F  
                              l6123 060C                                l6115 0604  
                              l6107 05F4                                l6051 0579  
                              l6043 056B                                l6035 0548  
                              l6027 052B                                l6019 051F  
                              l3493 17C8                                l3485 17C5  
                              l3581 1755                                l3573 1744  
                              l3557 1719                                l3565 1735  
                              l3549 170D                                l3469 16B3  
                              l3637 176A                                l5253 084E  
                              l5245 081C                                l5261 14D4  
                              l5317 15F9                                l5309 15D7  
                              l5341 0C1E                                l5333 0BE2  
                              l5325 0BA1                                l5421 08C1  
                              l5405 0884                                l5413 089D  
                              l3733 1478                                l3725 1472  
                              l3717 146B                                l3741 15AD  
                              l4197 0D06                                l4189 0CE4  
                              l6221 06F2                                l6213 06EA  
                              l6205 06DA                                l6141 064F  
                              l6133 062C                                l6117 0606  
                              l6109 05F8                                l6125 0610  
                              l6061 0589                                l6053 057B  
                              l6045 0571                                l6037 054E  
                              l6029 0531                                ?_pad 002F  
                              l3495 17CE                                l3479 17B5  
                              l3567 173B                                l3559 171A  
                              l3639 176F                                l5271 0782  
                              l5255 0863                                l5247 0821  
                              l5263 14E0                                l5343 0C2A  
                              l5335 0BE6                                l5327 0BB5  
                              l5319 0B7B                                l5351 147A  
                              l5431 1662                                l5423 163D  
                              l5511 153B                                l5503 151C  
                              l5415 08AD                                l5407 0887  
                              l3727 1473                                l3719 146D  
                              l3751 15BD                                l3743 15B4  
                              l3735 159C                                l4199 0D0D  
                              l6231 0712                                l6215 06EC  
                              l6207 06DE                                l6223 06F6  
                              l6151 0662                                l6143 0654  
                              l6135 0631                                l6127 0614  
                              l6119 0608                                l6071 0595  
                              l6063 058E                                l6055 057D  
                              l6047 0576                                l6039 0553  
                              l3497 17D3                                l3577 174F  
                              l3569 173C                                l5281 079D  
                              l5273 0785                                l5249 0826  
                              l5265 14E5                                l5345 0C37  
                              l5337 0BEA                                l5329 0BB8  
                              l5441 1495                                l5521 0E37  
                              l5353 1483                                l5433 1665  
                              l5425 164E                                l5513 1541  
                              l5505 151E                                l5417 08B0  
                              l5409 0890                                l5601 0FEE  
                              l3729 1475                                l3753 15BE  
                              l3745 15B6                                l3737 159F  
                              l6241 073A                                l6233 0717  
                              l6225 06FA                                l6217 06EE  
                              l6209 06E4                                l6161 0672  
                              l6153 0664                                l6145 065A  
                              l6137 0637                                l6129 061A  
                              l6081 05AA                                l6073 0597  
                              l6065 058F                                l6057 057F  
                              l6049 0577                                l3579 1755  
                              l5283 07BF                                l5275 078D  
                              l5267 076B                                l5291 0935  
                              l5259 14D1                                l5339 0C17  
                              l5371 0A45                                l5363 0A1F  
                              l5443 149A                                l5451 14F4  
                              l5523 0E57                                l5355 148D  
                              l5435 1675                                l5427 1651  
                              l5507 1534                                l5419 08B9  
                              l5611 0FF8                                l5603 0FF1  
                              l3755 15C7                                l3747 15B8  
                              l3739 15A0                                l6251 074A  
                              l6243 0740                                l6235 071D  
                              l6227 0700                                l6219 06F0  
                              l6171 067E                                l6163 0677  
                              l6155 0666                                l6147 065F  
                              l6139 063C                                l6091 05DB  
                              l6083 05B8                                l6067 0591  
                              l6059 0583                                l6075 059B  
                              l5285 07CF                                l5277 0791  
                              l5269 0776                                l5293 0938  
                              l5373 0A4D                                l5365 0A30  
                              l5445 14A2                                l5453 14FB  
                              l5541 0EA7                                l5533 0E82  
                              l5525 0E6B                                l5517 0E01  
                              l5357 1490                                l5349 147A  
                              l5437 1679                                l5429 165A  
                              l5509 1536                                l5613 0FF9  
                              l5605 0FF3                                l3757 15C9  
                              l3749 15BB                                l5701 0DE3  
                              l5621 0D23                                l6261 075C  
                              l6253 074C                                l6245 0745  
                              l6237 0722                                l6229 0705  
                              l6181 0693                                l6173 0680  
                              l6165 0678                                l6157 0668  
                              l6149 0660                                l6093 05E0  
                              l6085 05BD                                l6077 059F  
                              l6069 0593                                l5287 07D0  
                              l5279 0795                                l5295 0940  
                              l5375 0A57                                l5367 0A38  
                              l5391 0AA7                                l5447 14AC  
                              l5455 14FD                                l5551 0EDA  
                              l5543 0EB6                                l5535 0E8D  
                              l5527 0E7F                                l5519 0E19  
                              l5359 1491                                l5471 08FC  
                              l5463 08C6                                l5615 0FFA  
                              l5607 0FF5                                l5711 0DF0  
                              l5703 0DE7                                l5623 0D28  
                              l5631 0D3A                                l6263 075E  
                              l6247 0746                                l6255 0750  
                              l6239 0735                                l6191 06C3  
                              l6183 06A0                                l6167 067A  
                              l6159 066C                                l6175 0684  
                              l6095 05E6                                l6087 05C3  
                              l6079 05A5                                l5297 0944  
                              l5289 0928                                l5385 0A8C  
                              l5377 0A69                                l5369 0A41  
                              l5457 14FF                                l5561 0EE0  
                              l5553 0EDB                                l5545 0ED6  
                              l5537 0E9D                                l5473 090A  
                              l5465 08D7                                l5617 0FFB  
                              l5609 0FF7                                l5721 0DFB  
                              l5713 0DF2                                l5705 0DEA  
                              l5633 0D3F                                l5625 0D34  
                              l6265 0760                                l6257 0756  
                              l6249 0748                                l6193 06C8  
                              l6185 06A5                                l6177 0688  
                              l6169 067C                                l6097 05EB  
                              l6089 05C8                                l5801 031C  
                              l5299 0948                                l5379 0A77  
                              l5387 0A9D                                l5459 150C  
                              l5563 0EE3                                l5555 0EDD  
                              l5547 0ED8                                l5539 0EA3  
                              l5475 0910                                l5467 08DF  
                              l5491 14C1                                l5483 14B1  
                              l5619 0FFE                                l5571 0F3C  
                              l5723 0DFC                                l5715 0DF4  
                              l5707 0DEC                                l5651 0D7B  
                              l5643 0D56                                l5635 0D44  
                              l5627 0D36                                l6267 0762  
                              l6259 075B                                l6195 06CE  
                              l6187 06AB                                l6179 068E  
                              l6099 05EC                                l5811 0331  
                              l5803 0321                                l5557 0EDE  
                              l5549 0ED9                                l5477 0916  
                              l5469 08F8                                l5493 14C4  
                              l5581 0FA0                                l5573 0F4D  
                              l5565 0EE5                                l5725 0DFD  
                              l5717 0DF6                                l5709 0DEE  
                              l5661 0D88                                l5653 0D7F  
                              l5645 0D61                                l5637 0D53  
                              l5629 0D38                                l6269 0764  
                              l6197 06D3                                l6189 06B0  
                              l5901 041D                                l5821 0348  
                              l5813 033D                                l5805 0322  
                              l5559 0EDF                                l5479 091F  
                              l5495 14C8                                l5591 0FC7  
                              l5583 0FB4                                l5575 0F5E  
                              l5567 0F1B                                l5719 0DF8  
                              l5671 0D8E                                l5663 0D8A  
                              l5655 0D82                                l5647 0D68  
                              l6199 06D4                                l5911 042D  
                              l5903 041F                                l5831 0365  
                              l5823 034C                                l5807 0327  
                              l5815 033F                                l5751 02A3  
                              l5497 1519                                l5489 14B2  
                              l5593 0FD2                                l5585 0FC4  
                              l5577 0F61                                l5569 0F28  
                              l5673 0D8F                                l5665 0D8B  
                              l5657 0D84                                l5649 0D6C  
                              l5681 0D95                                l5921 0439  
                              l5913 0432                                l5905 0421  
                              l5841 0396                                l5833 0373  
                              l5825 0351                                l5817 0344  
                              l5809 032D                                l5761 02B4  
                              l5595 0FD9                                l5579 0F7F  
                              l5683 0D9A                                l5675 0D92  
                              l5667 0D8C                                l5659 0D86  
                              l5931 044E                                l5923 043B  
                              l5915 0433                                l5907 0423  
                              l5851 03A9                                l5843 039B  
                              l5827 0357                                l5835 0378  
                              l5819 0345                                l5771 02D6  
                              l5763 02B5                                l5747 029D  
                              l5597 0FDD                                l5693 0DBE  
                              l5685 0DA0                                l5677 0D93  
                              l5669 0D8D                                l5941 047E  
                              l5933 045B                                l5917 0435  
                              l5909 0427                                l5925 043F  
                              l5861 03B9                                l5853 03AB  
                              l5845 03A1                                l5837 037E  
                              l5829 035C                                l5773 02DA  
                              l5765 02BD                                l5757 02A4  
                              l5749 02A0                                l5599 0FEA  
                              l5695 0DC9                                l5687 0DBB  
                              l5679 0D94                                l5951 0491  
                              l5943 0483                                l5935 0460  
                              l5927 0443                                l5919 0437  
                              l5871 03C5                                l5863 03BE  
                              l5855 03AD                                l5847 03A6  
                              l5839 0383                                l5791 030E  
                              l5783 02F3                                l5775 02E7  
                              l5767 02C8                                l5759 02AE  
                              l5697 0DD0                                l5961 04A1  
                              l5953 0493                                l5945 0489  
                              l5937 0466                                l5929 0449  
                              l5881 03DA                                l5873 03C7  
                              l5865 03BF                                l5857 03AF  
                              l5849 03A7                                l5793 0312  
                              l5785 02FE                                l5777 02ED  
                              l5769 02D0                                l6763 0A98  
                              l5699 0DD4                                l5971 04AD  
                              l5963 04A6                                l5955 0495  
                              l5947 048E                                l5939 046B  
                              l5891 040A                                l5883 03E7  
                              l5867 03C1                                l5859 03B3  
                              l5875 03CB                                l5795 0316  
                              l5787 0306                                l5981 04C2  
                              l5973 04AF                                l5965 04A7  
                              l5957 0497                                l5949 048F  
                              l5893 040F                                l5885 03EC  
                              l5877 03CF                                l5869 03C3  
                              l5797 031A                                l5789 030C  
                              l5991 04F2                                l5983 04CF  
                              l5967 04A9                                l5959 049B  
                              l5975 04B3                                l5895 0415  
                              l5887 03F2                                l5879 03D5  
                              l5799 031B                                l5993 04F7  
                              l5985 04D4                                l5977 04B7  
                              l5969 04AB                                l5897 041A  
                              l5889 03F7                                l5995 04FD  
                              l5987 04DA                                l5979 04BD  
                              l5899 041B                                l5997 0502  
                              l5989 04DF                                l5999 0503  
                              STR_1 1800                                STR_2 1800  
                              STR_3 1800                                STR_4 1800  
                              STR_5 1800                                _DHTS 01C0  
                              u2300 17B5                                u2301 17B4  
                              _LATA 010C                                u2310 17BB  
                              _LATB 010D                                u2311 17BA  
                              _LATC 010E                                u2400 17F4  
                              u2320 17C0                                u2401 17F3  
                              u2321 17BF                                u2410 17F9  
                              u2330 17C5                                u2411 17F8  
                              u2331 17C4                                u2420 17FE  
                              u2340 17CE                                u2500 174A  
                              u4100 0821                                u2421 17FD  
                              u2341 17CD                                u2501 1749  
                              u4101 0820                                u2350 17D3  
                              u2510 1755                                u2430 1712  
                              u4110 0830                                u2351 17D2  
                              u2511 1754                                u2431 1711  
                              u4111 082F                                u2360 17D8  
                              u2440 1718                                u4200 0948  
                              u4120 084E                                u5000 0531  
                              u2361 17D7                                u2441 1717  
                              u4201 0947                                u4121 084D  
                              u5001 0530                                u2370 17E2  
                              u2450 1720                                u2290 1683  
                              u4210 096A                                u4130 14F3  
                              u5010 0536                                u2371 17E1  
                              u2451 171F                                u2291 1682  
                              u4211 0969                                u4131 14F2  
                              u5011 0535                                u2380 17E7  
                              u2460 1727                                u2540 176F  
                              u4140 0773                                u4220 0988  
                              u4300 0A30                                u5100 05AA  
                              u5020 054E                                u2381 17E6  
                              u2461 1726                                u2541 176E  
                              u4221 0987                                u4125 084A  
                              u4301 0A2F                                u5101 05A9  
                              u5021 054D                                u2390 17EC  
                              u4150 0782                                u4230 15D2  
                              u4310 0A57                                u5110 05C3  
                              u5030 0553                                u2391 17EB  
                              u4151 0781                                u4215 0966  
                              u4231 15D1                                u4311 0A56  
                              u5111 05C2                                u5031 0552  
                              u2480 173B                                u4160 0795  
                              u4240 15F9                                u4320 0874  
                              u4400 0FD2                                u2800 0D06  
                              u2720 0C4F                                u5200 0637  
                              u5120 05C8                                u5040 0571  
                              u2481 173A                                u4161 0794  
                              u4241 15F8                                u4321 0873  
                              u4401 0FD1                                u2801 0D05  
                              u2721 0C4E                                u5201 0636  
                              u5121 05C7                                u5041 0570  
                              u2490 1743                                u2474 172E  
                              u4170 07BF                                u4090 081C  
                              u4250 0B8B                                u4330 14AC  
                              u4410 0FEA                                u2810 0D1D  
                              u2730 0C65                                u5210 063C  
                              u5130 05E6                                u5050 0576  
                              u2491 1742                                u2475 172D  
                              u4171 07BE                                u4091 081B  
                              u4251 0B8A                                u4331 14AB  
                              u4411 0FE9                                u2811 0D1C  
                              u2731 0C64                                u5211 063B  
                              u5131 05E5                                u5051 0575  
                              u4180 07DE                                u4260 0C1E  
                              u4340 14CE                                u4500 0DE3  
                              u4420 0D28                                u2740 0C7C  
                              u5300 06B0                                u5220 065A  
                              u5140 05EB                                u5060 0589  
                              u4181 07DD                                u4245 15F5  
                              u4261 0C1D                                u4341 14CD  
                              u4501 0DE2                                u4421 0D27  
                              u2741 0C7B                                u5301 06AF  
                              u5221 0659                                u5141 05EA  
                              u5061 0588                                u4190 0935  
                              u4270 0C2A                                u4350 1534  
                              u4430 0D3F                                u2750 0C93  
                              u5310 06CE                                u5230 065F  
                              u5150 05FE                                u5070 058E  
                              u4175 07BB                                u4191 0934  
                              u4271 0C29                                u4255 0B87  
                              u4351 1533                                u4415 0FE6  
                              u4431 0D3E                                u2751 0C92  
                              u5311 06CD                                u5231 065E  
                              u5151 05FD                                u5071 058D  
                              u4280 0C37                                u4360 1541  
                              u4440 0D44                                u2760 0CAA  
                              u5400 0740                                u5320 06D3  
                              u5240 0672                                u5160 0603  
                              u5080 059F                                u4600 0321  
                              u4281 0C36                                u4361 1540  
                              u4505 0DDF                                u4441 0D43  
                              u2761 0CA9                                u5401 073F  
                              u5321 06D2                                u5241 0671  
                              u5161 0602                                u5081 059E  
                              u4601 0320                                u4370 0E8D  
                              u4290 148D                                u4450 0D61  
                              u2770 0CC1                                u5410 0745  
                              u5330 06E4                                u5250 0677  
                              u5170 0614                                u5090 05A5  
                              u4610 032D                                u4371 0E8C  
                              u4291 148C                                u4451 0D60  
                              u2771 0CC0                                u5411 0744  
                              u5331 06E3                                u5251 0676  
                              u5171 0613                                u5091 05A4  
                              u4611 032C                                u4380 0E9D  
                              u4460 0D7B                                u2780 0CD8  
                              u5420 0756                                u5340 06E9  
                              u5260 0688                                u5180 061A  
                              u4700 03B9                                u4620 0344  
                              u4285 0C33                                u4381 0E9C  
                              u4461 0D7A                                u2781 0CD7  
                              u5421 0755                                u5341 06E8  
                              u5261 0687                                u5181 0619  
                              u4701 03B8                                u4621 0343  
                              u4390 0EB6                                u4470 0D9A  
                              u2790 0CEF                                u5430 075B  
                              u5350 06FA                                u5270 068E  
                              u5190 061F                                u4710 03BE  
                              u4630 0351                                u4550 02C8  
                              u4391 0EB5                                u4471 0D99  
                              u2791 0CEE                                u5431 075A  
                              u5351 06F9                                u5271 068D  
                              u5191 061E                                u4711 03BD  
                              u4631 0350                                u4551 02C7  
                              u4480 0DA0                                u5360 0700  
                              u5280 0693                                u4800 0432  
                              u4720 03CF                                u4640 0357  
                              u4560 02D6                                u4481 0D9F  
                              u4465 0D77                                u5361 06FF  
                              u5281 0692                                u4801 0431  
                              u4721 03CE                                u4641 0356  
                              u4561 02D5                                u4490 0DC9  
                              u5370 0705                                u5290 06AB  
                              u4810 0443                                u4730 03D5  
                              u4650 035C                                u4570 02ED  
                              u4395 0EB2                                u4491 0DC8  
                              u5371 0704                                u5291 06AA  
                              u4811 0442                                u4731 03D4  
                              u4651 035B                                u4571 02EC  
                              u5380 071D                                u4900 04B7  
                              u4820 0449                                u4740 03DA  
                              u4660 037E                                u4580 02F3  
                              _RCIF 008D                                u5381 071C  
                              u4901 04B6                                u4821 0448  
                              u4741 03D9                                u4661 037D  
                              u4581 02F2                   DS18B20_Read@entry 00E7  
                              u5390 0722                                u4910 04BD  
                              u4830 044E                                u4750 03F2  
                              u4670 0383                                u4590 0312  
                              u5391 0721                                u4911 04BC  
                              u4831 044D                                u4751 03F1  
                              u4671 0382                                u4591 0311  
                              u4920 04C2                                u4840 0466  
                              u4760 03F7                                u4680 03A1  
                              u4921 04C1                                u4841 0465  
                              u4761 03F6                                u4681 03A0  
                              u4930 04DA                                u4850 046B  
                              u4770 0415                                u4690 03A6  
                              u4931 04D9                                u4851 046A  
                              u4771 0414                                u4691 03A5  
                              u4940 04DF                                u4860 0489  
                              u4780 041A                                u4941 04DE  
                              u4861 0488                                u4781 0419  
                              u4950 04FD                                u4870 048E  
                              u4790 042D                                u4951 04FC  
                              u4871 048D                                u4791 042C  
                              u5807 0360                                u4960 0502  
                              u4880 04A1                                u5817 0D2E  
                              u4961 0501                                u4881 04A0  
                              u4970 0515                                u4890 04A6  
                              u5907 08F9                                u5827 15C2  
                              u4971 0514                                u4891 04A5  
                              u4980 051A                                u5917 090B  
                              u5837 0F21                                u4981 0519  
                              u4990 052B                                u5927 0911  
                              u5847 0885                                u4991 052A  
                              u5937 164F                                u5857 0899  
                              u5947 1663                                u5867 08AE  
                              u5787 02E0                                u5957 1676  
                              u5877 08C2                                u5797 0337  
                              u5967 1691                                u5887 08DB  
                              u5977 169D                                u5897 08E3  
                              u5987 16AE                                u5997 16BA  
                              _TMR2 001A                                _TXIF 008C  
                              _TOUT 00BA                                _WPUB 020D  
                              _WPUE 0210                      _check_response 17AB  
                              _Temp 00A4                                _dbuf 01A0  
                  read_OW@read_data 0026                                _main 029D  
              __end_of_OW_read_byte 1543                                _prec 00A0  
                              pad@i 0033                                pad@p 0030  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              pad@w 0035                        _start_signal 167C  
                              btemp 007E                                _utoa 0B79  
                      _DS18B20_Read 0EE5                                start 0259  
                             ??_pad 0032                       i2c_Read@j_361 00E3  
                        TXsend@size 0072                          TXsend@word 0070  
                             ?_main 0070                       ??_i2creadbyte 0072  
                             _DS18B 013F                               _EEADR 0191  
                             ?_utoa 003A                     __end_of___lodiv 07EF  
                             _T1CON 0018                               _T2CON 001C  
                   __end_of___lomod 0999                               i1l214 1702  
                             i1l226 163C                               i1l410 017D  
                             i1l235 09A9                               i1l243 0A1C  
                             i1l252 0AD0                               i1l261 0B78  
                             i1l450 0250                               i1l451 0257  
                             i1l419 014B                               i1l372 159B  
                             i1l385 00E0                               _RCREG 0199  
                             _RCSTA 019D                        vfpfcnvrt@fmt 0052  
                             _SPBRG 019B                               _PORTA 000C  
                             _PORTB 000D                               _PORTC 000E  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _TXREG 019A  
                             _TXSTA 019E                       ?_i2cread3byte 0070  
                             _i2cqt 00B3                               _debug 0151  
                             _flags 00A6                     __end_of_read_OW 1493  
                             _fputc 0816                               _fputs 14CF  
                             _humar 0164              __end_of_check_response 1800  
                             pad@fp 0037                               _width 014B  
                             _putch 0003                               main@i 00EB  
                             _sport 00BD                     i2cread3byte@add 0079  
                   i2cread3byte@si2 00AC                     i2cread3byte@dir 0070  
                 __end_of_DHT22READ 17AB                __end_of_OW_write_bit 08C6  
                             utoa@d 003A                               utoa@i 0050  
                             utoa@n 0048                               utoa@p 0046  
                             utoa@w 0044                               status 0003  
                             wtemp0 007E                     __end_of_sprintf 1519  
                  ___lodiv@dividend 0028                     __initialization 025B  
                 __end_of_DHTRESULT 0EE5                        __end_of_main 076B  
                  __end_of_i2c_Read 0DFF                        __end_of_utoa 0C44  
                       _OW_read_bit 163D         ?_INTERRUPT_InterruptManager 0070  
                  __end_of_Reg_init 15CC                              ??_main 00E8  
                  __end_of_Pin_init 147A                              ??_utoa 0042  
       INTERRUPT_InterruptManager@h 007C                      ??_i2cread3byte 0072  
                  ___lodiv@quotient 0031                      i2creadbyte@add 0075  
                    i2creadbyte@si2 00AD                      i2creadbyte@dir 0070  
               __end_of_i2creadbyte 0A1D                              ?_fputc 0020  
                            ?_fputs 0028                              _EEDATA 0193  
                            _EECON1 0195                              _EECON2 0196  
                   ?_check_response 0020                       ?_i2cwritebyte 0070  
                            _APFCON 011D                    __end_of_Sys_Init 07F6  
                            _ANSELA 018C                              ?_putch 0070  
                            _ANSELB 018D                              _BORCON 0116  
                            i1l4001 0AF8                              i1l4011 0B20  
                            i1l4003 0AFA                              i1l4021 0B3F  
                            i1l4013 0B23                              i1l4005 0AFC  
                            i1l4031 0B49                              i1l4023 0B41  
                            i1l4015 0B25                              i1l4007 0AFE  
                            i1l4025 0B43                              i1l4017 0B27  
                            i1l4009 0B01                              i1l4027 0B45  
                            i1l4019 0B3C                              i1l4035 0B4C  
                            i1l4029 0B48                              i1l3901 160A  
                            i1l6301 003C                              i1l3911 161E  
                            i1l3903 1611                              i1l6311 004C  
                            i1l6303 003D                              i1l3913 161F  
                            i1l3905 1618                              i1l6401 00FC  
                            i1l6321 0058                              i1l6313 004E  
                            i1l6305 0043                              i1l3931 09AB  
                            i1l3923 099A                              i1l3907 161A  
                            i1l6411 0121                              i1l6403 0101  
                            i1l6331 0069                              i1l6323 005E  
                            i1l6315 004F                              i1l6307 0045  
                            i1l3941 09BC                              i1l3933 09AF  
                            i1l3925 099B                              i1l3909 161D  
                            i1l3917 1622                              i1l6501 0240  
                            i1l6421 014C                              i1l6413 012B  
                            i1l6405 010B                              i1l6341 0079  
                            i1l6333 006A                              i1l6325 0060  
                            i1l6317 0055                              i1l6309 0046  
                            i1l3951 09D0                              i1l3943 09C7  
                            i1l3935 09B3                              i1l3927 099E  
                            i1l3871 16CD                              i1l3863 16BE  
                            i1l6511 024A                              i1l6503 0241  
                            i1l6423 0153                              i1l6415 0131  
                            i1l6407 0111                              i1l6351 0085  
                            i1l6343 007B                              i1l6335 0070  
                            i1l6327 0061                              i1l6319 0057  
                            i1l6271 0006                              i1l3961 09E9  
                            i1l3953 09D3                              i1l3945 09CA  
                            i1l3937 09B7                              i1l3929 09A2  
                            i1l3881 16E0                              i1l3873 16D4  
                            i1l3865 16BF                              i1l6513 0253  
                            i1l6505 0243                              i1l6441 0193  
                            i1l6425 015A                              i1l6417 013B  
                            i1l6409 011B                              i1l6433 0161  
                            i1l6361 0096                              i1l6353 008B  
                            i1l6345 007C                              i1l6337 0072  
                            i1l6329 0067                              i1l6281 0018  
                            i1l5731 157F                              i1l3963 09EB  
                            i1l3955 09E2                              i1l3947 09CC  
                            i1l3939 09B9                              i1l3883 16E1  
                            i1l3875 16D7                              i1l3867 16C2  
                            i1l6515 0255                              i1l6507 0244  
                            i1l6451 01B7                              i1l6435 0182  
                            i1l6427 015D                              i1l6419 0141  
                            i1l6371 00AE                              i1l6363 0098  
                            i1l6355 008D                              i1l6347 0082  
                            i1l6339 0073                              i1l6291 002C  
                            i1l6283 001A                              i1l6275 000C  
                            i1l5741 1590                              i1l5733 1584  
                            i1l3981 0AC2                              i1l3965 09EE  
                            i1l3957 09E5                              i1l3949 09CE  
                            i1l3973 09F3                              i1l3885 16E2  
                            i1l3877 16DB                              i1l3869 16C6  
                            i1l6517 0256                              i1l6461 01C9  
                            i1l6453 01BB                              i1l6445 019C  
                            i1l6509 0246                              i1l6429 015F  
                            i1l6381 00C4                              i1l6373 00B5  
                            i1l6365 009E                              i1l6357 008E  
                            i1l6349 0084                              i1l6293 002F  
                            i1l6285 0020                              i1l6277 000F  
                            i1l5743 1596                              i1l5735 1589  
                            i1l5727 156E                              i1l3991 0ADA  
                            i1l3983 0AC5                              i1l3967 09EF  
                            i1l3959 09E7                              i1l3879 16DD  
                            i1l3895 1602                              i1l6471 01DE  
                            i1l6463 01CB                              i1l6455 01BD  
                            i1l6447 01AC                              i1l6439 0189  
                            i1l6391 00E5                              i1l6383 00C6  
                            i1l6375 00B8                              i1l6367 00A5  
                            i1l6359 0094                              i1l6295 0030  
                            i1l6287 0025                              i1l6279 0015  
                            i1l5745 1597                              i1l5729 1573  
                            i1l3993 0ADE                              i1l3985 0AC9  
                            i1l3969 09F0                              i1l3889 16E5  
                            i1l3897 1603                              i1l6473 01E7  
                            i1l6449 01B2                              i1l6457 01BF  
                            i1l6465 01CD                              i1l6385 00C7  
                            i1l6377 00BA                              i1l6369 00AB  
                            i1l6297 0036                              i1l6289 0026  
                            i1l3995 0AE0                              i1l3987 0AD2  
                            i1l3979 0AC1                              i1l3899 1606  
                            i1l6491 0233                              i1l6475 01F0  
                            i1l6483 020B                              i1l6459 01C4  
                            i1l6395 00EB                              i1l6379 00C1  
                            i1l6299 003B                              i1l3997 0AE3  
                            i1l3989 0AD6                              i1l6493 0234  
                            i1l6477 01F9                              i1l6485 0227  
                            i1l6469 01D4                              i1l6397 00EE  
                            i1l6389 00C9                              i1l3999 0AF5  
                            i1l6495 023A                              i1l6487 022D  
                            i1l6479 0202                              i1l6399 00F2  
                            i1l6497 023C                              i1l6489 0231  
                            i1l6499 023E                              i1l6771 0213  
                            i1l6773 162B                              i1l6765 00D2  
                            i1l6775 16EE                              i1l6767 0169  
                            i1l6777 09FC                              i1l6769 01A4  
                            i1l6779 0B55                              _INTCON 000B  
                            u451_20 1573                              u451_21 1572  
                            u452_20 1589                              u452_21 1588  
                            u453_20 158F                              u453_21 158E  
                       read_OW@PORT 0022                              u454_20 1596  
                            u550_20 004C                              u454_21 1595  
                            u550_21 004B                              u551_20 0055  
                            u551_21 0054                              u560_20 00E5  
                            u552_20 005E                              u544_20 000B  
                            u560_21 00E4                              u552_21 005D  
                            u544_21 000A                         read_OW@TRIS 0020  
                            u561_20 00EA                              u553_20 0067  
                            u545_20 0015                              u561_21 00E9  
                            u553_21 0066                              u545_21 0014  
                            u570_20 01B7                              u562_20 0101  
                            u554_20 0070                              u546_20 0020  
                            _OSCCON 0099                              u570_21 01B6  
                            u562_21 0100                              u554_21 006F  
                            u546_21 001F                              u571_20 01C4  
                            u563_20 0111                              u555_20 0079  
                            u547_20 002C                              u571_21 01C3  
                            u563_21 0110                              u555_21 0078  
                            u547_21 002B                              u572_20 01C9  
                            u564_20 0121                              u556_20 0082  
                            u548_20 0036                              u572_21 01C8  
                            u564_21 0120                              u556_21 0081  
                            u548_21 0035                              u573_20 01D3  
                            u565_20 0131                              u557_20 008B  
                            u549_20 0043                              u573_21 01D2  
                            u565_21 0130                              u557_21 008A  
                            u549_21 0042                              u574_20 022D  
                            u566_20 0141                              u558_20 0094  
                            u574_21 022C                              u566_21 0140  
                            u558_21 0093                              u575_20 023A  
                            u567_20 0182                              u559_20 009E  
                            u575_21 0239                              u567_21 0181  
                            u559_21 009D                              u576_20 024A  
                            u568_20 0188                              u576_21 0249  
                            u568_21 0187                              _TEMPDS 0160  
                            u577_20 0250                              u569_20 01B2  
                            u577_21 024F                              u569_21 01B1  
                            _TMR2IF 0089                              _TMR2ON 00E2  
                            _WDTCON 0097                              _SSPADD 0212  
                            _SSPBUF 0211                  check_response@TOUT 0021  
                            _i2cena 00B4                              _TXsend 156E  
                            _i2busy 00B1                  check_response@port 0022  
                check_response@tris 0020                        vfprintf@cfmt 0068  
    INTERRUPT_InterruptManager@sspo 00A9                              _endi2c 00B7  
                         ??___lodiv 0030                           ??___lomod 0030  
                            _med_sl 00B8                              _tempar 00C7  
                            _weight 016C                              pad@buf 002F  
                            fputc@c 0020                           ??_read_OW 0025  
                            fputs@c 002C                              fputs@i 002D  
                            fputs@s 002B                              putch@c 0070  
                  __end_of_vfprintf 14AF               __end_of_OW_write_byte 14CF  
                    ??_i2cwritebyte 0072                              utoa@fp 0043  
                         ??_sprintf 006A             __end_of__initialization 0299  
                    _OW_reset_pulse 08C6                        ?_port_config 0070  
                    __pcstackCOMMON 0070                        __pidataBANK1 07FC  
                      __pidataBANK2 1543                        __pidataBANK3 144B  
                     _i2cwrite2byte 16BD                       __end_of_fputc 086D  
                     __end_of_fputs 14F4                       __end_of_putch 0004  
                      _OW_read_byte 1519                         _i2creadbyte 0999  
                           ??_fputc 0023                             ??_fputs 0029  
                           ??_putch 0020              __end_of_OW_reset_pulse 0928  
             OW_write_bit@write_bit 0026                           ?_i2c_Read 0070  
                        __pbssBANK1 00A0                          __pbssBANK2 014B  
                        __pbssBANK3 01A0                           ?_Reg_init 0070  
                         ?_Pin_init 0070                __end_of_i2cread3byte 0B79  
                           ?_TXsend 0070                          __pmaintext 029D  
                    ?_i2cwrite2byte 0070                          __pintentry 0004  
                           _BAUDCON 019F                           ?_Sys_Init 0070  
                 OW_reset_pulse@LAT 002B                   OW_reset_pulse@PIN 002D  
                      _OW_write_bit 086D                             _OSCTUNE 0098  
                           _SSPCON1 0215                             _SSPCON2 0216  
                   i2cwritebyte@add 0074                     i2cwritebyte@si3 00AE  
                   i2cwritebyte@dir 0070                             _SSPSTAT 0214  
                  ___lomod@dividend 0028                          ??_i2c_Read 006A  
                   ?_OW_reset_pulse 0027                    OW_read_byte@PORT 0032  
                           TXsend@i 007D                    OW_read_byte@TRIS 0030  
                        ??_Reg_init 0020                             _Lectura 00B9  
                           _i2cbgin 00B6                    OW_read_byte@loop 0039  
                         _DHT22READ 1757                          ??_Pin_init 0020  
              __end_of_i2cwritebyte 163D                             ___lodiv 076B  
                           ___lomod 0928                        ?_OW_read_bit 0027  
                         ?_vfprintf 0063                             _act_com 00B0  
                        ??_Sys_Init 0021                        DHT22READ@COM 002A  
                         _DHTRESULT 0DFF                             __ptext1 0C44  
                           __ptext2 0D21                             __ptext3 07EF  
                           __ptext4 159C                             __ptext5 1462  
                           __ptext6 0EE5                             __ptext7 14AF  
                           __ptext8 086D                             __ptext9 08C6  
                           _meddone 00A2                             _read_OW 147A  
                  ??_check_response 0022                   __end_of_read_byte 1757  
                           _sprintf 14F4                             clrloop0 0811  
                         _LOAD_CELL 0122                end_of_initialization 0299  
                        DHTRESULT@j 00E6                             fputc@fp 0022  
                           init_ram 07F6                             fputs@fp 0028  
                           initloop 07F7                   i2cread3byte@value 0071  
                        ?_DHT22READ 0026                     ??_i2cwrite2byte 0073  
                 __end_of_vfpfcnvrt 0AC0                    OW_write_bit@TRIS 0020  
                  vfpfcnvrt@convarg 0058                        read_byte@num 0023  
                        ??_vfprintf 0066                          ?_DHTRESULT 00E0  
                  OW_write_byte@LAT 0029                    OW_write_byte@PIN 002B  
                  port_config@stype 0021                       DS18B20_Read@j 006D  
                         i2c_Read@j 00E1                    i2cwrite2byte@add 0075  
                  i2cwrite2byte@si3 00AF                    i2cwrite2byte@dir 0070  
                    __end_of_TXsend 159C                         vfpfcnvrt@ap 0053  
                       vfpfcnvrt@cp 0061                         vfpfcnvrt@fp 0060  
                      ?_i2creadbyte 0070                 start_initialization 025B  
                   ___lodiv@divisor 0020                        _i2cread3byte 0AC0  
                   ___lodiv@counter 0039                         __end_of_pad 1601  
                         _i2cfinish 00B5                  OW_read_byte@result 0038  
                     ?_start_signal 0020                       ?_DS18B20_Read 00E0  
                        read_OW@PIN 0024                         ??_DHT22READ 002B  
              OW_read_bit@read_data 002F                       DHTRESULT@TOUT 00E2  
                          ??_TXsend 0073                   DHTRESULT@conector 00E1  
                       vfprintf@fmt 0063                       DHTRESULT@temp 014F  
                     DHTRESULT@port 00E5                       DHTRESULT@tris 00E0  
                       __pdataBANK1 00EC                         __pdataBANK2 0120  
                       __pdataBANK3 01C0                         ??_DHTRESULT 006A  
                        read_byte@i 0025                         __pbssCOMMON 007C  
                  ??_OW_reset_pulse 002E                           ___latbits 0002  
                     __pcstackBANK0 0020                       __pcstackBANK1 00CD  
                      _i2cwritebyte 1601                      ??_start_signal 0021  
                    ??_DS18B20_Read 006A                     OW_read_bit@PORT 0029  
                   OW_read_bit@TRIS 0027                            ?___lodiv 0020  
                          ?___lomod 0020                      DHT22READ@check 00A8  
                    DHT22READ@entry 0027        ??_INTERRUPT_InterruptManager 007A  
                         _dhtresult 0168                     ___lomod@divisor 0020  
                  i2creadbyte@value 0071                     OW_read_byte@LAT 0034  
                   ___lomod@counter 0031                     OW_read_byte@PIN 0036  
                          ?_read_OW 0020   INTERRUPT_InterruptManager@i2cstep 00AB  
                          ?_sprintf 00CD                  OW_reset_pulse@PORT 0029  
                OW_reset_pulse@TRIS 0027                       _OW_write_byte 14AF  
                         _read_byte 1703                           clear_ram0 0810  
                          _PIE1bits 0091                            _PIR1bits 0011  
                          _VEML7700 0132                     OW_write_bit@LAT 0022  
                   OW_write_bit@PIN 0024                           _vfpfcnvrt 0A1D  
                  i2cwritebyte@data 0071                           _port_save 00BC  
                         main@i_379 00EA                         _macro_delay 00A7  
                    ?_OW_write_byte 0027                          ?_read_byte 0020  
                          _i2c_Read 0D21                       ??_port_config 0020  
                          _Reg_init 159C                          _EECON1bits 0195  
                          _i2select 00B2                            _Pin_init 1462  
                      DHTRESULT@COM 00E4                        DHTRESULT@dht 00E3  
                        vfprintf@ap 0065                        DHTRESULT@hum 014D  
                        vfprintf@fp 0067               __end_of_i2cwrite2byte 1703  
     INTERRUPT_InterruptManager@plb 0120             OW_write_byte@write_data 002D  
                        ?_vfpfcnvrt 0052                            _Sys_Init 07EF  
              __end_of_start_signal 16BD                       ?_OW_read_byte 0030  
              __end_of_DS18B20_Read 1000                          sprintf@fmt 00CF  
                    OW_read_bit@LAT 002B                      OW_read_bit@PIN 002D  
                     DHT22READ@TOUT 0028                            __ptext10 1519  
                          __ptext11 163D                            __ptext20 0816  
                          __ptext12 147A                            __ptext21 0003  
                          __ptext13 0DFF                            __ptext30 16BD  
                          __ptext22 0928                            __ptext14 14F4  
                          __ptext31 0999                            __ptext23 076B  
                          __ptext15 1493                            __ptext32 0AC0  
                          __ptext24 1757                            __ptext16 0A1D  
                          __ptext33 156E                            __ptext25 167C  
                          __ptext17 0B79                            __ptext26 1703  
                          __ptext18 15CC                            __ptext27 17AB  
                          __ptext19 14CF                            __ptext29 1601  
                     DHT22READ@port 002B                       DHT22READ@tris 0026  
                DHT22READ@dhtresult 0029                 __end_of_port_config 0D21  
                          int$flags 007E                            _vfprintf 1493  
__end_of_INTERRUPT_InterruptManager 0259          _INTERRUPT_InterruptManager 0004  
                    ??_OW_read_byte 0037                       ?_OW_write_bit 0020  
                        _INTCONbits 000B                     ??_OW_write_byte 002C  
      INTERRUPT_InterruptManager@rp 00AA                         ??_read_byte 0021  
                          intlevel1 0000                    start_signal@port 0022  
                         sprintf@ap 00D5                    start_signal@tris 0020  
                     ??_OW_read_bit 002E                         ??_vfpfcnvrt 0054  
                    ??_OW_write_bit 0025                       read_byte@port 0024  
                     read_byte@tris 0020                       __pstringtext1 1800  
                     __pstringtext2 0000                            sprintf@f 00D6  
                          sprintf@s 00CD                         _SSPCON1bits 0215  
                       _SSPCON2bits 0216                          _STATUSbits 0003  
                 OW_write_byte@TRIS 0027                         _port_config 0C44  
                 OW_write_byte@loop 002E  
