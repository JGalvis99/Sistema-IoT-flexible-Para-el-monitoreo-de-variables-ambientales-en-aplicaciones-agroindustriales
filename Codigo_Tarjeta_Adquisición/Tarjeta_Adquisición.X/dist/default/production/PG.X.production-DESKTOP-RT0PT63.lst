

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 14 16:40:15 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59     0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F1936 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95     0000                     	;# 
    96     0001                     	;# 
    97     0002                     	;# 
    98     0003                     	;# 
    99     0004                     	;# 
   100     0005                     	;# 
   101     0006                     	;# 
   102     0007                     	;# 
   103     0008                     	;# 
   104     0009                     	;# 
   105     000A                     	;# 
   106     000B                     	;# 
   107     000C                     	;# 
   108     000D                     	;# 
   109     000E                     	;# 
   110     0010                     	;# 
   111     0011                     	;# 
   112     0012                     	;# 
   113     0013                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0016                     	;# 
   117     0017                     	;# 
   118     0018                     	;# 
   119     0019                     	;# 
   120     001A                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001E                     	;# 
   124     001F                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     0090                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     0110                     	;# 
   147     0111                     	;# 
   148     0112                     	;# 
   149     0113                     	;# 
   150     0114                     	;# 
   151     0115                     	;# 
   152     0116                     	;# 
   153     0117                     	;# 
   154     0118                     	;# 
   155     0119                     	;# 
   156     011A                     	;# 
   157     011B                     	;# 
   158     011D                     	;# 
   159     018C                     	;# 
   160     018D                     	;# 
   161     0191                     	;# 
   162     0191                     	;# 
   163     0192                     	;# 
   164     0193                     	;# 
   165     0193                     	;# 
   166     0193                     	;# 
   167     0194                     	;# 
   168     0195                     	;# 
   169     0196                     	;# 
   170     0199                     	;# 
   171     019A                     	;# 
   172     019B                     	;# 
   173     019B                     	;# 
   174     019B                     	;# 
   175     019B                     	;# 
   176     019C                     	;# 
   177     019C                     	;# 
   178     019D                     	;# 
   179     019E                     	;# 
   180     019F                     	;# 
   181     020D                     	;# 
   182     0210                     	;# 
   183     0211                     	;# 
   184     0212                     	;# 
   185     0213                     	;# 
   186     0214                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0216                     	;# 
   190     0217                     	;# 
   191     0291                     	;# 
   192     0291                     	;# 
   193     0292                     	;# 
   194     0293                     	;# 
   195     0294                     	;# 
   196     0295                     	;# 
   197     0295                     	;# 
   198     0296                     	;# 
   199     0298                     	;# 
   200     0298                     	;# 
   201     0299                     	;# 
   202     029A                     	;# 
   203     029B                     	;# 
   204     029C                     	;# 
   205     029C                     	;# 
   206     029D                     	;# 
   207     029E                     	;# 
   208     029F                     	;# 
   209     0311                     	;# 
   210     0311                     	;# 
   211     0312                     	;# 
   212     0313                     	;# 
   213     0314                     	;# 
   214     0315                     	;# 
   215     0315                     	;# 
   216     0316                     	;# 
   217     0318                     	;# 
   218     0318                     	;# 
   219     0319                     	;# 
   220     031A                     	;# 
   221     031C                     	;# 
   222     031C                     	;# 
   223     031D                     	;# 
   224     031E                     	;# 
   225     0394                     	;# 
   226     0395                     	;# 
   227     0396                     	;# 
   228     0415                     	;# 
   229     0416                     	;# 
   230     0417                     	;# 
   231     041C                     	;# 
   232     041D                     	;# 
   233     041E                     	;# 
   234     0791                     	;# 
   235     0792                     	;# 
   236     0793                     	;# 
   237     0794                     	;# 
   238     0795                     	;# 
   239     0798                     	;# 
   240     0799                     	;# 
   241     07A0                     	;# 
   242     07A1                     	;# 
   243     07A3                     	;# 
   244     07A4                     	;# 
   245     07A6                     	;# 
   246     07A7                     	;# 
   247     07A9                     	;# 
   248     07AA                     	;# 
   249     0FE4                     	;# 
   250     0FE5                     	;# 
   251     0FE6                     	;# 
   252     0FE7                     	;# 
   253     0FE8                     	;# 
   254     0FE9                     	;# 
   255     0FEA                     	;# 
   256     0FEB                     	;# 
   257     0FED                     	;# 
   258     0FEE                     	;# 
   259     0FEF                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     0010                     	;# 
   276     0011                     	;# 
   277     0012                     	;# 
   278     0013                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0016                     	;# 
   282     0017                     	;# 
   283     0018                     	;# 
   284     0019                     	;# 
   285     001A                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001E                     	;# 
   289     001F                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     008E                     	;# 
   293     0090                     	;# 
   294     0091                     	;# 
   295     0092                     	;# 
   296     0093                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     0110                     	;# 
   312     0111                     	;# 
   313     0112                     	;# 
   314     0113                     	;# 
   315     0114                     	;# 
   316     0115                     	;# 
   317     0116                     	;# 
   318     0117                     	;# 
   319     0118                     	;# 
   320     0119                     	;# 
   321     011A                     	;# 
   322     011B                     	;# 
   323     011D                     	;# 
   324     018C                     	;# 
   325     018D                     	;# 
   326     0191                     	;# 
   327     0191                     	;# 
   328     0192                     	;# 
   329     0193                     	;# 
   330     0193                     	;# 
   331     0193                     	;# 
   332     0194                     	;# 
   333     0195                     	;# 
   334     0196                     	;# 
   335     0199                     	;# 
   336     019A                     	;# 
   337     019B                     	;# 
   338     019B                     	;# 
   339     019B                     	;# 
   340     019B                     	;# 
   341     019C                     	;# 
   342     019C                     	;# 
   343     019D                     	;# 
   344     019E                     	;# 
   345     019F                     	;# 
   346     020D                     	;# 
   347     0210                     	;# 
   348     0211                     	;# 
   349     0212                     	;# 
   350     0213                     	;# 
   351     0214                     	;# 
   352     0215                     	;# 
   353     0215                     	;# 
   354     0216                     	;# 
   355     0217                     	;# 
   356     0291                     	;# 
   357     0291                     	;# 
   358     0292                     	;# 
   359     0293                     	;# 
   360     0294                     	;# 
   361     0295                     	;# 
   362     0295                     	;# 
   363     0296                     	;# 
   364     0298                     	;# 
   365     0298                     	;# 
   366     0299                     	;# 
   367     029A                     	;# 
   368     029B                     	;# 
   369     029C                     	;# 
   370     029C                     	;# 
   371     029D                     	;# 
   372     029E                     	;# 
   373     029F                     	;# 
   374     0311                     	;# 
   375     0311                     	;# 
   376     0312                     	;# 
   377     0313                     	;# 
   378     0314                     	;# 
   379     0315                     	;# 
   380     0315                     	;# 
   381     0316                     	;# 
   382     0318                     	;# 
   383     0318                     	;# 
   384     0319                     	;# 
   385     031A                     	;# 
   386     031C                     	;# 
   387     031C                     	;# 
   388     031D                     	;# 
   389     031E                     	;# 
   390     0394                     	;# 
   391     0395                     	;# 
   392     0396                     	;# 
   393     0415                     	;# 
   394     0416                     	;# 
   395     0417                     	;# 
   396     041C                     	;# 
   397     041D                     	;# 
   398     041E                     	;# 
   399     0791                     	;# 
   400     0792                     	;# 
   401     0793                     	;# 
   402     0794                     	;# 
   403     0795                     	;# 
   404     0798                     	;# 
   405     0799                     	;# 
   406     07A0                     	;# 
   407     07A1                     	;# 
   408     07A3                     	;# 
   409     07A4                     	;# 
   410     07A6                     	;# 
   411     07A7                     	;# 
   412     07A9                     	;# 
   413     07AA                     	;# 
   414     0FE4                     	;# 
   415     0FE5                     	;# 
   416     0FE6                     	;# 
   417     0FE7                     	;# 
   418     0FE8                     	;# 
   419     0FE9                     	;# 
   420     0FEA                     	;# 
   421     0FEB                     	;# 
   422     0FED                     	;# 
   423     0FEE                     	;# 
   424     0FEF                     	;# 
   425     0000                     	;# 
   426     0001                     	;# 
   427     0002                     	;# 
   428     0003                     	;# 
   429     0004                     	;# 
   430     0005                     	;# 
   431     0006                     	;# 
   432     0007                     	;# 
   433     0008                     	;# 
   434     0009                     	;# 
   435     000A                     	;# 
   436     000B                     	;# 
   437     000C                     	;# 
   438     000D                     	;# 
   439     000E                     	;# 
   440     0010                     	;# 
   441     0011                     	;# 
   442     0012                     	;# 
   443     0013                     	;# 
   444     0015                     	;# 
   445     0016                     	;# 
   446     0016                     	;# 
   447     0017                     	;# 
   448     0018                     	;# 
   449     0019                     	;# 
   450     001A                     	;# 
   451     001B                     	;# 
   452     001C                     	;# 
   453     001E                     	;# 
   454     001F                     	;# 
   455     008C                     	;# 
   456     008D                     	;# 
   457     008E                     	;# 
   458     0090                     	;# 
   459     0091                     	;# 
   460     0092                     	;# 
   461     0093                     	;# 
   462     0095                     	;# 
   463     0096                     	;# 
   464     0097                     	;# 
   465     0098                     	;# 
   466     0099                     	;# 
   467     009A                     	;# 
   468     009B                     	;# 
   469     009B                     	;# 
   470     009C                     	;# 
   471     009D                     	;# 
   472     009E                     	;# 
   473     010C                     	;# 
   474     010D                     	;# 
   475     010E                     	;# 
   476     0110                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     018C                     	;# 
   490     018D                     	;# 
   491     0191                     	;# 
   492     0191                     	;# 
   493     0192                     	;# 
   494     0193                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0194                     	;# 
   498     0195                     	;# 
   499     0196                     	;# 
   500     0199                     	;# 
   501     019A                     	;# 
   502     019B                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019C                     	;# 
   507     019C                     	;# 
   508     019D                     	;# 
   509     019E                     	;# 
   510     019F                     	;# 
   511     020D                     	;# 
   512     0210                     	;# 
   513     0211                     	;# 
   514     0212                     	;# 
   515     0213                     	;# 
   516     0214                     	;# 
   517     0215                     	;# 
   518     0215                     	;# 
   519     0216                     	;# 
   520     0217                     	;# 
   521     0291                     	;# 
   522     0291                     	;# 
   523     0292                     	;# 
   524     0293                     	;# 
   525     0294                     	;# 
   526     0295                     	;# 
   527     0295                     	;# 
   528     0296                     	;# 
   529     0298                     	;# 
   530     0298                     	;# 
   531     0299                     	;# 
   532     029A                     	;# 
   533     029B                     	;# 
   534     029C                     	;# 
   535     029C                     	;# 
   536     029D                     	;# 
   537     029E                     	;# 
   538     029F                     	;# 
   539     0311                     	;# 
   540     0311                     	;# 
   541     0312                     	;# 
   542     0313                     	;# 
   543     0314                     	;# 
   544     0315                     	;# 
   545     0315                     	;# 
   546     0316                     	;# 
   547     0318                     	;# 
   548     0318                     	;# 
   549     0319                     	;# 
   550     031A                     	;# 
   551     031C                     	;# 
   552     031C                     	;# 
   553     031D                     	;# 
   554     031E                     	;# 
   555     0394                     	;# 
   556     0395                     	;# 
   557     0396                     	;# 
   558     0415                     	;# 
   559     0416                     	;# 
   560     0417                     	;# 
   561     041C                     	;# 
   562     041D                     	;# 
   563     041E                     	;# 
   564     0791                     	;# 
   565     0792                     	;# 
   566     0793                     	;# 
   567     0794                     	;# 
   568     0795                     	;# 
   569     0798                     	;# 
   570     0799                     	;# 
   571     07A0                     	;# 
   572     07A1                     	;# 
   573     07A3                     	;# 
   574     07A4                     	;# 
   575     07A6                     	;# 
   576     07A7                     	;# 
   577     07A9                     	;# 
   578     07AA                     	;# 
   579     0FE4                     	;# 
   580     0FE5                     	;# 
   581     0FE6                     	;# 
   582     0FE7                     	;# 
   583     0FE8                     	;# 
   584     0FE9                     	;# 
   585     0FEA                     	;# 
   586     0FEB                     	;# 
   587     0FED                     	;# 
   588     0FEE                     	;# 
   589     0FEF                     	;# 
   590     0000                     	;# 
   591     0001                     	;# 
   592     0002                     	;# 
   593     0003                     	;# 
   594     0004                     	;# 
   595     0005                     	;# 
   596     0006                     	;# 
   597     0007                     	;# 
   598     0008                     	;# 
   599     0009                     	;# 
   600     000A                     	;# 
   601     000B                     	;# 
   602     000C                     	;# 
   603     000D                     	;# 
   604     000E                     	;# 
   605     0010                     	;# 
   606     0011                     	;# 
   607     0012                     	;# 
   608     0013                     	;# 
   609     0015                     	;# 
   610     0016                     	;# 
   611     0016                     	;# 
   612     0017                     	;# 
   613     0018                     	;# 
   614     0019                     	;# 
   615     001A                     	;# 
   616     001B                     	;# 
   617     001C                     	;# 
   618     001E                     	;# 
   619     001F                     	;# 
   620     008C                     	;# 
   621     008D                     	;# 
   622     008E                     	;# 
   623     0090                     	;# 
   624     0091                     	;# 
   625     0092                     	;# 
   626     0093                     	;# 
   627     0095                     	;# 
   628     0096                     	;# 
   629     0097                     	;# 
   630     0098                     	;# 
   631     0099                     	;# 
   632     009A                     	;# 
   633     009B                     	;# 
   634     009B                     	;# 
   635     009C                     	;# 
   636     009D                     	;# 
   637     009E                     	;# 
   638     010C                     	;# 
   639     010D                     	;# 
   640     010E                     	;# 
   641     0110                     	;# 
   642     0111                     	;# 
   643     0112                     	;# 
   644     0113                     	;# 
   645     0114                     	;# 
   646     0115                     	;# 
   647     0116                     	;# 
   648     0117                     	;# 
   649     0118                     	;# 
   650     0119                     	;# 
   651     011A                     	;# 
   652     011B                     	;# 
   653     011D                     	;# 
   654     018C                     	;# 
   655     018D                     	;# 
   656     0191                     	;# 
   657     0191                     	;# 
   658     0192                     	;# 
   659     0193                     	;# 
   660     0193                     	;# 
   661     0193                     	;# 
   662     0194                     	;# 
   663     0195                     	;# 
   664     0196                     	;# 
   665     0199                     	;# 
   666     019A                     	;# 
   667     019B                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019B                     	;# 
   671     019C                     	;# 
   672     019C                     	;# 
   673     019D                     	;# 
   674     019E                     	;# 
   675     019F                     	;# 
   676     020D                     	;# 
   677     0210                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0213                     	;# 
   681     0214                     	;# 
   682     0215                     	;# 
   683     0215                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0291                     	;# 
   687     0291                     	;# 
   688     0292                     	;# 
   689     0293                     	;# 
   690     0294                     	;# 
   691     0295                     	;# 
   692     0295                     	;# 
   693     0296                     	;# 
   694     0298                     	;# 
   695     0298                     	;# 
   696     0299                     	;# 
   697     029A                     	;# 
   698     029B                     	;# 
   699     029C                     	;# 
   700     029C                     	;# 
   701     029D                     	;# 
   702     029E                     	;# 
   703     029F                     	;# 
   704     0311                     	;# 
   705     0311                     	;# 
   706     0312                     	;# 
   707     0313                     	;# 
   708     0314                     	;# 
   709     0315                     	;# 
   710     0315                     	;# 
   711     0316                     	;# 
   712     0318                     	;# 
   713     0318                     	;# 
   714     0319                     	;# 
   715     031A                     	;# 
   716     031C                     	;# 
   717     031C                     	;# 
   718     031D                     	;# 
   719     031E                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     0415                     	;# 
   724     0416                     	;# 
   725     0417                     	;# 
   726     041C                     	;# 
   727     041D                     	;# 
   728     041E                     	;# 
   729     0791                     	;# 
   730     0792                     	;# 
   731     0793                     	;# 
   732     0794                     	;# 
   733     0795                     	;# 
   734     0798                     	;# 
   735     0799                     	;# 
   736     07A0                     	;# 
   737     07A1                     	;# 
   738     07A3                     	;# 
   739     07A4                     	;# 
   740     07A6                     	;# 
   741     07A7                     	;# 
   742     07A9                     	;# 
   743     07AA                     	;# 
   744     0FE4                     	;# 
   745     0FE5                     	;# 
   746     0FE6                     	;# 
   747     0FE7                     	;# 
   748     0FE8                     	;# 
   749     0FE9                     	;# 
   750     0FEA                     	;# 
   751     0FEB                     	;# 
   752     0FED                     	;# 
   753     0FEE                     	;# 
   754     0FEF                     	;# 
   755     0000                     	;# 
   756     0001                     	;# 
   757     0002                     	;# 
   758     0003                     	;# 
   759     0004                     	;# 
   760     0005                     	;# 
   761     0006                     	;# 
   762     0007                     	;# 
   763     0008                     	;# 
   764     0009                     	;# 
   765     000A                     	;# 
   766     000B                     	;# 
   767     000C                     	;# 
   768     000D                     	;# 
   769     000E                     	;# 
   770     0010                     	;# 
   771     0011                     	;# 
   772     0012                     	;# 
   773     0013                     	;# 
   774     0015                     	;# 
   775     0016                     	;# 
   776     0016                     	;# 
   777     0017                     	;# 
   778     0018                     	;# 
   779     0019                     	;# 
   780     001A                     	;# 
   781     001B                     	;# 
   782     001C                     	;# 
   783     001E                     	;# 
   784     001F                     	;# 
   785     008C                     	;# 
   786     008D                     	;# 
   787     008E                     	;# 
   788     0090                     	;# 
   789     0091                     	;# 
   790     0092                     	;# 
   791     0093                     	;# 
   792     0095                     	;# 
   793     0096                     	;# 
   794     0097                     	;# 
   795     0098                     	;# 
   796     0099                     	;# 
   797     009A                     	;# 
   798     009B                     	;# 
   799     009B                     	;# 
   800     009C                     	;# 
   801     009D                     	;# 
   802     009E                     	;# 
   803     010C                     	;# 
   804     010D                     	;# 
   805     010E                     	;# 
   806     0110                     	;# 
   807     0111                     	;# 
   808     0112                     	;# 
   809     0113                     	;# 
   810     0114                     	;# 
   811     0115                     	;# 
   812     0116                     	;# 
   813     0117                     	;# 
   814     0118                     	;# 
   815     0119                     	;# 
   816     011A                     	;# 
   817     011B                     	;# 
   818     011D                     	;# 
   819     018C                     	;# 
   820     018D                     	;# 
   821     0191                     	;# 
   822     0191                     	;# 
   823     0192                     	;# 
   824     0193                     	;# 
   825     0193                     	;# 
   826     0193                     	;# 
   827     0194                     	;# 
   828     0195                     	;# 
   829     0196                     	;# 
   830     0199                     	;# 
   831     019A                     	;# 
   832     019B                     	;# 
   833     019B                     	;# 
   834     019B                     	;# 
   835     019B                     	;# 
   836     019C                     	;# 
   837     019C                     	;# 
   838     019D                     	;# 
   839     019E                     	;# 
   840     019F                     	;# 
   841     020D                     	;# 
   842     0210                     	;# 
   843     0211                     	;# 
   844     0212                     	;# 
   845     0213                     	;# 
   846     0214                     	;# 
   847     0215                     	;# 
   848     0215                     	;# 
   849     0216                     	;# 
   850     0217                     	;# 
   851     0291                     	;# 
   852     0291                     	;# 
   853     0292                     	;# 
   854     0293                     	;# 
   855     0294                     	;# 
   856     0295                     	;# 
   857     0295                     	;# 
   858     0296                     	;# 
   859     0298                     	;# 
   860     0298                     	;# 
   861     0299                     	;# 
   862     029A                     	;# 
   863     029B                     	;# 
   864     029C                     	;# 
   865     029C                     	;# 
   866     029D                     	;# 
   867     029E                     	;# 
   868     029F                     	;# 
   869     0311                     	;# 
   870     0311                     	;# 
   871     0312                     	;# 
   872     0313                     	;# 
   873     0314                     	;# 
   874     0315                     	;# 
   875     0315                     	;# 
   876     0316                     	;# 
   877     0318                     	;# 
   878     0318                     	;# 
   879     0319                     	;# 
   880     031A                     	;# 
   881     031C                     	;# 
   882     031C                     	;# 
   883     031D                     	;# 
   884     031E                     	;# 
   885     0394                     	;# 
   886     0395                     	;# 
   887     0396                     	;# 
   888     0415                     	;# 
   889     0416                     	;# 
   890     0417                     	;# 
   891     041C                     	;# 
   892     041D                     	;# 
   893     041E                     	;# 
   894     0791                     	;# 
   895     0792                     	;# 
   896     0793                     	;# 
   897     0794                     	;# 
   898     0795                     	;# 
   899     0798                     	;# 
   900     0799                     	;# 
   901     07A0                     	;# 
   902     07A1                     	;# 
   903     07A3                     	;# 
   904     07A4                     	;# 
   905     07A6                     	;# 
   906     07A7                     	;# 
   907     07A9                     	;# 
   908     07AA                     	;# 
   909     0FE4                     	;# 
   910     0FE5                     	;# 
   911     0FE6                     	;# 
   912     0FE7                     	;# 
   913     0FE8                     	;# 
   914     0FE9                     	;# 
   915     0FEA                     	;# 
   916     0FEB                     	;# 
   917     0FED                     	;# 
   918     0FEE                     	;# 
   919     0FEF                     	;# 
   920                           
   921                           	psect	idataBANK1
   922     1401                     __pidataBANK1:
   923                           
   924                           ;initializer for _COM
   925     1401  3427               	retlw	39
   926     1402  3430               	retlw	48
   927     1403  3427               	retlw	39
   928     1404  343A               	retlw	58
   929                           
   930                           	psect	idataBANK2
   931     14A8                     __pidataBANK2:
   932                           
   933                           ;initializer for INTERRUPT_InterruptManager@plb
   934     14A8  344E               	retlw	78
   935     14A9  3400               	retlw	0
   936                           
   937                           ;initializer for _LOAD_CELL
   938     14AA  347B               	retlw	123
   939     14AB  3427               	retlw	39
   940     14AC  3477               	retlw	119
   941     14AD  3427               	retlw	39
   942     14AE  343A               	retlw	58
   943     14AF  3427               	retlw	39
   944     14B0  344E               	retlw	78
   945     14B1  344E               	retlw	78
   946     14B2  344E               	retlw	78
   947     14B3  344E               	retlw	78
   948     14B4  344E               	retlw	78
   949     14B5  344E               	retlw	78
   950     14B6  344E               	retlw	78
   951     14B7  344E               	retlw	78
   952     14B8  3427               	retlw	39
   953     14B9  347D               	retlw	125
   954                           
   955                           ;initializer for _VEML7700
   956     14BA  347B               	retlw	123
   957     14BB  3427               	retlw	39
   958     14BC  346C               	retlw	108
   959     14BD  3427               	retlw	39
   960     14BE  343A               	retlw	58
   961     14BF  3427               	retlw	39
   962     14C0  344E               	retlw	78
   963     14C1  344E               	retlw	78
   964     14C2  344E               	retlw	78
   965     14C3  344E               	retlw	78
   966     14C4  344E               	retlw	78
   967     14C5  3427               	retlw	39
   968     14C6  347D               	retlw	125
   969                           
   970                           ;initializer for _COM10
   971     14C7  3427               	retlw	39
   972     14C8  3431               	retlw	49
   973     14C9  3430               	retlw	48
   974     14CA  3427               	retlw	39
   975     14CB  343A               	retlw	58
   976                           
   977                           	psect	idataBANK3
   978     1485                     __pidataBANK3:
   979                           
   980                           ;initializer for _DHTS
   981     1485  347B               	retlw	123
   982     1486  3427               	retlw	39
   983     1487  3468               	retlw	104
   984     1488  3427               	retlw	39
   985     1489  343A               	retlw	58
   986     148A  3427               	retlw	39
   987     148B  344E               	retlw	78
   988     148C  344E               	retlw	78
   989     148D  344E               	retlw	78
   990     148E  344E               	retlw	78
   991     148F  3427               	retlw	39
   992     1490  342C               	retlw	44
   993     1491  3427               	retlw	39
   994     1492  3474               	retlw	116
   995     1493  3427               	retlw	39
   996     1494  343A               	retlw	58
   997     1495  3427               	retlw	39
   998     1496  344E               	retlw	78
   999     1497  344E               	retlw	78
  1000     1498  344E               	retlw	78
  1001     1499  344E               	retlw	78
  1002     149A  3427               	retlw	39
  1003     149B  347D               	retlw	125
  1004                           
  1005                           ;initializer for _DS18B
  1006     149C  347B               	retlw	123
  1007     149D  3427               	retlw	39
  1008     149E  3454               	retlw	84
  1009     149F  3427               	retlw	39
  1010     14A0  343A               	retlw	58
  1011     14A1  3427               	retlw	39
  1012     14A2  344E               	retlw	78
  1013     14A3  344E               	retlw	78
  1014     14A4  344E               	retlw	78
  1015     14A5  344E               	retlw	78
  1016     14A6  3427               	retlw	39
  1017     14A7  347D               	retlw	125
  1018     001C                     _T2CON	set	28
  1019     0018                     _T1CON	set	24
  1020     000B                     _INTCON	set	11
  1021     000D                     _PORTB	set	13
  1022     001A                     _TMR2	set	26
  1023     0011                     _PIR1bits	set	17
  1024     000B                     _INTCONbits	set	11
  1025     0003                     _STATUSbits	set	3
  1026     000E                     _PORTC	set	14
  1027     000C                     _PORTA	set	12
  1028     00E2                     _TMR2ON	set	226
  1029     0089                     _TMR2IF	set	137
  1030     008C                     _TXIF	set	140
  1031     008D                     _RCIF	set	141
  1032     0068                     _RB0	set	104
  1033     0065                     _RA5	set	101
  1034     006C                     _RB4	set	108
  1035     0067                     _RA7	set	103
  1036     006B                     _RB3	set	107
  1037     0066                     _RA6	set	102
  1038     006D                     _RB5	set	109
  1039     0070                     _RC0	set	112
  1040     0069                     _RB1	set	105
  1041     0064                     _RA4	set	100
  1042     006A                     _RB2	set	106
  1043     0063                     _RA3	set	99
  1044     0075                     _RC5	set	117
  1045     0062                     _RA2	set	98
  1046     0072                     _RC2	set	114
  1047     0061                     _RA1	set	97
  1048     0071                     _RC1	set	113
  1049     0060                     _RA0	set	96
  1050     0098                     _OSCTUNE	set	152
  1051     0099                     _OSCCON	set	153
  1052     008D                     _TRISB	set	141
  1053     0097                     _WDTCON	set	151
  1054     0091                     _PIE1bits	set	145
  1055     008E                     _TRISC	set	142
  1056     008C                     _TRISA	set	140
  1057     0116                     _BORCON	set	278
  1058     011D                     _APFCON	set	285
  1059     010D                     _LATB	set	269
  1060     010E                     _LATC	set	270
  1061     010C                     _LATA	set	268
  1062     0191                     _EEADR	set	401
  1063     019E                     _TXSTA	set	414
  1064     019D                     _RCSTA	set	413
  1065     019B                     _SPBRG	set	411
  1066     019F                     _BAUDCON	set	415
  1067     018C                     _ANSELA	set	396
  1068     018D                     _ANSELB	set	397
  1069     0199                     _RCREG	set	409
  1070     019A                     _TXREG	set	410
  1071     0196                     _EECON2	set	406
  1072     0193                     _EEDATA	set	403
  1073     0195                     _EECON1bits	set	405
  1074     0195                     _EECON1	set	405
  1075     0215                     _SSPCON1bits	set	533
  1076     0212                     _SSPADD	set	530
  1077     0216                     _SSPCON2	set	534
  1078     0215                     _SSPCON1	set	533
  1079     0214                     _SSPSTAT	set	532
  1080     020D                     _WPUB	set	525
  1081     0210                     _WPUE	set	528
  1082     0216                     _SSPCON2bits	set	534
  1083     0211                     _SSPBUF	set	529
  1084                           
  1085                           	psect	stringtext1
  1086     1800                     __pstringtext1:
  1087     1800                     STR_1:
  1088     1800  3425               	retlw	37	;'%'
  1089     1801  3475               	retlw	117	;'u'
  1090     1802  3400               	retlw	0
  1091                           
  1092                           	psect	stringtext2
  1093     0000                     __pstringtext2:
  1094     1800                     
  1095                           	psect	cinit
  1096     026D                     start_initialization:	
  1097                           ; #config settings
  1098                           
  1099     026D                     __initialization:
  1100                           
  1101                           ; Initialize objects allocated to BANK1
  1102     026D  3001               	movlw	low __pidataBANK1
  1103     026E  0084               	movwf	4
  1104     026F  3094               	movlw	(high __pidataBANK1)| (0+128)
  1105     0270  0085               	movwf	5
  1106     0271  30EC               	movlw	low __pdataBANK1
  1107     0272  0086               	movwf	6
  1108     0273  3000               	movlw	high __pdataBANK1
  1109     0274  0087               	movwf	7
  1110     0275  3004               	movlw	4
  1111     0276  3194  240B  3182   	fcall	init_ram
  1112                           
  1113                           ; Initialize objects allocated to BANK2
  1114     0279  30A8               	movlw	low __pidataBANK2
  1115     027A  0084               	movwf	4
  1116     027B  3094               	movlw	(high __pidataBANK2)| (0+128)
  1117     027C  0085               	movwf	5
  1118     027D  3045               	movlw	low __pdataBANK2
  1119     027E  0086               	movwf	6
  1120     027F  3001               	movlw	high __pdataBANK2
  1121     0280  0087               	movwf	7
  1122     0281  3024               	movlw	36
  1123     0282  3194  240B  3182   	fcall	init_ram
  1124                           
  1125                           ; Initialize objects allocated to BANK3
  1126     0285  3085               	movlw	low __pidataBANK3
  1127     0286  0084               	movwf	4
  1128     0287  3094               	movlw	(high __pidataBANK3)| (0+128)
  1129     0288  0085               	movwf	5
  1130     0289  30A0               	movlw	low __pdataBANK3
  1131     028A  0086               	movwf	6
  1132     028B  3001               	movlw	high __pdataBANK3
  1133     028C  0087               	movwf	7
  1134     028D  3023               	movlw	35
  1135     028E  3194  240B  3182   	fcall	init_ram
  1136                           
  1137                           ; Clear objects allocated to COMMON
  1138     0291  01FC               	clrf	__pbssCOMMON& (0+127)
  1139     0292  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1140                           
  1141                           ; Clear objects allocated to BANK1
  1142     0293  30A0               	movlw	low __pbssBANK1
  1143     0294  0084               	movwf	4
  1144     0295  3000               	movlw	high __pbssBANK1
  1145     0296  0085               	movwf	5
  1146     0297  302D               	movlw	45
  1147     0298  3194  2405  3182   	fcall	clear_ram0
  1148                           
  1149                           ; Clear objects allocated to BANK2
  1150     029B  3020               	movlw	low __pbssBANK2
  1151     029C  0084               	movwf	4
  1152     029D  3001               	movlw	high __pbssBANK2
  1153     029E  0085               	movwf	5
  1154     029F  3025               	movlw	37
  1155     02A0  3194  2405  3182   	fcall	clear_ram0
  1156                           
  1157                           ; Clear objects allocated to BANK3
  1158     02A3  30C3               	movlw	low __pbssBANK3
  1159     02A4  0084               	movwf	4
  1160     02A5  3001               	movlw	high __pbssBANK3
  1161     02A6  0085               	movwf	5
  1162     02A7  3020               	movlw	32
  1163     02A8  3194  2405  3182   	fcall	clear_ram0
  1164     02AB                     end_of_initialization:	
  1165                           ;End of C runtime variable initialization code
  1166                           
  1167     02AB                     __end_of__initialization:
  1168     02AB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1169     02AC  0020               	movlb	0
  1170     02AD  3182  2AAF         	ljmp	_main	;jump to C main() function
  1171                           
  1172                           	psect	bssCOMMON
  1173     007C                     __pbssCOMMON:
  1174     007C                     INTERRUPT_InterruptManager@h:
  1175     007C                     	ds	1
  1176     007D                     TXsend@i:
  1177     007D                     	ds	1
  1178                           
  1179                           	psect	bssBANK1
  1180     00A0                     __pbssBANK1:
  1181     00A0                     _prec:
  1182     00A0                     	ds	2
  1183     00A2                     _meddone:
  1184     00A2                     	ds	2
  1185     00A4                     _Temp:
  1186     00A4                     	ds	2
  1187     00A6                     _flags:
  1188     00A6                     	ds	1
  1189     00A7                     _macro_delay:
  1190     00A7                     	ds	1
  1191     00A8                     DHT22READ@check:
  1192     00A8                     	ds	1
  1193     00A9                     INTERRUPT_InterruptManager@sspo:
  1194     00A9                     	ds	1
  1195     00AA                     INTERRUPT_InterruptManager@rp:
  1196     00AA                     	ds	1
  1197     00AB                     INTERRUPT_InterruptManager@i2cstep:
  1198     00AB                     	ds	1
  1199     00AC                     i2cread3byte@si2:
  1200     00AC                     	ds	1
  1201     00AD                     i2creadbyte@si2:
  1202     00AD                     	ds	1
  1203     00AE                     i2cwritebyte@si3:
  1204     00AE                     	ds	1
  1205     00AF                     i2cwrite2byte@si3:
  1206     00AF                     	ds	1
  1207     00B0                     _act_com:
  1208     00B0                     	ds	1
  1209     00B1                     _i2busy:
  1210     00B1                     	ds	1
  1211     00B2                     _i2select:
  1212     00B2                     	ds	1
  1213     00B3                     _i2cqt:
  1214     00B3                     	ds	1
  1215     00B4                     _i2cena:
  1216     00B4                     	ds	1
  1217     00B5                     _i2cfinish:
  1218     00B5                     	ds	1
  1219     00B6                     _i2cbgin:
  1220     00B6                     	ds	1
  1221     00B7                     _endi2c:
  1222     00B7                     	ds	1
  1223     00B8                     _med_sl:
  1224     00B8                     	ds	1
  1225     00B9                     _Lectura:
  1226     00B9                     	ds	1
  1227     00BA                     _TOUT:
  1228     00BA                     	ds	1
  1229     00BB                     _cs:
  1230     00BB                     	ds	1
  1231     00BC                     _port_save:
  1232     00BC                     	ds	1
  1233     00BD                     _sport:
  1234     00BD                     	ds	10
  1235     00C7                     _tempar:
  1236     00C7                     	ds	4
  1237     00CB                     _Lum:
  1238     00CB                     	ds	2
  1239                           
  1240                           	psect	dataBANK1
  1241     00EC                     __pdataBANK1:
  1242     00EC                     _COM:
  1243     00EC                     	ds	4
  1244                           
  1245                           	psect	bssBANK2
  1246     0120                     __pbssBANK2:
  1247     0120                     _width:
  1248     0120                     	ds	2
  1249     0122                     DHTRESULT@hum:
  1250     0122                     	ds	2
  1251     0124                     DHTRESULT@temp:
  1252     0124                     	ds	2
  1253     0126                     _debug:
  1254     0126                     	ds	2
  1255     0128                     _KG:
  1256     0128                     	ds	8
  1257     0130                     _LUX:
  1258     0130                     	ds	5
  1259     0135                     _TEMPDS:
  1260     0135                     	ds	4
  1261     0139                     _humar:
  1262     0139                     	ds	4
  1263     013D                     _dhtresult:
  1264     013D                     	ds	4
  1265     0141                     _weight:
  1266     0141                     	ds	4
  1267                           
  1268                           	psect	dataBANK2
  1269     0145                     __pdataBANK2:
  1270     0145                     INTERRUPT_InterruptManager@plb:
  1271     0145                     	ds	2
  1272     0147                     _LOAD_CELL:
  1273     0147                     	ds	16
  1274     0157                     _VEML7700:
  1275     0157                     	ds	13
  1276     0164                     _COM10:
  1277     0164                     	ds	5
  1278                           
  1279                           	psect	bssBANK3
  1280     01C3                     __pbssBANK3:
  1281     01C3                     _dbuf:
  1282     01C3                     	ds	32
  1283                           
  1284                           	psect	dataBANK3
  1285     01A0                     __pdataBANK3:
  1286     01A0                     _DHTS:
  1287     01A0                     	ds	23
  1288     01B7                     _DS18B:
  1289     01B7                     	ds	12
  1290                           
  1291                           	psect	inittext
  1292     140B                     init_ram:
  1293     140B  00FE               	movwf	btemp
  1294     140C                     initloop:
  1295     140C  0012               	moviw fsr0++
  1296     140D  001E               	movwi fsr1++
  1297     140E  0BFE               	decfsz	btemp,f
  1298     140F  2C0C               	goto	initloop
  1299     1410  3400               	retlw	0
  1300                           
  1301                           	psect	clrtext
  1302     1405                     clear_ram0:	
  1303                           ;	Called with FSR0 containing the base address, and
  1304                           ;	WREG with the size to clear
  1305                           
  1306     1405  0064               	clrwdt	;clear the watchdog before getting into this loop
  1307     1406                     clrloop0:
  1308     1406  0180               	clrf	0	;clear RAM location pointed to by FSR
  1309     1407  3101               	addfsr 0,1
  1310     1408  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1311     1409  2C06               	goto	clrloop0	;have we reached the end yet?
  1312     140A  3400               	retlw	0	;all done for this memory range, return
  1313                           
  1314                           	psect	cstackBANK1
  1315     00CD                     __pcstackBANK1:
  1316     00CD                     ?_sprintf:
  1317     00CD                     sprintf@s:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320                           
  1321                           ; 2 bytes @ 0x0
  1322     00CD                     	ds	2
  1323     00CF                     sprintf@fmt:
  1324                           
  1325                           ; 2 bytes @ 0x2
  1326     00CF                     	ds	6
  1327     00D5                     sprintf@ap:
  1328                           
  1329                           ; 1 bytes @ 0x8
  1330     00D5                     	ds	1
  1331     00D6                     sprintf@f:
  1332                           
  1333                           ; 10 bytes @ 0x9
  1334     00D6                     	ds	10
  1335     00E0                     ?_DHTRESULT:
  1336     00E0                     ?_DS18B20_Read:	
  1337                           ; 1 bytes @ 0x13
  1338                           
  1339     00E0                     DHTRESULT@tris:	
  1340                           ; 1 bytes @ 0x13
  1341                           
  1342     00E0                     i2c_Read@com:	
  1343                           ; 1 bytes @ 0x13
  1344                           
  1345     00E0                     DS18B20_Read@TRIS:	
  1346                           ; 1 bytes @ 0x13
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x13
  1350     00E0                     	ds	1
  1351     00E1                     DHTRESULT@conector:
  1352     00E1                     i2c_Read@j:	
  1353                           ; 1 bytes @ 0x14
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0x14
  1357     00E1                     	ds	1
  1358     00E2                     DHTRESULT@TOUT:
  1359     00E2                     DS18B20_Read@PORT:	
  1360                           ; 1 bytes @ 0x15
  1361                           
  1362                           
  1363                           ; 2 bytes @ 0x15
  1364     00E2                     	ds	1
  1365     00E3                     DHTRESULT@dht:
  1366     00E3                     i2c_Read@j_346:	
  1367                           ; 1 bytes @ 0x16
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x16
  1371     00E3                     	ds	1
  1372     00E4                     DHTRESULT@COM:
  1373     00E4                     DS18B20_Read@LAT:	
  1374                           ; 1 bytes @ 0x17
  1375                           
  1376                           
  1377                           ; 2 bytes @ 0x17
  1378     00E4                     	ds	1
  1379     00E5                     DHTRESULT@port:
  1380                           
  1381                           ; 1 bytes @ 0x18
  1382     00E5                     	ds	1
  1383     00E6                     DS18B20_Read@PIN:
  1384     00E6                     DHTRESULT@j:	
  1385                           ; 1 bytes @ 0x19
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x19
  1389     00E6                     	ds	1
  1390     00E7                     DS18B20_Read@entry:
  1391                           
  1392                           ; 1 bytes @ 0x1A
  1393     00E7                     	ds	1
  1394     00E8                     ??_main:
  1395                           
  1396                           ; 1 bytes @ 0x1B
  1397     00E8                     	ds	2
  1398     00EA                     main@i_364:
  1399                           
  1400                           ; 1 bytes @ 0x1D
  1401     00EA                     	ds	1
  1402     00EB                     main@i:
  1403                           
  1404                           ; 1 bytes @ 0x1E
  1405     00EB                     	ds	1
  1406                           
  1407                           	psect	cstackCOMMON
  1408     0070                     __pcstackCOMMON:
  1409     0070                     ?_Sys_Init:
  1410     0070                     ?_putch:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413     0070                     ?_i2cwrite2byte:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416     0070                     ?_i2cwritebyte:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419     0070                     ?_i2c_Read:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422     0070                     ?_port_config:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425     0070                     ?_main:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428     0070                     ?_TXsend:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431     0070                     ?_INTERRUPT_InterruptManager:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434     0070                     ?_Pin_init:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437     0070                     ?_Reg_init:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440     0070                     ?_i2creadbyte:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443     0070                     ?_i2cread3byte:	
  1444                           ; 2 bytes @ 0x0
  1445                           
  1446     0070                     i2cwrite2byte@dir:	
  1447                           ; 4 bytes @ 0x0
  1448                           
  1449     0070                     i2cwritebyte@dir:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452     0070                     i2creadbyte@dir:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455     0070                     i2cread3byte@dir:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458     0070                     putch@c:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461     0070                     TXsend@word:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464                           
  1465                           ; 2 bytes @ 0x0
  1466     0070                     	ds	1
  1467     0071                     i2cwritebyte@data:
  1468     0071                     i2creadbyte@value:	
  1469                           ; 1 bytes @ 0x1
  1470                           
  1471     0071                     i2cread3byte@value:	
  1472                           ; 1 bytes @ 0x1
  1473                           
  1474     0071                     i2cwrite2byte@data:	
  1475                           ; 1 bytes @ 0x1
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0x1
  1479     0071                     	ds	1
  1480     0072                     ??_i2cwritebyte:
  1481     0072                     ??_i2creadbyte:	
  1482                           ; 1 bytes @ 0x2
  1483                           
  1484     0072                     ??_i2cread3byte:	
  1485                           ; 1 bytes @ 0x2
  1486                           
  1487     0072                     TXsend@size:	
  1488                           ; 1 bytes @ 0x2
  1489                           
  1490                           
  1491                           ; 1 bytes @ 0x2
  1492     0072                     	ds	1
  1493     0073                     ??_i2cwrite2byte:
  1494     0073                     ??_TXsend:	
  1495                           ; 1 bytes @ 0x3
  1496                           
  1497                           
  1498                           ; 1 bytes @ 0x3
  1499     0073                     	ds	1
  1500     0074                     i2cwritebyte@add:
  1501                           
  1502                           ; 1 bytes @ 0x4
  1503     0074                     	ds	1
  1504     0075                     i2cwrite2byte@add:
  1505     0075                     i2creadbyte@add:	
  1506                           ; 1 bytes @ 0x5
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x5
  1510     0075                     	ds	4
  1511     0079                     i2cread3byte@add:
  1512                           
  1513                           ; 1 bytes @ 0x9
  1514     0079                     	ds	1
  1515     007A                     ??_INTERRUPT_InterruptManager:
  1516                           
  1517                           ; 1 bytes @ 0xA
  1518     007A                     	ds	2
  1519                           
  1520                           	psect	cstackBANK0
  1521     0020                     __pcstackBANK0:
  1522     0020                     ??_putch:
  1523     0020                     ??_port_config:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0020                     ??_Pin_init:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529     0020                     ??_Reg_init:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532     0020                     ?_start_signal:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535     0020                     ?_check_response:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538     0020                     ?_read_byte:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541     0020                     ?_read_OW:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544     0020                     ?_OW_write_bit:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547     0020                     ?_fputc:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550     0020                     ?___lodiv:	
  1551                           ; 2 bytes @ 0x0
  1552                           
  1553     0020                     ?___lomod:	
  1554                           ; 8 bytes @ 0x0
  1555                           
  1556     0020                     start_signal@tris:	
  1557                           ; 8 bytes @ 0x0
  1558                           
  1559     0020                     check_response@tris:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0020                     read_byte@tris:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565     0020                     read_OW@TRIS:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568     0020                     OW_write_bit@TRIS:	
  1569                           ; 2 bytes @ 0x0
  1570                           
  1571     0020                     fputc@c:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574     0020                     ___lodiv@divisor:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577     0020                     ___lomod@divisor:	
  1578                           ; 8 bytes @ 0x0
  1579                           
  1580                           
  1581                           ; 8 bytes @ 0x0
  1582     0020                     	ds	1
  1583     0021                     ??_Sys_Init:
  1584     0021                     ??_start_signal:	
  1585                           ; 1 bytes @ 0x1
  1586                           
  1587     0021                     ??_read_byte:	
  1588                           ; 1 bytes @ 0x1
  1589                           
  1590     0021                     port_config@stype:	
  1591                           ; 1 bytes @ 0x1
  1592                           
  1593     0021                     check_response@TOUT:	
  1594                           ; 1 bytes @ 0x1
  1595                           
  1596                           
  1597                           ; 1 bytes @ 0x1
  1598     0021                     	ds	1
  1599     0022                     ??_check_response:
  1600     0022                     start_signal@port:	
  1601                           ; 1 bytes @ 0x2
  1602                           
  1603     0022                     check_response@port:	
  1604                           ; 1 bytes @ 0x2
  1605                           
  1606     0022                     fputc@fp:	
  1607                           ; 1 bytes @ 0x2
  1608                           
  1609     0022                     read_OW@PORT:	
  1610                           ; 1 bytes @ 0x2
  1611                           
  1612     0022                     OW_write_bit@LAT:	
  1613                           ; 2 bytes @ 0x2
  1614                           
  1615                           
  1616                           ; 2 bytes @ 0x2
  1617     0022                     	ds	1
  1618     0023                     ??_fputc:
  1619     0023                     read_byte@num:	
  1620                           ; 1 bytes @ 0x3
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x3
  1624     0023                     	ds	1
  1625     0024                     read_byte@port:
  1626     0024                     read_OW@PIN:	
  1627                           ; 1 bytes @ 0x4
  1628                           
  1629     0024                     OW_write_bit@PIN:	
  1630                           ; 1 bytes @ 0x4
  1631                           
  1632                           
  1633                           ; 1 bytes @ 0x4
  1634     0024                     	ds	1
  1635     0025                     ??_read_OW:
  1636     0025                     ??_OW_write_bit:	
  1637                           ; 1 bytes @ 0x5
  1638                           
  1639     0025                     read_byte@i:	
  1640                           ; 1 bytes @ 0x5
  1641                           
  1642                           
  1643                           ; 1 bytes @ 0x5
  1644     0025                     	ds	1
  1645     0026                     ?_DHT22READ:
  1646     0026                     DHT22READ@tris:	
  1647                           ; 1 bytes @ 0x6
  1648                           
  1649     0026                     read_OW@read_data:	
  1650                           ; 1 bytes @ 0x6
  1651                           
  1652     0026                     OW_write_bit@write_bit:	
  1653                           ; 1 bytes @ 0x6
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0x6
  1657     0026                     	ds	1
  1658     0027                     ?_OW_reset_pulse:
  1659     0027                     ?_OW_write_byte:	
  1660                           ; 1 bytes @ 0x7
  1661                           
  1662     0027                     ?_OW_read_bit:	
  1663                           ; 1 bytes @ 0x7
  1664                           
  1665     0027                     DHT22READ@entry:	
  1666                           ; 1 bytes @ 0x7
  1667                           
  1668     0027                     OW_reset_pulse@TRIS:	
  1669                           ; 1 bytes @ 0x7
  1670                           
  1671     0027                     OW_read_bit@TRIS:	
  1672                           ; 2 bytes @ 0x7
  1673                           
  1674     0027                     OW_write_byte@TRIS:	
  1675                           ; 2 bytes @ 0x7
  1676                           
  1677                           
  1678                           ; 2 bytes @ 0x7
  1679     0027                     	ds	1
  1680     0028                     ?_fputs:
  1681     0028                     DHT22READ@TOUT:	
  1682                           ; 2 bytes @ 0x8
  1683                           
  1684     0028                     fputs@fp:	
  1685                           ; 1 bytes @ 0x8
  1686                           
  1687     0028                     ___lodiv@dividend:	
  1688                           ; 1 bytes @ 0x8
  1689                           
  1690     0028                     ___lomod@dividend:	
  1691                           ; 8 bytes @ 0x8
  1692                           
  1693                           
  1694                           ; 8 bytes @ 0x8
  1695     0028                     	ds	1
  1696     0029                     ??_fputs:
  1697     0029                     DHT22READ@dhtresult:	
  1698                           ; 1 bytes @ 0x9
  1699                           
  1700     0029                     OW_reset_pulse@PORT:	
  1701                           ; 1 bytes @ 0x9
  1702                           
  1703     0029                     OW_read_bit@PORT:	
  1704                           ; 2 bytes @ 0x9
  1705                           
  1706     0029                     OW_write_byte@LAT:	
  1707                           ; 2 bytes @ 0x9
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x9
  1711     0029                     	ds	1
  1712     002A                     DHT22READ@COM:
  1713                           
  1714                           ; 1 bytes @ 0xA
  1715     002A                     	ds	1
  1716     002B                     ??_DHT22READ:
  1717     002B                     DHT22READ@port:	
  1718                           ; 1 bytes @ 0xB
  1719                           
  1720     002B                     OW_write_byte@PIN:	
  1721                           ; 1 bytes @ 0xB
  1722                           
  1723     002B                     fputs@s:	
  1724                           ; 1 bytes @ 0xB
  1725                           
  1726     002B                     OW_reset_pulse@LAT:	
  1727                           ; 1 bytes @ 0xB
  1728                           
  1729     002B                     OW_read_bit@LAT:	
  1730                           ; 2 bytes @ 0xB
  1731                           
  1732                           
  1733                           ; 2 bytes @ 0xB
  1734     002B                     	ds	1
  1735     002C                     ??_OW_write_byte:
  1736     002C                     fputs@c:	
  1737                           ; 1 bytes @ 0xC
  1738                           
  1739                           
  1740                           ; 1 bytes @ 0xC
  1741     002C                     	ds	1
  1742     002D                     OW_reset_pulse@PIN:
  1743     002D                     OW_read_bit@PIN:	
  1744                           ; 1 bytes @ 0xD
  1745                           
  1746     002D                     OW_write_byte@write_data:	
  1747                           ; 1 bytes @ 0xD
  1748                           
  1749     002D                     fputs@i:	
  1750                           ; 1 bytes @ 0xD
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0xD
  1754     002D                     	ds	1
  1755     002E                     ??_OW_reset_pulse:
  1756     002E                     ??_OW_read_bit:	
  1757                           ; 1 bytes @ 0xE
  1758                           
  1759     002E                     OW_write_byte@loop:	
  1760                           ; 1 bytes @ 0xE
  1761                           
  1762                           
  1763                           ; 1 bytes @ 0xE
  1764     002E                     	ds	1
  1765     002F                     ?_pad:
  1766     002F                     OW_read_bit@read_data:	
  1767                           ; 1 bytes @ 0xF
  1768                           
  1769     002F                     pad@buf:	
  1770                           ; 1 bytes @ 0xF
  1771                           
  1772                           
  1773                           ; 1 bytes @ 0xF
  1774     002F                     	ds	1
  1775     0030                     ?_OW_read_byte:
  1776     0030                     ??___lodiv:	
  1777                           ; 1 bytes @ 0x10
  1778                           
  1779     0030                     ??___lomod:	
  1780                           ; 1 bytes @ 0x10
  1781                           
  1782     0030                     OW_read_byte@TRIS:	
  1783                           ; 1 bytes @ 0x10
  1784                           
  1785     0030                     pad@p:	
  1786                           ; 2 bytes @ 0x10
  1787                           
  1788                           
  1789                           ; 2 bytes @ 0x10
  1790     0030                     	ds	1
  1791     0031                     ___lomod@counter:
  1792     0031                     ___lodiv@quotient:	
  1793                           ; 1 bytes @ 0x11
  1794                           
  1795                           
  1796                           ; 8 bytes @ 0x11
  1797     0031                     	ds	1
  1798     0032                     ??_pad:
  1799     0032                     OW_read_byte@PORT:	
  1800                           ; 1 bytes @ 0x12
  1801                           
  1802                           
  1803                           ; 2 bytes @ 0x12
  1804     0032                     	ds	1
  1805     0033                     pad@i:
  1806                           
  1807                           ; 2 bytes @ 0x13
  1808     0033                     	ds	1
  1809     0034                     OW_read_byte@LAT:
  1810                           
  1811                           ; 2 bytes @ 0x14
  1812     0034                     	ds	1
  1813     0035                     pad@w:
  1814                           
  1815                           ; 2 bytes @ 0x15
  1816     0035                     	ds	1
  1817     0036                     OW_read_byte@PIN:
  1818                           
  1819                           ; 1 bytes @ 0x16
  1820     0036                     	ds	1
  1821     0037                     ??_OW_read_byte:
  1822     0037                     pad@fp:	
  1823                           ; 1 bytes @ 0x17
  1824                           
  1825                           
  1826                           ; 1 bytes @ 0x17
  1827     0037                     	ds	1
  1828     0038                     OW_read_byte@result:
  1829                           
  1830                           ; 1 bytes @ 0x18
  1831     0038                     	ds	1
  1832     0039                     OW_read_byte@loop:
  1833     0039                     ___lodiv@counter:	
  1834                           ; 1 bytes @ 0x19
  1835                           
  1836                           
  1837                           ; 1 bytes @ 0x19
  1838     0039                     	ds	1
  1839     003A                     ?_utoa:
  1840     003A                     utoa@d:	
  1841                           ; 1 bytes @ 0x1A
  1842                           
  1843                           
  1844                           ; 8 bytes @ 0x1A
  1845     003A                     	ds	8
  1846     0042                     ??_utoa:
  1847                           
  1848                           ; 1 bytes @ 0x22
  1849     0042                     	ds	1
  1850     0043                     utoa@fp:
  1851                           
  1852                           ; 1 bytes @ 0x23
  1853     0043                     	ds	1
  1854     0044                     utoa@w:
  1855                           
  1856                           ; 2 bytes @ 0x24
  1857     0044                     	ds	2
  1858     0046                     utoa@p:
  1859                           
  1860                           ; 2 bytes @ 0x26
  1861     0046                     	ds	2
  1862     0048                     utoa@n:
  1863                           
  1864                           ; 8 bytes @ 0x28
  1865     0048                     	ds	8
  1866     0050                     utoa@i:
  1867                           
  1868                           ; 2 bytes @ 0x30
  1869     0050                     	ds	2
  1870     0052                     ?_vfpfcnvrt:
  1871     0052                     vfpfcnvrt@fmt:	
  1872                           ; 1 bytes @ 0x32
  1873                           
  1874                           
  1875                           ; 1 bytes @ 0x32
  1876     0052                     	ds	1
  1877     0053                     vfpfcnvrt@ap:
  1878                           
  1879                           ; 1 bytes @ 0x33
  1880     0053                     	ds	1
  1881     0054                     ??_vfpfcnvrt:
  1882                           
  1883                           ; 1 bytes @ 0x34
  1884     0054                     	ds	4
  1885     0058                     vfpfcnvrt@convarg:
  1886                           
  1887                           ; 8 bytes @ 0x38
  1888     0058                     	ds	8
  1889     0060                     vfpfcnvrt@fp:
  1890                           
  1891                           ; 1 bytes @ 0x40
  1892     0060                     	ds	1
  1893     0061                     vfpfcnvrt@cp:
  1894                           
  1895                           ; 2 bytes @ 0x41
  1896     0061                     	ds	2
  1897     0063                     ?_vfprintf:
  1898     0063                     vfprintf@fmt:	
  1899                           ; 2 bytes @ 0x43
  1900                           
  1901                           
  1902                           ; 2 bytes @ 0x43
  1903     0063                     	ds	2
  1904     0065                     vfprintf@ap:
  1905                           
  1906                           ; 1 bytes @ 0x45
  1907     0065                     	ds	1
  1908     0066                     ??_vfprintf:
  1909                           
  1910                           ; 1 bytes @ 0x46
  1911     0066                     	ds	1
  1912     0067                     vfprintf@fp:
  1913                           
  1914                           ; 1 bytes @ 0x47
  1915     0067                     	ds	1
  1916     0068                     vfprintf@cfmt:
  1917                           
  1918                           ; 2 bytes @ 0x48
  1919     0068                     	ds	2
  1920     006A                     ??_sprintf:
  1921     006A                     ??_DHTRESULT:	
  1922                           ; 1 bytes @ 0x4A
  1923                           
  1924     006A                     ??_DS18B20_Read:	
  1925                           ; 1 bytes @ 0x4A
  1926                           
  1927     006A                     ??_i2c_Read:	
  1928                           ; 1 bytes @ 0x4A
  1929                           
  1930                           
  1931                           ; 1 bytes @ 0x4A
  1932     006A                     	ds	3
  1933     006D                     DS18B20_Read@j:
  1934                           
  1935                           ; 2 bytes @ 0x4D
  1936     006D                     	ds	2
  1937                           
  1938                           	psect	maintext
  1939     02AF                     __pmaintext:	
  1940 ;;
  1941 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1942 ;;
  1943 ;; *************** function _main *****************
  1944 ;; Defined at:
  1945 ;;		line 438 in file "main.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  i               1   29[BANK1 ] unsigned char 
  1950 ;;  i               1   30[BANK1 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : B1F/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1960 ;;      Params:         0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       2       0       0       0       0       0
  1962 ;;      Temps:          0       0       2       0       0       0       0       0
  1963 ;;      Totals:         0       0       4       0       0       0       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels required when called: 11
  1966 ;; This function calls:
  1967 ;;		_DHTRESULT
  1968 ;;		_DS18B20_Read
  1969 ;;		_Sys_Init
  1970 ;;		_i2c_Read
  1971 ;;		_port_config
  1972 ;; This function is called by:
  1973 ;;		Startup code after reset
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977     02AF                     _main:	
  1978                           ;psect for function _main
  1979                           
  1980     02AF                     l5851:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1983                           
  1984                           
  1985                           ;main.c: 439:     Sys_Init();
  1986     02AF  3194  2411  3182   	fcall	_Sys_Init
  1987     02B2                     l5853:
  1988                           
  1989                           ;main.c: 440:     WDTCON=0x1B;
  1990     02B2  301B               	movlw	27
  1991     02B3  0021               	movlb	1	; select bank1
  1992     02B4  0097               	movwf	23	;volatile
  1993     02B5                     l5855:
  1994                           
  1995                           ;main.c: 441:     for(unsigned char i=0; i<10; i++) {
  1996     02B5  01EB               	clrf	main@i^(0+128)
  1997     02B6                     l5861:
  1998                           
  1999                           ;main.c: 442:         sport[i]= ( EEADR = i, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  2000     02B6  086B               	movf	main@i^(0+128),w
  2001     02B7  00E8               	movwf	??_main^(0+128)
  2002     02B8  01E9               	clrf	(??_main^(0+128)+1)
  2003     02B9  0868               	movf	??_main^(0+128),w
  2004     02BA  0023               	movlb	3	; select bank3
  2005     02BB  0091               	movwf	17	;volatile
  2006     02BC  0021               	movlb	1	; select bank1
  2007     02BD  0869               	movf	(??_main+1)^(0+128),w
  2008     02BE  0023               	movlb	3	; select bank3
  2009     02BF  0092               	movwf	18	;volatile
  2010     02C0                     l5863:
  2011     02C0  303F               	movlw	63
  2012     02C1  0021               	movlb	1	; select bank1
  2013     02C2  00E8               	movwf	??_main^(0+128)
  2014     02C3  0868               	movf	??_main^(0+128),w
  2015     02C4  0023               	movlb	3	; select bank3
  2016     02C5  0595               	andwf	21,f	;volsfr
  2017     02C6                     l5865:
  2018     02C6  1415               	bsf	21,0	;volsfr
  2019     02C7                     l5867:
  2020     02C7  0021               	movlb	1	; select bank1
  2021     02C8  086B               	movf	main@i^(0+128),w
  2022     02C9  3EBD               	addlw	(low (_sport| 0))& (0+255)
  2023     02CA  0086               	movwf	6
  2024     02CB  0187               	clrf	7
  2025     02CC  0023               	movlb	3	; select bank3
  2026     02CD  0813               	movf	19,w	;volatile
  2027     02CE  0081               	movwf	1
  2028     02CF                     l5869:
  2029                           
  2030                           ;main.c: 443:         if(sport[i]>='3') i2cqt++;
  2031     02CF  0021               	movlb	1	; select bank1
  2032     02D0  086B               	movf	main@i^(0+128),w
  2033     02D1  3EBD               	addlw	(low (_sport| 0))& (0+255)
  2034     02D2  0086               	movwf	6
  2035     02D3  0187               	clrf	7
  2036     02D4  3033               	movlw	51
  2037     02D5  0201               	subwf	1,w
  2038     02D6  1C03               	skipc
  2039     02D7  2AD9               	goto	u4691
  2040     02D8  2ADA               	goto	u4690
  2041     02D9                     u4691:
  2042     02D9  2ADE               	goto	l290
  2043     02DA                     u4690:
  2044     02DA                     l5871:
  2045     02DA  3001               	movlw	1
  2046     02DB  00E8               	movwf	??_main^(0+128)
  2047     02DC  0868               	movf	??_main^(0+128),w
  2048     02DD  07B3               	addwf	_i2cqt^(0+128),f
  2049     02DE                     l290:
  2050                           
  2051                           ;main.c: 444:     }
  2052     02DE  3001               	movlw	1
  2053     02DF  00E8               	movwf	??_main^(0+128)
  2054     02E0  0868               	movf	??_main^(0+128),w
  2055     02E1  07EB               	addwf	main@i^(0+128),f
  2056     02E2                     l5873:
  2057     02E2  300A               	movlw	10
  2058     02E3  026B               	subwf	main@i^(0+128),w
  2059     02E4  1C03               	skipc
  2060     02E5  2AE7               	goto	u4701
  2061     02E6  2AE8               	goto	u4700
  2062     02E7                     u4701:
  2063     02E7  2AB6               	goto	l5861
  2064     02E8                     u4700:
  2065     02E8                     l5875:
  2066                           
  2067                           ;main.c: 445:     port_config(sport);
  2068     02E8  30BD               	movlw	(low (_sport| 0))& (0+255)
  2069     02E9  318C  244A  3182   	fcall	_port_config
  2070     02EC                     l5877:
  2071                           
  2072                           ;main.c: 446:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2073     02EC  3005               	movlw	5
  2074     02ED  0021               	movlb	1	; select bank1
  2075     02EE  00E9               	movwf	(??_main^(0+128)+1)
  2076     02EF  300F               	movlw	15
  2077     02F0  00E8               	movwf	??_main^(0+128)
  2078     02F1  30F1               	movlw	241
  2079     02F2                     u6007:
  2080     02F2  0B89               	decfsz	9,f
  2081     02F3  2AF2               	goto	u6007
  2082     02F4  0BE8               	decfsz	??_main^(0+128),f
  2083     02F5  2AF2               	goto	u6007
  2084     02F6  0BE9               	decfsz	(??_main^(0+128)+1),f
  2085     02F7  2AF2               	goto	u6007
  2086     02F8                     l291:	
  2087                           ;main.c: 447:     while(1){
  2088                           
  2089     02F8  0064               	clrwdt	;# 
  2090     02F9                     l5879:
  2091                           
  2092                           ;main.c: 449:     if(port_save==1){
  2093     02F9  0021               	movlb	1	; select bank1
  2094     02FA  033C               	decf	_port_save^(0+128),w
  2095     02FB  1D03               	btfss	3,2
  2096     02FC  2AFE               	goto	u4711
  2097     02FD  2AFF               	goto	u4710
  2098     02FE                     u4711:
  2099     02FE  2B51               	goto	l5919
  2100     02FF                     u4710:
  2101     02FF                     l5881:
  2102                           
  2103                           ;main.c: 450:         for(unsigned char i=0; i<10; i++)
  2104     02FF  01EA               	clrf	main@i_364^(0+128)
  2105     0300                     l296:
  2106     0300  0023               	movlb	3	; select bank3
  2107     0301  1895               	btfsc	21,1	;volsfr
  2108     0302  2B04               	goto	u4721
  2109     0303  2B05               	goto	u4720
  2110     0304                     u4721:
  2111     0304  2B00               	goto	l296
  2112     0305                     u4720:
  2113     0305                     l5887:
  2114     0305  0021               	movlb	1	; select bank1
  2115     0306  086A               	movf	main@i_364^(0+128),w
  2116     0307  00E8               	movwf	??_main^(0+128)
  2117     0308  01E9               	clrf	(??_main^(0+128)+1)
  2118     0309  0868               	movf	??_main^(0+128),w
  2119     030A  0023               	movlb	3	; select bank3
  2120     030B  0091               	movwf	17	;volatile
  2121     030C  0021               	movlb	1	; select bank1
  2122     030D  0869               	movf	(??_main+1)^(0+128),w
  2123     030E  0023               	movlb	3	; select bank3
  2124     030F  0092               	movwf	18	;volatile
  2125     0310                     l5889:
  2126     0310  0021               	movlb	1	; select bank1
  2127     0311  086A               	movf	main@i_364^(0+128),w
  2128     0312  3EBD               	addlw	(low (_sport| 0))& (0+255)
  2129     0313  0086               	movwf	6
  2130     0314  0187               	clrf	7
  2131     0315  0801               	movf	1,w
  2132     0316  0023               	movlb	3	; select bank3
  2133     0317  0093               	movwf	19	;volatile
  2134     0318                     l5891:
  2135     0318  303F               	movlw	63
  2136     0319  0021               	movlb	1	; select bank1
  2137     031A  00E8               	movwf	??_main^(0+128)
  2138     031B  0868               	movf	??_main^(0+128),w
  2139     031C  0023               	movlb	3	; select bank3
  2140     031D  0595               	andwf	21,f	;volsfr
  2141     031E                     l5893:
  2142     031E  0020               	movlb	0	; select bank0
  2143     031F  1003               	bcf	3,0	;volatile
  2144     0320                     l5895:
  2145     0320  1F8B               	btfss	11,7	;volatile
  2146     0321  2B23               	goto	u4731
  2147     0322  2B24               	goto	u4730
  2148     0323                     u4731:
  2149     0323  2B25               	goto	l299
  2150     0324                     u4730:
  2151     0324                     l5897:
  2152     0324  1403               	bsf	3,0	;volatile
  2153     0325                     l299:
  2154     0325  138B               	bcf	11,7	;volatile
  2155     0326  0023               	movlb	3	; select bank3
  2156     0327  1515               	bsf	21,2	;volsfr
  2157     0328                     l5899:
  2158     0328  3055               	movlw	85
  2159     0329  0096               	movwf	22	;volsfr
  2160     032A  30AA               	movlw	170
  2161     032B  0096               	movwf	22	;volsfr
  2162     032C                     l5901:
  2163     032C  1495               	bsf	21,1	;volsfr
  2164     032D                     l5903:
  2165     032D  1115               	bcf	21,2	;volsfr
  2166     032E                     l5905:
  2167     032E  0020               	movlb	0	; select bank0
  2168     032F  1C03               	btfss	3,0	;volatile
  2169     0330  2B32               	goto	u4741
  2170     0331  2B33               	goto	u4740
  2171     0332                     u4741:
  2172     0332  2B34               	goto	l5909
  2173     0333                     u4740:
  2174     0333                     l5907:
  2175     0333  178B               	bsf	11,7	;volatile
  2176     0334                     l5909:
  2177     0334  3001               	movlw	1
  2178     0335  0021               	movlb	1	; select bank1
  2179     0336  00E8               	movwf	??_main^(0+128)
  2180     0337  0868               	movf	??_main^(0+128),w
  2181     0338  07EA               	addwf	main@i_364^(0+128),f
  2182     0339                     l5911:
  2183     0339  300A               	movlw	10
  2184     033A  026A               	subwf	main@i_364^(0+128),w
  2185     033B  1C03               	skipc
  2186     033C  2B3E               	goto	u4751
  2187     033D  2B3F               	goto	u4750
  2188     033E                     u4751:
  2189     033E  2B00               	goto	l296
  2190     033F                     u4750:
  2191     033F                     l5913:
  2192                           
  2193                           ;main.c: 452:         port_config(sport);
  2194     033F  30BD               	movlw	(low (_sport| 0))& (0+255)
  2195     0340  318C  244A  3182   	fcall	_port_config
  2196     0343                     l5915:
  2197                           
  2198                           ;main.c: 453:         _delay((unsigned long)((100)*(32000000/4000.0)));
  2199     0343  3005               	movlw	5
  2200     0344  0021               	movlb	1	; select bank1
  2201     0345  00E9               	movwf	(??_main^(0+128)+1)
  2202     0346  300F               	movlw	15
  2203     0347  00E8               	movwf	??_main^(0+128)
  2204     0348  30F1               	movlw	241
  2205     0349                     u6017:
  2206     0349  0B89               	decfsz	9,f
  2207     034A  2B49               	goto	u6017
  2208     034B  0BE8               	decfsz	??_main^(0+128),f
  2209     034C  2B49               	goto	u6017
  2210     034D  0BE9               	decfsz	(??_main^(0+128)+1),f
  2211     034E  2B49               	goto	u6017
  2212     034F                     l5917:
  2213                           
  2214                           ;main.c: 454:         port_save=0;
  2215     034F  0021               	movlb	1	; select bank1
  2216     0350  01BC               	clrf	_port_save^(0+128)
  2217     0351                     l5919:
  2218                           
  2219                           ;main.c: 456:         if(Lectura==1){
  2220     0351  0339               	decf	_Lectura^(0+128),w
  2221     0352  1D03               	btfss	3,2
  2222     0353  2B55               	goto	u4761
  2223     0354  2B56               	goto	u4760
  2224     0355                     u4761:
  2225     0355  2B67               	goto	l5929
  2226     0356                     u4760:
  2227     0356                     l5921:
  2228                           
  2229                           ;main.c: 457:             _delay((unsigned long)((100)*(32000000/4000.0)));
  2230     0356  3005               	movlw	5
  2231     0357  0021               	movlb	1	; select bank1
  2232     0358  00E9               	movwf	(??_main^(0+128)+1)
  2233     0359  300F               	movlw	15
  2234     035A  00E8               	movwf	??_main^(0+128)
  2235     035B  30F1               	movlw	241
  2236     035C                     u6027:
  2237     035C  0B89               	decfsz	9,f
  2238     035D  2B5C               	goto	u6027
  2239     035E  0BE8               	decfsz	??_main^(0+128),f
  2240     035F  2B5C               	goto	u6027
  2241     0360  0BE9               	decfsz	(??_main^(0+128)+1),f
  2242     0361  2B5C               	goto	u6027
  2243     0362                     l5923:
  2244                           
  2245                           ;main.c: 458:             i2cfinish=0;
  2246     0362  0021               	movlb	1	; select bank1
  2247     0363  01B5               	clrf	_i2cfinish^(0+128)
  2248     0364                     l5925:
  2249                           
  2250                           ;main.c: 459:             i2cbgin=1;
  2251     0364  01B6               	clrf	_i2cbgin^(0+128)
  2252     0365  0AB6               	incf	_i2cbgin^(0+128),f
  2253     0366                     l5927:
  2254                           
  2255                           ;main.c: 460:             Lectura=0;
  2256     0366  01B9               	clrf	_Lectura^(0+128)
  2257     0367                     l5929:
  2258                           
  2259                           ;main.c: 463:     i2c_Read(act_com);
  2260     0367  0830               	movf	_act_com^(0+128),w
  2261     0368  318D  2519  3182   	fcall	_i2c_Read
  2262     036B                     l5931:
  2263                           
  2264                           ;main.c: 466:     if(((meddone & 0x01)>0)){
  2265     036B  0021               	movlb	1	; select bank1
  2266     036C  1C22               	btfss	_meddone^(0+128),0
  2267     036D  2B6F               	goto	u4771
  2268     036E  2B70               	goto	u4770
  2269     036F                     u4771:
  2270     036F  2BEA               	goto	l5983
  2271     0370                     u4770:
  2272     0370                     l5933:
  2273                           
  2274                           ;main.c: 467:         if(sport[0]=='1' && i2busy==0){
  2275     0370  3031               	movlw	49
  2276     0371  063D               	xorwf	_sport^(0+128),w
  2277     0372  1D03               	btfss	3,2
  2278     0373  2B75               	goto	u4781
  2279     0374  2B76               	goto	u4780
  2280     0375                     u4781:
  2281     0375  2B97               	goto	l5943
  2282     0376                     u4780:
  2283     0376                     l5935:
  2284     0376  0831               	movf	_i2busy^(0+128),w
  2285     0377  1D03               	btfss	3,2
  2286     0378  2B7A               	goto	u4791
  2287     0379  2B7B               	goto	u4790
  2288     037A                     u4791:
  2289     037A  2B97               	goto	l5943
  2290     037B                     u4790:
  2291     037B                     l5937:
  2292                           
  2293                           ;main.c: 468:            _delay((unsigned long)((10)*(32000000/4000.0)));
  2294     037B  3068               	movlw	104
  2295     037C  0021               	movlb	1	; select bank1
  2296     037D  00E8               	movwf	??_main^(0+128)
  2297     037E  30E4               	movlw	228
  2298     037F                     u6037:
  2299     037F  0B89               	decfsz	9,f
  2300     0380  2B7F               	goto	u6037
  2301     0381  0BE8               	decfsz	??_main^(0+128),f
  2302     0382  2B7F               	goto	u6037
  2303     0383  0000               	nop
  2304     0384                     l5939:
  2305                           
  2306                           ;main.c: 469:            DHTRESULT(0x01, 0, 1, TOUT, dhtresult, COM);
  2307     0384  0021               	movlb	1	; select bank1
  2308     0385  01E0               	clrf	DHTRESULT@tris^(0+128)
  2309     0386  01E1               	clrf	DHTRESULT@conector^(0+128)
  2310     0387  0AE1               	incf	DHTRESULT@conector^(0+128),f
  2311     0388  083A               	movf	_TOUT^(0+128),w
  2312     0389  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2313     038A  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2314     038B  00E3               	movwf	DHTRESULT@dht^(0+128)
  2315     038C  30EC               	movlw	(low (_COM| 0))& (0+255)
  2316     038D  00E4               	movwf	DHTRESULT@COM^(0+128)
  2317     038E  3001               	movlw	1
  2318     038F  318D  25F7  3182   	fcall	_DHTRESULT
  2319     0392                     l5941:
  2320                           
  2321                           ;main.c: 470:            meddone &= ~0x01 ;
  2322     0392  30FE               	movlw	254
  2323     0393  0021               	movlb	1	; select bank1
  2324     0394  05A2               	andwf	_meddone^(0+128),f
  2325     0395  30FF               	movlw	255
  2326     0396  05A3               	andwf	(_meddone+1)^(0+128),f
  2327     0397                     l5943:
  2328     0397  3032               	movlw	50
  2329     0398  063D               	xorwf	_sport^(0+128),w
  2330     0399  1D03               	btfss	3,2
  2331     039A  2B9C               	goto	u4801
  2332     039B  2B9D               	goto	u4800
  2333     039C                     u4801:
  2334     039C  2BBA               	goto	l5951
  2335     039D                     u4800:
  2336     039D                     l5945:
  2337     039D  0831               	movf	_i2busy^(0+128),w
  2338     039E  1D03               	btfss	3,2
  2339     039F  2BA1               	goto	u4811
  2340     03A0  2BA2               	goto	u4810
  2341     03A1                     u4811:
  2342     03A1  2BBA               	goto	l5951
  2343     03A2                     u4810:
  2344     03A2                     l5947:
  2345                           
  2346                           ;main.c: 472:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x01, 1);
  2347     03A2  308C               	movlw	140
  2348     03A3  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2349     03A4  3000               	movlw	0
  2350     03A5  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2351     03A6  300C               	movlw	12
  2352     03A7  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2353     03A8  3000               	movlw	0
  2354     03A9  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2355     03AA  300C               	movlw	12
  2356     03AB  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2357     03AC  3001               	movlw	1
  2358     03AD  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2359     03AE  01E6               	clrf	DS18B20_Read@PIN^(0+128)
  2360     03AF  0AE6               	incf	DS18B20_Read@PIN^(0+128),f
  2361     03B0  01E7               	clrf	DS18B20_Read@entry^(0+128)
  2362     03B1  0AE7               	incf	DS18B20_Read@entry^(0+128),f
  2363     03B2  318E  26DD  3182   	fcall	_DS18B20_Read
  2364     03B5                     l5949:
  2365                           
  2366                           ;main.c: 473:            meddone &= ~0x01 ;
  2367     03B5  30FE               	movlw	254
  2368     03B6  0021               	movlb	1	; select bank1
  2369     03B7  05A2               	andwf	_meddone^(0+128),f
  2370     03B8  30FF               	movlw	255
  2371     03B9  05A3               	andwf	(_meddone+1)^(0+128),f
  2372     03BA                     l5951:
  2373     03BA  3033               	movlw	51
  2374     03BB  063D               	xorwf	_sport^(0+128),w
  2375     03BC  1D03               	btfss	3,2
  2376     03BD  2BBF               	goto	u4821
  2377     03BE  2BC0               	goto	u4820
  2378     03BF                     u4821:
  2379     03BF  2BD2               	goto	l5967
  2380     03C0                     u4820:
  2381     03C0                     l5953:
  2382     03C0  0831               	movf	_i2busy^(0+128),w
  2383     03C1  1D03               	btfss	3,2
  2384     03C2  2BC4               	goto	u4831
  2385     03C3  2BC5               	goto	u4830
  2386     03C4                     u4831:
  2387     03C4  2BD2               	goto	l5967
  2388     03C5                     u4830:
  2389     03C5                     l5955:
  2390                           
  2391                           ;main.c: 475:            i2cfinish=0;
  2392     03C5  01B5               	clrf	_i2cfinish^(0+128)
  2393     03C6                     l5957:
  2394                           
  2395                           ;main.c: 476:            i2cbgin=1;
  2396     03C6  01B6               	clrf	_i2cbgin^(0+128)
  2397     03C7  0AB6               	incf	_i2cbgin^(0+128),f
  2398     03C8                     l5959:
  2399                           
  2400                           ;main.c: 477:            i2select=1;
  2401     03C8  01B2               	clrf	_i2select^(0+128)
  2402     03C9  0AB2               	incf	_i2select^(0+128),f
  2403     03CA                     l5961:
  2404                           
  2405                           ;main.c: 478:            i2busy=1;
  2406     03CA  01B1               	clrf	_i2busy^(0+128)
  2407     03CB  0AB1               	incf	_i2busy^(0+128),f
  2408     03CC                     l5963:
  2409                           
  2410                           ;main.c: 479:            act_com=1;
  2411     03CC  01B0               	clrf	_act_com^(0+128)
  2412     03CD  0AB0               	incf	_act_com^(0+128),f
  2413     03CE                     l5965:
  2414                           
  2415                           ;main.c: 480:            meddone &= ~0x01;
  2416     03CE  30FE               	movlw	254
  2417     03CF  05A2               	andwf	_meddone^(0+128),f
  2418     03D0  30FF               	movlw	255
  2419     03D1  05A3               	andwf	(_meddone+1)^(0+128),f
  2420     03D2                     l5967:
  2421     03D2  3034               	movlw	52
  2422     03D3  063D               	xorwf	_sport^(0+128),w
  2423     03D4  1D03               	btfss	3,2
  2424     03D5  2BD7               	goto	u4841
  2425     03D6  2BD8               	goto	u4840
  2426     03D7                     u4841:
  2427     03D7  2BEA               	goto	l5983
  2428     03D8                     u4840:
  2429     03D8                     l5969:
  2430     03D8  0831               	movf	_i2busy^(0+128),w
  2431     03D9  1D03               	btfss	3,2
  2432     03DA  2BDC               	goto	u4851
  2433     03DB  2BDD               	goto	u4850
  2434     03DC                     u4851:
  2435     03DC  2BEA               	goto	l5983
  2436     03DD                     u4850:
  2437     03DD                     l5971:
  2438                           
  2439                           ;main.c: 482:            i2cfinish=0;
  2440     03DD  01B5               	clrf	_i2cfinish^(0+128)
  2441     03DE                     l5973:
  2442                           
  2443                           ;main.c: 483:            i2cbgin=1;
  2444     03DE  01B6               	clrf	_i2cbgin^(0+128)
  2445     03DF  0AB6               	incf	_i2cbgin^(0+128),f
  2446     03E0                     l5975:
  2447                           
  2448                           ;main.c: 484:            i2select=2;
  2449     03E0  3002               	movlw	2
  2450     03E1  00B2               	movwf	_i2select^(0+128)
  2451     03E2                     l5977:
  2452                           
  2453                           ;main.c: 485:            i2busy=1;
  2454     03E2  01B1               	clrf	_i2busy^(0+128)
  2455     03E3  0AB1               	incf	_i2busy^(0+128),f
  2456     03E4                     l5979:
  2457                           
  2458                           ;main.c: 486:            act_com=1;
  2459     03E4  01B0               	clrf	_act_com^(0+128)
  2460     03E5  0AB0               	incf	_act_com^(0+128),f
  2461     03E6                     l5981:
  2462                           
  2463                           ;main.c: 487:            meddone &= ~0x01;
  2464     03E6  30FE               	movlw	254
  2465     03E7  05A2               	andwf	_meddone^(0+128),f
  2466     03E8  30FF               	movlw	255
  2467     03E9  05A3               	andwf	(_meddone+1)^(0+128),f
  2468     03EA                     l5983:
  2469     03EA  1CA2               	btfss	_meddone^(0+128),1
  2470     03EB  2BED               	goto	u4861
  2471     03EC  2BEE               	goto	u4860
  2472     03ED                     u4861:
  2473     03ED  2C5E               	goto	l6033
  2474     03EE                     u4860:
  2475     03EE                     l5985:
  2476                           
  2477                           ;main.c: 490:         if(sport[1]=='1' && i2busy==0){
  2478     03EE  3031               	movlw	49
  2479     03EF  063E               	xorwf	(_sport^(0+128)+1),w
  2480     03F0  1D03               	btfss	3,2
  2481     03F1  2BF3               	goto	u4871
  2482     03F2  2BF4               	goto	u4870
  2483     03F3                     u4871:
  2484     03F3  2C0B               	goto	l5993
  2485     03F4                     u4870:
  2486     03F4                     l5987:
  2487     03F4  0831               	movf	_i2busy^(0+128),w
  2488     03F5  1D03               	btfss	3,2
  2489     03F6  2BF8               	goto	u4881
  2490     03F7  2BF9               	goto	u4880
  2491     03F8                     u4881:
  2492     03F8  2C0B               	goto	l5993
  2493     03F9                     u4880:
  2494     03F9                     l5989:
  2495                           
  2496                           ;main.c: 491:            DHTRESULT(0x02, 0, 2, TOUT, dhtresult, COM);
  2497     03F9  01E0               	clrf	DHTRESULT@tris^(0+128)
  2498     03FA  3002               	movlw	2
  2499     03FB  00E1               	movwf	DHTRESULT@conector^(0+128)
  2500     03FC  083A               	movf	_TOUT^(0+128),w
  2501     03FD  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2502     03FE  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2503     03FF  00E3               	movwf	DHTRESULT@dht^(0+128)
  2504     0400  30EC               	movlw	(low (_COM| 0))& (0+255)
  2505     0401  00E4               	movwf	DHTRESULT@COM^(0+128)
  2506     0402  3002               	movlw	2
  2507     0403  318D  25F7  3182   	fcall	_DHTRESULT
  2508     0406                     l5991:
  2509                           
  2510                           ;main.c: 492:            meddone &= ~0x02;
  2511     0406  30FD               	movlw	253
  2512     0407  0021               	movlb	1	; select bank1
  2513     0408  05A2               	andwf	_meddone^(0+128),f
  2514     0409  30FF               	movlw	255
  2515     040A  05A3               	andwf	(_meddone+1)^(0+128),f
  2516     040B                     l5993:
  2517     040B  3032               	movlw	50
  2518     040C  063E               	xorwf	(_sport^(0+128)+1),w
  2519     040D  1D03               	btfss	3,2
  2520     040E  2C10               	goto	u4891
  2521     040F  2C11               	goto	u4890
  2522     0410                     u4891:
  2523     0410  2C2E               	goto	l6001
  2524     0411                     u4890:
  2525     0411                     l5995:
  2526     0411  0831               	movf	_i2busy^(0+128),w
  2527     0412  1D03               	btfss	3,2
  2528     0413  2C15               	goto	u4901
  2529     0414  2C16               	goto	u4900
  2530     0415                     u4901:
  2531     0415  2C2E               	goto	l6001
  2532     0416                     u4900:
  2533     0416                     l5997:
  2534                           
  2535                           ;main.c: 494:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x02, 2);
  2536     0416  308C               	movlw	140
  2537     0417  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2538     0418  3000               	movlw	0
  2539     0419  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2540     041A  300C               	movlw	12
  2541     041B  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2542     041C  3000               	movlw	0
  2543     041D  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2544     041E  300C               	movlw	12
  2545     041F  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2546     0420  3001               	movlw	1
  2547     0421  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2548     0422  3002               	movlw	2
  2549     0423  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  2550     0424  3002               	movlw	2
  2551     0425  00E7               	movwf	DS18B20_Read@entry^(0+128)
  2552     0426  318E  26DD  3182   	fcall	_DS18B20_Read
  2553     0429                     l5999:
  2554                           
  2555                           ;main.c: 495:            meddone &= ~0x02;
  2556     0429  30FD               	movlw	253
  2557     042A  0021               	movlb	1	; select bank1
  2558     042B  05A2               	andwf	_meddone^(0+128),f
  2559     042C  30FF               	movlw	255
  2560     042D  05A3               	andwf	(_meddone+1)^(0+128),f
  2561     042E                     l6001:
  2562     042E  3033               	movlw	51
  2563     042F  063E               	xorwf	(_sport^(0+128)+1),w
  2564     0430  1D03               	btfss	3,2
  2565     0431  2C33               	goto	u4911
  2566     0432  2C34               	goto	u4910
  2567     0433                     u4911:
  2568     0433  2C46               	goto	l6017
  2569     0434                     u4910:
  2570     0434                     l6003:
  2571     0434  0831               	movf	_i2busy^(0+128),w
  2572     0435  1D03               	btfss	3,2
  2573     0436  2C38               	goto	u4921
  2574     0437  2C39               	goto	u4920
  2575     0438                     u4921:
  2576     0438  2C46               	goto	l6017
  2577     0439                     u4920:
  2578     0439                     l6005:
  2579                           
  2580                           ;main.c: 497:            i2cfinish=0;
  2581     0439  01B5               	clrf	_i2cfinish^(0+128)
  2582     043A                     l6007:
  2583                           
  2584                           ;main.c: 498:            i2cbgin=1;
  2585     043A  01B6               	clrf	_i2cbgin^(0+128)
  2586     043B  0AB6               	incf	_i2cbgin^(0+128),f
  2587     043C                     l6009:
  2588                           
  2589                           ;main.c: 499:            i2select=1;
  2590     043C  01B2               	clrf	_i2select^(0+128)
  2591     043D  0AB2               	incf	_i2select^(0+128),f
  2592     043E                     l6011:
  2593                           
  2594                           ;main.c: 500:            i2busy=1;
  2595     043E  01B1               	clrf	_i2busy^(0+128)
  2596     043F  0AB1               	incf	_i2busy^(0+128),f
  2597     0440                     l6013:
  2598                           
  2599                           ;main.c: 501:            act_com=2;
  2600     0440  3002               	movlw	2
  2601     0441  00B0               	movwf	_act_com^(0+128)
  2602     0442                     l6015:
  2603                           
  2604                           ;main.c: 502:            meddone &= ~0x02;
  2605     0442  30FD               	movlw	253
  2606     0443  05A2               	andwf	_meddone^(0+128),f
  2607     0444  30FF               	movlw	255
  2608     0445  05A3               	andwf	(_meddone+1)^(0+128),f
  2609     0446                     l6017:
  2610     0446  3034               	movlw	52
  2611     0447  063E               	xorwf	(_sport^(0+128)+1),w
  2612     0448  1D03               	btfss	3,2
  2613     0449  2C4B               	goto	u4931
  2614     044A  2C4C               	goto	u4930
  2615     044B                     u4931:
  2616     044B  2C5E               	goto	l6033
  2617     044C                     u4930:
  2618     044C                     l6019:
  2619     044C  0831               	movf	_i2busy^(0+128),w
  2620     044D  1D03               	btfss	3,2
  2621     044E  2C50               	goto	u4941
  2622     044F  2C51               	goto	u4940
  2623     0450                     u4941:
  2624     0450  2C5E               	goto	l6033
  2625     0451                     u4940:
  2626     0451                     l6021:
  2627                           
  2628                           ;main.c: 504:            i2cfinish=0;
  2629     0451  01B5               	clrf	_i2cfinish^(0+128)
  2630     0452                     l6023:
  2631                           
  2632                           ;main.c: 505:            i2cbgin=1;
  2633     0452  01B6               	clrf	_i2cbgin^(0+128)
  2634     0453  0AB6               	incf	_i2cbgin^(0+128),f
  2635     0454                     l6025:
  2636                           
  2637                           ;main.c: 506:            i2select=2;
  2638     0454  3002               	movlw	2
  2639     0455  00B2               	movwf	_i2select^(0+128)
  2640     0456                     l6027:
  2641                           
  2642                           ;main.c: 507:            i2busy=1;
  2643     0456  01B1               	clrf	_i2busy^(0+128)
  2644     0457  0AB1               	incf	_i2busy^(0+128),f
  2645     0458                     l6029:
  2646                           
  2647                           ;main.c: 508:            act_com=2;
  2648     0458  3002               	movlw	2
  2649     0459  00B0               	movwf	_act_com^(0+128)
  2650     045A                     l6031:
  2651                           
  2652                           ;main.c: 509:            meddone &= ~0x02;
  2653     045A  30FD               	movlw	253
  2654     045B  05A2               	andwf	_meddone^(0+128),f
  2655     045C  30FF               	movlw	255
  2656     045D  05A3               	andwf	(_meddone+1)^(0+128),f
  2657     045E                     l6033:
  2658     045E  1D22               	btfss	_meddone^(0+128),2
  2659     045F  2C61               	goto	u4951
  2660     0460  2C62               	goto	u4950
  2661     0461                     u4951:
  2662     0461  2CD2               	goto	l6083
  2663     0462                     u4950:
  2664     0462                     l6035:
  2665                           
  2666                           ;main.c: 512:         if(sport[2]=='1' && i2busy==0){
  2667     0462  3031               	movlw	49
  2668     0463  063F               	xorwf	(_sport^(0+128)+2),w
  2669     0464  1D03               	btfss	3,2
  2670     0465  2C67               	goto	u4961
  2671     0466  2C68               	goto	u4960
  2672     0467                     u4961:
  2673     0467  2C7F               	goto	l6043
  2674     0468                     u4960:
  2675     0468                     l6037:
  2676     0468  0831               	movf	_i2busy^(0+128),w
  2677     0469  1D03               	btfss	3,2
  2678     046A  2C6C               	goto	u4971
  2679     046B  2C6D               	goto	u4970
  2680     046C                     u4971:
  2681     046C  2C7F               	goto	l6043
  2682     046D                     u4970:
  2683     046D                     l6039:
  2684                           
  2685                           ;main.c: 513:            DHTRESULT(0x04, 0, 3, TOUT, dhtresult, COM);
  2686     046D  01E0               	clrf	DHTRESULT@tris^(0+128)
  2687     046E  3003               	movlw	3
  2688     046F  00E1               	movwf	DHTRESULT@conector^(0+128)
  2689     0470  083A               	movf	_TOUT^(0+128),w
  2690     0471  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2691     0472  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2692     0473  00E3               	movwf	DHTRESULT@dht^(0+128)
  2693     0474  30EC               	movlw	(low (_COM| 0))& (0+255)
  2694     0475  00E4               	movwf	DHTRESULT@COM^(0+128)
  2695     0476  3004               	movlw	4
  2696     0477  318D  25F7  3182   	fcall	_DHTRESULT
  2697     047A                     l6041:
  2698                           
  2699                           ;main.c: 514:            meddone &= ~0x04;
  2700     047A  30FB               	movlw	251
  2701     047B  0021               	movlb	1	; select bank1
  2702     047C  05A2               	andwf	_meddone^(0+128),f
  2703     047D  30FF               	movlw	255
  2704     047E  05A3               	andwf	(_meddone+1)^(0+128),f
  2705     047F                     l6043:
  2706     047F  3032               	movlw	50
  2707     0480  063F               	xorwf	(_sport^(0+128)+2),w
  2708     0481  1D03               	btfss	3,2
  2709     0482  2C84               	goto	u4981
  2710     0483  2C85               	goto	u4980
  2711     0484                     u4981:
  2712     0484  2CA2               	goto	l6051
  2713     0485                     u4980:
  2714     0485                     l6045:
  2715     0485  0831               	movf	_i2busy^(0+128),w
  2716     0486  1D03               	btfss	3,2
  2717     0487  2C89               	goto	u4991
  2718     0488  2C8A               	goto	u4990
  2719     0489                     u4991:
  2720     0489  2CA2               	goto	l6051
  2721     048A                     u4990:
  2722     048A                     l6047:
  2723                           
  2724                           ;main.c: 516:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x04, 3);
  2725     048A  308C               	movlw	140
  2726     048B  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2727     048C  3000               	movlw	0
  2728     048D  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2729     048E  300C               	movlw	12
  2730     048F  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2731     0490  3000               	movlw	0
  2732     0491  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2733     0492  300C               	movlw	12
  2734     0493  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2735     0494  3001               	movlw	1
  2736     0495  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2737     0496  3004               	movlw	4
  2738     0497  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  2739     0498  3003               	movlw	3
  2740     0499  00E7               	movwf	DS18B20_Read@entry^(0+128)
  2741     049A  318E  26DD  3182   	fcall	_DS18B20_Read
  2742     049D                     l6049:
  2743                           
  2744                           ;main.c: 517:            meddone &= ~0x04;
  2745     049D  30FB               	movlw	251
  2746     049E  0021               	movlb	1	; select bank1
  2747     049F  05A2               	andwf	_meddone^(0+128),f
  2748     04A0  30FF               	movlw	255
  2749     04A1  05A3               	andwf	(_meddone+1)^(0+128),f
  2750     04A2                     l6051:
  2751     04A2  3033               	movlw	51
  2752     04A3  063F               	xorwf	(_sport^(0+128)+2),w
  2753     04A4  1D03               	btfss	3,2
  2754     04A5  2CA7               	goto	u5001
  2755     04A6  2CA8               	goto	u5000
  2756     04A7                     u5001:
  2757     04A7  2CBA               	goto	l6067
  2758     04A8                     u5000:
  2759     04A8                     l6053:
  2760     04A8  0831               	movf	_i2busy^(0+128),w
  2761     04A9  1D03               	btfss	3,2
  2762     04AA  2CAC               	goto	u5011
  2763     04AB  2CAD               	goto	u5010
  2764     04AC                     u5011:
  2765     04AC  2CBA               	goto	l6067
  2766     04AD                     u5010:
  2767     04AD                     l6055:
  2768                           
  2769                           ;main.c: 519:            i2cfinish=0;
  2770     04AD  01B5               	clrf	_i2cfinish^(0+128)
  2771     04AE                     l6057:
  2772                           
  2773                           ;main.c: 520:            i2cbgin=1;
  2774     04AE  01B6               	clrf	_i2cbgin^(0+128)
  2775     04AF  0AB6               	incf	_i2cbgin^(0+128),f
  2776     04B0                     l6059:
  2777                           
  2778                           ;main.c: 521:            i2select=1;
  2779     04B0  01B2               	clrf	_i2select^(0+128)
  2780     04B1  0AB2               	incf	_i2select^(0+128),f
  2781     04B2                     l6061:
  2782                           
  2783                           ;main.c: 522:            i2busy=1;
  2784     04B2  01B1               	clrf	_i2busy^(0+128)
  2785     04B3  0AB1               	incf	_i2busy^(0+128),f
  2786     04B4                     l6063:
  2787                           
  2788                           ;main.c: 523:            act_com=3;
  2789     04B4  3003               	movlw	3
  2790     04B5  00B0               	movwf	_act_com^(0+128)
  2791     04B6                     l6065:
  2792                           
  2793                           ;main.c: 524:            meddone &= ~0x04;
  2794     04B6  30FB               	movlw	251
  2795     04B7  05A2               	andwf	_meddone^(0+128),f
  2796     04B8  30FF               	movlw	255
  2797     04B9  05A3               	andwf	(_meddone+1)^(0+128),f
  2798     04BA                     l6067:
  2799     04BA  3034               	movlw	52
  2800     04BB  063F               	xorwf	(_sport^(0+128)+2),w
  2801     04BC  1D03               	btfss	3,2
  2802     04BD  2CBF               	goto	u5021
  2803     04BE  2CC0               	goto	u5020
  2804     04BF                     u5021:
  2805     04BF  2CD2               	goto	l6083
  2806     04C0                     u5020:
  2807     04C0                     l6069:
  2808     04C0  0831               	movf	_i2busy^(0+128),w
  2809     04C1  1D03               	btfss	3,2
  2810     04C2  2CC4               	goto	u5031
  2811     04C3  2CC5               	goto	u5030
  2812     04C4                     u5031:
  2813     04C4  2CD2               	goto	l6083
  2814     04C5                     u5030:
  2815     04C5                     l6071:
  2816                           
  2817                           ;main.c: 526:            i2cfinish=0;
  2818     04C5  01B5               	clrf	_i2cfinish^(0+128)
  2819     04C6                     l6073:
  2820                           
  2821                           ;main.c: 527:            i2cbgin=1;
  2822     04C6  01B6               	clrf	_i2cbgin^(0+128)
  2823     04C7  0AB6               	incf	_i2cbgin^(0+128),f
  2824     04C8                     l6075:
  2825                           
  2826                           ;main.c: 528:            i2select=2;
  2827     04C8  3002               	movlw	2
  2828     04C9  00B2               	movwf	_i2select^(0+128)
  2829     04CA                     l6077:
  2830                           
  2831                           ;main.c: 529:            i2busy=1;
  2832     04CA  01B1               	clrf	_i2busy^(0+128)
  2833     04CB  0AB1               	incf	_i2busy^(0+128),f
  2834     04CC                     l6079:
  2835                           
  2836                           ;main.c: 530:            act_com=3;
  2837     04CC  3003               	movlw	3
  2838     04CD  00B0               	movwf	_act_com^(0+128)
  2839     04CE                     l6081:
  2840                           
  2841                           ;main.c: 531:            meddone &= ~0x04;
  2842     04CE  30FB               	movlw	251
  2843     04CF  05A2               	andwf	_meddone^(0+128),f
  2844     04D0  30FF               	movlw	255
  2845     04D1  05A3               	andwf	(_meddone+1)^(0+128),f
  2846     04D2                     l6083:
  2847     04D2  1DA2               	btfss	_meddone^(0+128),3
  2848     04D3  2CD5               	goto	u5041
  2849     04D4  2CD6               	goto	u5040
  2850     04D5                     u5041:
  2851     04D5  2D46               	goto	l6133
  2852     04D6                     u5040:
  2853     04D6                     l6085:
  2854                           
  2855                           ;main.c: 534:         if(sport[3]=='1' && i2busy==0){
  2856     04D6  3031               	movlw	49
  2857     04D7  0640               	xorwf	(_sport^(0+128)+3),w
  2858     04D8  1D03               	btfss	3,2
  2859     04D9  2CDB               	goto	u5051
  2860     04DA  2CDC               	goto	u5050
  2861     04DB                     u5051:
  2862     04DB  2CF3               	goto	l6093
  2863     04DC                     u5050:
  2864     04DC                     l6087:
  2865     04DC  0831               	movf	_i2busy^(0+128),w
  2866     04DD  1D03               	btfss	3,2
  2867     04DE  2CE0               	goto	u5061
  2868     04DF  2CE1               	goto	u5060
  2869     04E0                     u5061:
  2870     04E0  2CF3               	goto	l6093
  2871     04E1                     u5060:
  2872     04E1                     l6089:
  2873                           
  2874                           ;main.c: 535:            DHTRESULT(0x08, 0, 4, TOUT, dhtresult, COM);
  2875     04E1  01E0               	clrf	DHTRESULT@tris^(0+128)
  2876     04E2  3004               	movlw	4
  2877     04E3  00E1               	movwf	DHTRESULT@conector^(0+128)
  2878     04E4  083A               	movf	_TOUT^(0+128),w
  2879     04E5  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  2880     04E6  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  2881     04E7  00E3               	movwf	DHTRESULT@dht^(0+128)
  2882     04E8  30EC               	movlw	(low (_COM| 0))& (0+255)
  2883     04E9  00E4               	movwf	DHTRESULT@COM^(0+128)
  2884     04EA  3008               	movlw	8
  2885     04EB  318D  25F7  3182   	fcall	_DHTRESULT
  2886     04EE                     l6091:
  2887                           
  2888                           ;main.c: 536:            meddone &= ~0x08;
  2889     04EE  30F7               	movlw	247
  2890     04EF  0021               	movlb	1	; select bank1
  2891     04F0  05A2               	andwf	_meddone^(0+128),f
  2892     04F1  30FF               	movlw	255
  2893     04F2  05A3               	andwf	(_meddone+1)^(0+128),f
  2894     04F3                     l6093:
  2895     04F3  3032               	movlw	50
  2896     04F4  0640               	xorwf	(_sport^(0+128)+3),w
  2897     04F5  1D03               	btfss	3,2
  2898     04F6  2CF8               	goto	u5071
  2899     04F7  2CF9               	goto	u5070
  2900     04F8                     u5071:
  2901     04F8  2D16               	goto	l6101
  2902     04F9                     u5070:
  2903     04F9                     l6095:
  2904     04F9  0831               	movf	_i2busy^(0+128),w
  2905     04FA  1D03               	btfss	3,2
  2906     04FB  2CFD               	goto	u5081
  2907     04FC  2CFE               	goto	u5080
  2908     04FD                     u5081:
  2909     04FD  2D16               	goto	l6101
  2910     04FE                     u5080:
  2911     04FE                     l6097:
  2912                           
  2913                           ;main.c: 538:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x08, 4);
  2914     04FE  308C               	movlw	140
  2915     04FF  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  2916     0500  3000               	movlw	0
  2917     0501  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  2918     0502  300C               	movlw	12
  2919     0503  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  2920     0504  3000               	movlw	0
  2921     0505  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  2922     0506  300C               	movlw	12
  2923     0507  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  2924     0508  3001               	movlw	1
  2925     0509  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  2926     050A  3008               	movlw	8
  2927     050B  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  2928     050C  3004               	movlw	4
  2929     050D  00E7               	movwf	DS18B20_Read@entry^(0+128)
  2930     050E  318E  26DD  3182   	fcall	_DS18B20_Read
  2931     0511                     l6099:
  2932                           
  2933                           ;main.c: 539:            meddone &= ~0x08;
  2934     0511  30F7               	movlw	247
  2935     0512  0021               	movlb	1	; select bank1
  2936     0513  05A2               	andwf	_meddone^(0+128),f
  2937     0514  30FF               	movlw	255
  2938     0515  05A3               	andwf	(_meddone+1)^(0+128),f
  2939     0516                     l6101:
  2940     0516  3033               	movlw	51
  2941     0517  0640               	xorwf	(_sport^(0+128)+3),w
  2942     0518  1D03               	btfss	3,2
  2943     0519  2D1B               	goto	u5091
  2944     051A  2D1C               	goto	u5090
  2945     051B                     u5091:
  2946     051B  2D2E               	goto	l6117
  2947     051C                     u5090:
  2948     051C                     l6103:
  2949     051C  0831               	movf	_i2busy^(0+128),w
  2950     051D  1D03               	btfss	3,2
  2951     051E  2D20               	goto	u5101
  2952     051F  2D21               	goto	u5100
  2953     0520                     u5101:
  2954     0520  2D2E               	goto	l6117
  2955     0521                     u5100:
  2956     0521                     l6105:
  2957                           
  2958                           ;main.c: 541:            i2cfinish=0;
  2959     0521  01B5               	clrf	_i2cfinish^(0+128)
  2960     0522                     l6107:
  2961                           
  2962                           ;main.c: 542:            i2cbgin=1;
  2963     0522  01B6               	clrf	_i2cbgin^(0+128)
  2964     0523  0AB6               	incf	_i2cbgin^(0+128),f
  2965     0524                     l6109:
  2966                           
  2967                           ;main.c: 543:            i2select=1;
  2968     0524  01B2               	clrf	_i2select^(0+128)
  2969     0525  0AB2               	incf	_i2select^(0+128),f
  2970     0526                     l6111:
  2971                           
  2972                           ;main.c: 544:            i2busy=1;
  2973     0526  01B1               	clrf	_i2busy^(0+128)
  2974     0527  0AB1               	incf	_i2busy^(0+128),f
  2975     0528                     l6113:
  2976                           
  2977                           ;main.c: 545:            act_com=4;
  2978     0528  3004               	movlw	4
  2979     0529  00B0               	movwf	_act_com^(0+128)
  2980     052A                     l6115:
  2981                           
  2982                           ;main.c: 546:            meddone &= ~0x08;
  2983     052A  30F7               	movlw	247
  2984     052B  05A2               	andwf	_meddone^(0+128),f
  2985     052C  30FF               	movlw	255
  2986     052D  05A3               	andwf	(_meddone+1)^(0+128),f
  2987     052E                     l6117:
  2988     052E  3034               	movlw	52
  2989     052F  0640               	xorwf	(_sport^(0+128)+3),w
  2990     0530  1D03               	btfss	3,2
  2991     0531  2D33               	goto	u5111
  2992     0532  2D34               	goto	u5110
  2993     0533                     u5111:
  2994     0533  2D46               	goto	l6133
  2995     0534                     u5110:
  2996     0534                     l6119:
  2997     0534  0831               	movf	_i2busy^(0+128),w
  2998     0535  1D03               	btfss	3,2
  2999     0536  2D38               	goto	u5121
  3000     0537  2D39               	goto	u5120
  3001     0538                     u5121:
  3002     0538  2D46               	goto	l6133
  3003     0539                     u5120:
  3004     0539                     l6121:
  3005                           
  3006                           ;main.c: 548:            i2cfinish=0;
  3007     0539  01B5               	clrf	_i2cfinish^(0+128)
  3008     053A                     l6123:
  3009                           
  3010                           ;main.c: 549:            i2cbgin=1;
  3011     053A  01B6               	clrf	_i2cbgin^(0+128)
  3012     053B  0AB6               	incf	_i2cbgin^(0+128),f
  3013     053C                     l6125:
  3014                           
  3015                           ;main.c: 550:            i2select=2;
  3016     053C  3002               	movlw	2
  3017     053D  00B2               	movwf	_i2select^(0+128)
  3018     053E                     l6127:
  3019                           
  3020                           ;main.c: 551:            i2busy=1;
  3021     053E  01B1               	clrf	_i2busy^(0+128)
  3022     053F  0AB1               	incf	_i2busy^(0+128),f
  3023     0540                     l6129:
  3024                           
  3025                           ;main.c: 552:            act_com=4;
  3026     0540  3004               	movlw	4
  3027     0541  00B0               	movwf	_act_com^(0+128)
  3028     0542                     l6131:
  3029                           
  3030                           ;main.c: 553:            meddone &= ~0x08;
  3031     0542  30F7               	movlw	247
  3032     0543  05A2               	andwf	_meddone^(0+128),f
  3033     0544  30FF               	movlw	255
  3034     0545  05A3               	andwf	(_meddone+1)^(0+128),f
  3035     0546                     l6133:
  3036     0546  1E22               	btfss	_meddone^(0+128),4
  3037     0547  2D49               	goto	u5131
  3038     0548  2D4A               	goto	u5130
  3039     0549                     u5131:
  3040     0549  2DBA               	goto	l6183
  3041     054A                     u5130:
  3042     054A                     l6135:
  3043                           
  3044                           ;main.c: 556:         if(sport[4]=='1' && i2busy==0){
  3045     054A  3031               	movlw	49
  3046     054B  0641               	xorwf	(_sport^(0+128)+4),w
  3047     054C  1D03               	btfss	3,2
  3048     054D  2D4F               	goto	u5141
  3049     054E  2D50               	goto	u5140
  3050     054F                     u5141:
  3051     054F  2D67               	goto	l6143
  3052     0550                     u5140:
  3053     0550                     l6137:
  3054     0550  0831               	movf	_i2busy^(0+128),w
  3055     0551  1D03               	btfss	3,2
  3056     0552  2D54               	goto	u5151
  3057     0553  2D55               	goto	u5150
  3058     0554                     u5151:
  3059     0554  2D67               	goto	l6143
  3060     0555                     u5150:
  3061     0555                     l6139:
  3062                           
  3063                           ;main.c: 557:            DHTRESULT(0x10, 0, 5, TOUT, dhtresult, COM);
  3064     0555  01E0               	clrf	DHTRESULT@tris^(0+128)
  3065     0556  3005               	movlw	5
  3066     0557  00E1               	movwf	DHTRESULT@conector^(0+128)
  3067     0558  083A               	movf	_TOUT^(0+128),w
  3068     0559  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3069     055A  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3070     055B  00E3               	movwf	DHTRESULT@dht^(0+128)
  3071     055C  30EC               	movlw	(low (_COM| 0))& (0+255)
  3072     055D  00E4               	movwf	DHTRESULT@COM^(0+128)
  3073     055E  3010               	movlw	16
  3074     055F  318D  25F7  3182   	fcall	_DHTRESULT
  3075     0562                     l6141:
  3076                           
  3077                           ;main.c: 558:            meddone &= ~0x10 ;
  3078     0562  30EF               	movlw	239
  3079     0563  0021               	movlb	1	; select bank1
  3080     0564  05A2               	andwf	_meddone^(0+128),f
  3081     0565  30FF               	movlw	255
  3082     0566  05A3               	andwf	(_meddone+1)^(0+128),f
  3083     0567                     l6143:
  3084     0567  3032               	movlw	50
  3085     0568  0641               	xorwf	(_sport^(0+128)+4),w
  3086     0569  1D03               	btfss	3,2
  3087     056A  2D6C               	goto	u5161
  3088     056B  2D6D               	goto	u5160
  3089     056C                     u5161:
  3090     056C  2D8A               	goto	l6151
  3091     056D                     u5160:
  3092     056D                     l6145:
  3093     056D  0831               	movf	_i2busy^(0+128),w
  3094     056E  1D03               	btfss	3,2
  3095     056F  2D71               	goto	u5171
  3096     0570  2D72               	goto	u5170
  3097     0571                     u5171:
  3098     0571  2D8A               	goto	l6151
  3099     0572                     u5170:
  3100     0572                     l6147:
  3101                           
  3102                           ;main.c: 560:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x10, 5);
  3103     0572  308C               	movlw	140
  3104     0573  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3105     0574  3000               	movlw	0
  3106     0575  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3107     0576  300C               	movlw	12
  3108     0577  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3109     0578  3000               	movlw	0
  3110     0579  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3111     057A  300C               	movlw	12
  3112     057B  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3113     057C  3001               	movlw	1
  3114     057D  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3115     057E  3010               	movlw	16
  3116     057F  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3117     0580  3005               	movlw	5
  3118     0581  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3119     0582  318E  26DD  3182   	fcall	_DS18B20_Read
  3120     0585                     l6149:
  3121                           
  3122                           ;main.c: 561:            meddone &= ~0x10 ;
  3123     0585  30EF               	movlw	239
  3124     0586  0021               	movlb	1	; select bank1
  3125     0587  05A2               	andwf	_meddone^(0+128),f
  3126     0588  30FF               	movlw	255
  3127     0589  05A3               	andwf	(_meddone+1)^(0+128),f
  3128     058A                     l6151:
  3129     058A  3033               	movlw	51
  3130     058B  0641               	xorwf	(_sport^(0+128)+4),w
  3131     058C  1D03               	btfss	3,2
  3132     058D  2D8F               	goto	u5181
  3133     058E  2D90               	goto	u5180
  3134     058F                     u5181:
  3135     058F  2DA2               	goto	l6167
  3136     0590                     u5180:
  3137     0590                     l6153:
  3138     0590  0831               	movf	_i2busy^(0+128),w
  3139     0591  1D03               	btfss	3,2
  3140     0592  2D94               	goto	u5191
  3141     0593  2D95               	goto	u5190
  3142     0594                     u5191:
  3143     0594  2DA2               	goto	l6167
  3144     0595                     u5190:
  3145     0595                     l6155:
  3146                           
  3147                           ;main.c: 563:            i2cfinish=0;
  3148     0595  01B5               	clrf	_i2cfinish^(0+128)
  3149     0596                     l6157:
  3150                           
  3151                           ;main.c: 564:            i2cbgin=1;
  3152     0596  01B6               	clrf	_i2cbgin^(0+128)
  3153     0597  0AB6               	incf	_i2cbgin^(0+128),f
  3154     0598                     l6159:
  3155                           
  3156                           ;main.c: 565:            i2select=1;
  3157     0598  01B2               	clrf	_i2select^(0+128)
  3158     0599  0AB2               	incf	_i2select^(0+128),f
  3159     059A                     l6161:
  3160                           
  3161                           ;main.c: 566:            i2busy=1;
  3162     059A  01B1               	clrf	_i2busy^(0+128)
  3163     059B  0AB1               	incf	_i2busy^(0+128),f
  3164     059C                     l6163:
  3165                           
  3166                           ;main.c: 567:            act_com=5;
  3167     059C  3005               	movlw	5
  3168     059D  00B0               	movwf	_act_com^(0+128)
  3169     059E                     l6165:
  3170                           
  3171                           ;main.c: 568:            meddone &= ~0x10;
  3172     059E  30EF               	movlw	239
  3173     059F  05A2               	andwf	_meddone^(0+128),f
  3174     05A0  30FF               	movlw	255
  3175     05A1  05A3               	andwf	(_meddone+1)^(0+128),f
  3176     05A2                     l6167:
  3177     05A2  3034               	movlw	52
  3178     05A3  0641               	xorwf	(_sport^(0+128)+4),w
  3179     05A4  1D03               	btfss	3,2
  3180     05A5  2DA7               	goto	u5201
  3181     05A6  2DA8               	goto	u5200
  3182     05A7                     u5201:
  3183     05A7  2DBA               	goto	l6183
  3184     05A8                     u5200:
  3185     05A8                     l6169:
  3186     05A8  0831               	movf	_i2busy^(0+128),w
  3187     05A9  1D03               	btfss	3,2
  3188     05AA  2DAC               	goto	u5211
  3189     05AB  2DAD               	goto	u5210
  3190     05AC                     u5211:
  3191     05AC  2DBA               	goto	l6183
  3192     05AD                     u5210:
  3193     05AD                     l6171:
  3194                           
  3195                           ;main.c: 570:            i2cfinish=0;
  3196     05AD  01B5               	clrf	_i2cfinish^(0+128)
  3197     05AE                     l6173:
  3198                           
  3199                           ;main.c: 571:            i2cbgin=1;
  3200     05AE  01B6               	clrf	_i2cbgin^(0+128)
  3201     05AF  0AB6               	incf	_i2cbgin^(0+128),f
  3202     05B0                     l6175:
  3203                           
  3204                           ;main.c: 572:            i2select=2;
  3205     05B0  3002               	movlw	2
  3206     05B1  00B2               	movwf	_i2select^(0+128)
  3207     05B2                     l6177:
  3208                           
  3209                           ;main.c: 573:            i2busy=1;
  3210     05B2  01B1               	clrf	_i2busy^(0+128)
  3211     05B3  0AB1               	incf	_i2busy^(0+128),f
  3212     05B4                     l6179:
  3213                           
  3214                           ;main.c: 574:            act_com=5;
  3215     05B4  3005               	movlw	5
  3216     05B5  00B0               	movwf	_act_com^(0+128)
  3217     05B6                     l6181:
  3218                           
  3219                           ;main.c: 575:            meddone &= ~0x10;
  3220     05B6  30EF               	movlw	239
  3221     05B7  05A2               	andwf	_meddone^(0+128),f
  3222     05B8  30FF               	movlw	255
  3223     05B9  05A3               	andwf	(_meddone+1)^(0+128),f
  3224     05BA                     l6183:
  3225     05BA  1EA2               	btfss	_meddone^(0+128),5
  3226     05BB  2DBD               	goto	u5221
  3227     05BC  2DBE               	goto	u5220
  3228     05BD                     u5221:
  3229     05BD  2E2F               	goto	l6233
  3230     05BE                     u5220:
  3231     05BE                     l6185:
  3232                           
  3233                           ;main.c: 578:         if(sport[5]=='1' && i2busy==0){
  3234     05BE  3031               	movlw	49
  3235     05BF  0642               	xorwf	(_sport^(0+128)+5),w
  3236     05C0  1D03               	btfss	3,2
  3237     05C1  2DC3               	goto	u5231
  3238     05C2  2DC4               	goto	u5230
  3239     05C3                     u5231:
  3240     05C3  2DDC               	goto	l6193
  3241     05C4                     u5230:
  3242     05C4                     l6187:
  3243     05C4  0831               	movf	_i2busy^(0+128),w
  3244     05C5  1D03               	btfss	3,2
  3245     05C6  2DC8               	goto	u5241
  3246     05C7  2DC9               	goto	u5240
  3247     05C8                     u5241:
  3248     05C8  2DDC               	goto	l6193
  3249     05C9                     u5240:
  3250     05C9                     l6189:
  3251                           
  3252                           ;main.c: 579:            DHTRESULT(0x01, 1, 6, TOUT, dhtresult, COM);
  3253     05C9  01E0               	clrf	DHTRESULT@tris^(0+128)
  3254     05CA  0AE0               	incf	DHTRESULT@tris^(0+128),f
  3255     05CB  3006               	movlw	6
  3256     05CC  00E1               	movwf	DHTRESULT@conector^(0+128)
  3257     05CD  083A               	movf	_TOUT^(0+128),w
  3258     05CE  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3259     05CF  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3260     05D0  00E3               	movwf	DHTRESULT@dht^(0+128)
  3261     05D1  30EC               	movlw	(low (_COM| 0))& (0+255)
  3262     05D2  00E4               	movwf	DHTRESULT@COM^(0+128)
  3263     05D3  3001               	movlw	1
  3264     05D4  318D  25F7  3182   	fcall	_DHTRESULT
  3265     05D7                     l6191:
  3266                           
  3267                           ;main.c: 580:            meddone &= ~0x20 ;
  3268     05D7  30DF               	movlw	223
  3269     05D8  0021               	movlb	1	; select bank1
  3270     05D9  05A2               	andwf	_meddone^(0+128),f
  3271     05DA  30FF               	movlw	255
  3272     05DB  05A3               	andwf	(_meddone+1)^(0+128),f
  3273     05DC                     l6193:
  3274     05DC  3032               	movlw	50
  3275     05DD  0642               	xorwf	(_sport^(0+128)+5),w
  3276     05DE  1D03               	btfss	3,2
  3277     05DF  2DE1               	goto	u5251
  3278     05E0  2DE2               	goto	u5250
  3279     05E1                     u5251:
  3280     05E1  2DFF               	goto	l6201
  3281     05E2                     u5250:
  3282     05E2                     l6195:
  3283     05E2  0831               	movf	_i2busy^(0+128),w
  3284     05E3  1D03               	btfss	3,2
  3285     05E4  2DE6               	goto	u5261
  3286     05E5  2DE7               	goto	u5260
  3287     05E6                     u5261:
  3288     05E6  2DFF               	goto	l6201
  3289     05E7                     u5260:
  3290     05E7                     l6197:
  3291                           
  3292                           ;main.c: 582:            DS18B20_Read(&TRISC, &PORTC, &LATC, 0x01, 6);
  3293     05E7  308E               	movlw	142
  3294     05E8  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3295     05E9  3000               	movlw	0
  3296     05EA  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3297     05EB  300E               	movlw	14
  3298     05EC  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3299     05ED  3000               	movlw	0
  3300     05EE  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3301     05EF  300E               	movlw	14
  3302     05F0  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3303     05F1  3001               	movlw	1
  3304     05F2  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3305     05F3  01E6               	clrf	DS18B20_Read@PIN^(0+128)
  3306     05F4  0AE6               	incf	DS18B20_Read@PIN^(0+128),f
  3307     05F5  3006               	movlw	6
  3308     05F6  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3309     05F7  318E  26DD  3182   	fcall	_DS18B20_Read
  3310     05FA                     l6199:
  3311                           
  3312                           ;main.c: 583:            meddone &= ~0x20 ;
  3313     05FA  30DF               	movlw	223
  3314     05FB  0021               	movlb	1	; select bank1
  3315     05FC  05A2               	andwf	_meddone^(0+128),f
  3316     05FD  30FF               	movlw	255
  3317     05FE  05A3               	andwf	(_meddone+1)^(0+128),f
  3318     05FF                     l6201:
  3319     05FF  3033               	movlw	51
  3320     0600  0642               	xorwf	(_sport^(0+128)+5),w
  3321     0601  1D03               	btfss	3,2
  3322     0602  2E04               	goto	u5271
  3323     0603  2E05               	goto	u5270
  3324     0604                     u5271:
  3325     0604  2E17               	goto	l6217
  3326     0605                     u5270:
  3327     0605                     l6203:
  3328     0605  0831               	movf	_i2busy^(0+128),w
  3329     0606  1D03               	btfss	3,2
  3330     0607  2E09               	goto	u5281
  3331     0608  2E0A               	goto	u5280
  3332     0609                     u5281:
  3333     0609  2E17               	goto	l6217
  3334     060A                     u5280:
  3335     060A                     l6205:
  3336                           
  3337                           ;main.c: 585:            i2cfinish=0;
  3338     060A  01B5               	clrf	_i2cfinish^(0+128)
  3339     060B                     l6207:
  3340                           
  3341                           ;main.c: 586:            i2cbgin=1;
  3342     060B  01B6               	clrf	_i2cbgin^(0+128)
  3343     060C  0AB6               	incf	_i2cbgin^(0+128),f
  3344     060D                     l6209:
  3345                           
  3346                           ;main.c: 587:            i2select=1;
  3347     060D  01B2               	clrf	_i2select^(0+128)
  3348     060E  0AB2               	incf	_i2select^(0+128),f
  3349     060F                     l6211:
  3350                           
  3351                           ;main.c: 588:            i2busy=1;
  3352     060F  01B1               	clrf	_i2busy^(0+128)
  3353     0610  0AB1               	incf	_i2busy^(0+128),f
  3354     0611                     l6213:
  3355                           
  3356                           ;main.c: 589:            act_com=6;
  3357     0611  3006               	movlw	6
  3358     0612  00B0               	movwf	_act_com^(0+128)
  3359     0613                     l6215:
  3360                           
  3361                           ;main.c: 590:            meddone &= ~0x20;
  3362     0613  30DF               	movlw	223
  3363     0614  05A2               	andwf	_meddone^(0+128),f
  3364     0615  30FF               	movlw	255
  3365     0616  05A3               	andwf	(_meddone+1)^(0+128),f
  3366     0617                     l6217:
  3367     0617  3034               	movlw	52
  3368     0618  0642               	xorwf	(_sport^(0+128)+5),w
  3369     0619  1D03               	btfss	3,2
  3370     061A  2E1C               	goto	u5291
  3371     061B  2E1D               	goto	u5290
  3372     061C                     u5291:
  3373     061C  2E2F               	goto	l6233
  3374     061D                     u5290:
  3375     061D                     l6219:
  3376     061D  0831               	movf	_i2busy^(0+128),w
  3377     061E  1D03               	btfss	3,2
  3378     061F  2E21               	goto	u5301
  3379     0620  2E22               	goto	u5300
  3380     0621                     u5301:
  3381     0621  2E2F               	goto	l6233
  3382     0622                     u5300:
  3383     0622                     l6221:
  3384                           
  3385                           ;main.c: 592:            i2cfinish=0;
  3386     0622  01B5               	clrf	_i2cfinish^(0+128)
  3387     0623                     l6223:
  3388                           
  3389                           ;main.c: 593:            i2cbgin=1;
  3390     0623  01B6               	clrf	_i2cbgin^(0+128)
  3391     0624  0AB6               	incf	_i2cbgin^(0+128),f
  3392     0625                     l6225:
  3393                           
  3394                           ;main.c: 594:            i2select=2;
  3395     0625  3002               	movlw	2
  3396     0626  00B2               	movwf	_i2select^(0+128)
  3397     0627                     l6227:
  3398                           
  3399                           ;main.c: 595:            i2busy=1;
  3400     0627  01B1               	clrf	_i2busy^(0+128)
  3401     0628  0AB1               	incf	_i2busy^(0+128),f
  3402     0629                     l6229:
  3403                           
  3404                           ;main.c: 596:            act_com=6;
  3405     0629  3006               	movlw	6
  3406     062A  00B0               	movwf	_act_com^(0+128)
  3407     062B                     l6231:
  3408                           
  3409                           ;main.c: 597:            meddone &= ~0x20;
  3410     062B  30DF               	movlw	223
  3411     062C  05A2               	andwf	_meddone^(0+128),f
  3412     062D  30FF               	movlw	255
  3413     062E  05A3               	andwf	(_meddone+1)^(0+128),f
  3414     062F                     l6233:
  3415     062F  1F22               	btfss	_meddone^(0+128),6
  3416     0630  2E32               	goto	u5311
  3417     0631  2E33               	goto	u5310
  3418     0632                     u5311:
  3419     0632  2EA3               	goto	l6283
  3420     0633                     u5310:
  3421     0633                     l6235:
  3422                           
  3423                           ;main.c: 600:         if(sport[6]=='1' && i2busy==0){
  3424     0633  3031               	movlw	49
  3425     0634  0643               	xorwf	(_sport^(0+128)+6),w
  3426     0635  1D03               	btfss	3,2
  3427     0636  2E38               	goto	u5321
  3428     0637  2E39               	goto	u5320
  3429     0638                     u5321:
  3430     0638  2E50               	goto	l6243
  3431     0639                     u5320:
  3432     0639                     l6237:
  3433     0639  0831               	movf	_i2busy^(0+128),w
  3434     063A  1D03               	btfss	3,2
  3435     063B  2E3D               	goto	u5331
  3436     063C  2E3E               	goto	u5330
  3437     063D                     u5331:
  3438     063D  2E50               	goto	l6243
  3439     063E                     u5330:
  3440     063E                     l6239:
  3441                           
  3442                           ;main.c: 601:            DHTRESULT(0x40, 0, 7, TOUT, dhtresult, COM);
  3443     063E  01E0               	clrf	DHTRESULT@tris^(0+128)
  3444     063F  3007               	movlw	7
  3445     0640  00E1               	movwf	DHTRESULT@conector^(0+128)
  3446     0641  083A               	movf	_TOUT^(0+128),w
  3447     0642  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3448     0643  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3449     0644  00E3               	movwf	DHTRESULT@dht^(0+128)
  3450     0645  30EC               	movlw	(low (_COM| 0))& (0+255)
  3451     0646  00E4               	movwf	DHTRESULT@COM^(0+128)
  3452     0647  3040               	movlw	64
  3453     0648  318D  25F7  3182   	fcall	_DHTRESULT
  3454     064B                     l6241:
  3455                           
  3456                           ;main.c: 602:            meddone &= ~0x40 ;
  3457     064B  30BF               	movlw	191
  3458     064C  0021               	movlb	1	; select bank1
  3459     064D  05A2               	andwf	_meddone^(0+128),f
  3460     064E  30FF               	movlw	255
  3461     064F  05A3               	andwf	(_meddone+1)^(0+128),f
  3462     0650                     l6243:
  3463     0650  3032               	movlw	50
  3464     0651  0643               	xorwf	(_sport^(0+128)+6),w
  3465     0652  1D03               	btfss	3,2
  3466     0653  2E55               	goto	u5341
  3467     0654  2E56               	goto	u5340
  3468     0655                     u5341:
  3469     0655  2E73               	goto	l6251
  3470     0656                     u5340:
  3471     0656                     l6245:
  3472     0656  0831               	movf	_i2busy^(0+128),w
  3473     0657  1D03               	btfss	3,2
  3474     0658  2E5A               	goto	u5351
  3475     0659  2E5B               	goto	u5350
  3476     065A                     u5351:
  3477     065A  2E73               	goto	l6251
  3478     065B                     u5350:
  3479     065B                     l6247:
  3480                           
  3481                           ;main.c: 604:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x40, 7);
  3482     065B  308C               	movlw	140
  3483     065C  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3484     065D  3000               	movlw	0
  3485     065E  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3486     065F  300C               	movlw	12
  3487     0660  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3488     0661  3000               	movlw	0
  3489     0662  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3490     0663  300C               	movlw	12
  3491     0664  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3492     0665  3001               	movlw	1
  3493     0666  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3494     0667  3040               	movlw	64
  3495     0668  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3496     0669  3007               	movlw	7
  3497     066A  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3498     066B  318E  26DD  3182   	fcall	_DS18B20_Read
  3499     066E                     l6249:
  3500                           
  3501                           ;main.c: 605:            meddone &= ~0x40 ;
  3502     066E  30BF               	movlw	191
  3503     066F  0021               	movlb	1	; select bank1
  3504     0670  05A2               	andwf	_meddone^(0+128),f
  3505     0671  30FF               	movlw	255
  3506     0672  05A3               	andwf	(_meddone+1)^(0+128),f
  3507     0673                     l6251:
  3508     0673  3033               	movlw	51
  3509     0674  0643               	xorwf	(_sport^(0+128)+6),w
  3510     0675  1D03               	btfss	3,2
  3511     0676  2E78               	goto	u5361
  3512     0677  2E79               	goto	u5360
  3513     0678                     u5361:
  3514     0678  2E8B               	goto	l6267
  3515     0679                     u5360:
  3516     0679                     l6253:
  3517     0679  0831               	movf	_i2busy^(0+128),w
  3518     067A  1D03               	btfss	3,2
  3519     067B  2E7D               	goto	u5371
  3520     067C  2E7E               	goto	u5370
  3521     067D                     u5371:
  3522     067D  2E8B               	goto	l6267
  3523     067E                     u5370:
  3524     067E                     l6255:
  3525                           
  3526                           ;main.c: 607:            i2cfinish=0;
  3527     067E  01B5               	clrf	_i2cfinish^(0+128)
  3528     067F                     l6257:
  3529                           
  3530                           ;main.c: 608:            i2cbgin=1;
  3531     067F  01B6               	clrf	_i2cbgin^(0+128)
  3532     0680  0AB6               	incf	_i2cbgin^(0+128),f
  3533     0681                     l6259:
  3534                           
  3535                           ;main.c: 609:            i2select=1;
  3536     0681  01B2               	clrf	_i2select^(0+128)
  3537     0682  0AB2               	incf	_i2select^(0+128),f
  3538     0683                     l6261:
  3539                           
  3540                           ;main.c: 610:            i2busy=1;
  3541     0683  01B1               	clrf	_i2busy^(0+128)
  3542     0684  0AB1               	incf	_i2busy^(0+128),f
  3543     0685                     l6263:
  3544                           
  3545                           ;main.c: 611:            act_com=7;
  3546     0685  3007               	movlw	7
  3547     0686  00B0               	movwf	_act_com^(0+128)
  3548     0687                     l6265:
  3549                           
  3550                           ;main.c: 612:            meddone &= ~0x40;
  3551     0687  30BF               	movlw	191
  3552     0688  05A2               	andwf	_meddone^(0+128),f
  3553     0689  30FF               	movlw	255
  3554     068A  05A3               	andwf	(_meddone+1)^(0+128),f
  3555     068B                     l6267:
  3556     068B  3034               	movlw	52
  3557     068C  0643               	xorwf	(_sport^(0+128)+6),w
  3558     068D  1D03               	btfss	3,2
  3559     068E  2E90               	goto	u5381
  3560     068F  2E91               	goto	u5380
  3561     0690                     u5381:
  3562     0690  2EA3               	goto	l6283
  3563     0691                     u5380:
  3564     0691                     l6269:
  3565     0691  0831               	movf	_i2busy^(0+128),w
  3566     0692  1D03               	btfss	3,2
  3567     0693  2E95               	goto	u5391
  3568     0694  2E96               	goto	u5390
  3569     0695                     u5391:
  3570     0695  2EA3               	goto	l6283
  3571     0696                     u5390:
  3572     0696                     l6271:
  3573                           
  3574                           ;main.c: 614:            i2cfinish=0;
  3575     0696  01B5               	clrf	_i2cfinish^(0+128)
  3576     0697                     l6273:
  3577                           
  3578                           ;main.c: 615:            i2cbgin=1;
  3579     0697  01B6               	clrf	_i2cbgin^(0+128)
  3580     0698  0AB6               	incf	_i2cbgin^(0+128),f
  3581     0699                     l6275:
  3582                           
  3583                           ;main.c: 616:            i2select=2;
  3584     0699  3002               	movlw	2
  3585     069A  00B2               	movwf	_i2select^(0+128)
  3586     069B                     l6277:
  3587                           
  3588                           ;main.c: 617:            i2busy=1;
  3589     069B  01B1               	clrf	_i2busy^(0+128)
  3590     069C  0AB1               	incf	_i2busy^(0+128),f
  3591     069D                     l6279:
  3592                           
  3593                           ;main.c: 618:            act_com=7;
  3594     069D  3007               	movlw	7
  3595     069E  00B0               	movwf	_act_com^(0+128)
  3596     069F                     l6281:
  3597                           
  3598                           ;main.c: 619:            meddone &= ~0x40;
  3599     069F  30BF               	movlw	191
  3600     06A0  05A2               	andwf	_meddone^(0+128),f
  3601     06A1  30FF               	movlw	255
  3602     06A2  05A3               	andwf	(_meddone+1)^(0+128),f
  3603     06A3                     l6283:
  3604     06A3  1FA2               	btfss	_meddone^(0+128),7
  3605     06A4  2EA6               	goto	u5401
  3606     06A5  2EA7               	goto	u5400
  3607     06A6                     u5401:
  3608     06A6  2F15               	goto	l6331
  3609     06A7                     u5400:
  3610     06A7                     l6285:
  3611                           
  3612                           ;main.c: 622:         if(sport[7]=='1' && i2busy==0){
  3613     06A7  3031               	movlw	49
  3614     06A8  0644               	xorwf	(_sport^(0+128)+7),w
  3615     06A9  1D03               	btfss	3,2
  3616     06AA  2EAC               	goto	u5411
  3617     06AB  2EAD               	goto	u5410
  3618     06AC                     u5411:
  3619     06AC  2EC4               	goto	l6293
  3620     06AD                     u5410:
  3621     06AD                     l6287:
  3622     06AD  0831               	movf	_i2busy^(0+128),w
  3623     06AE  1D03               	btfss	3,2
  3624     06AF  2EB1               	goto	u5421
  3625     06B0  2EB2               	goto	u5420
  3626     06B1                     u5421:
  3627     06B1  2EC4               	goto	l6293
  3628     06B2                     u5420:
  3629     06B2                     l6289:
  3630                           
  3631                           ;main.c: 624:            DHTRESULT(0x80, 0, 8, TOUT, dhtresult, COM);
  3632     06B2  01E0               	clrf	DHTRESULT@tris^(0+128)
  3633     06B3  3008               	movlw	8
  3634     06B4  00E1               	movwf	DHTRESULT@conector^(0+128)
  3635     06B5  083A               	movf	_TOUT^(0+128),w
  3636     06B6  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3637     06B7  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3638     06B8  00E3               	movwf	DHTRESULT@dht^(0+128)
  3639     06B9  30EC               	movlw	(low (_COM| 0))& (0+255)
  3640     06BA  00E4               	movwf	DHTRESULT@COM^(0+128)
  3641     06BB  3080               	movlw	128
  3642     06BC  318D  25F7  3182   	fcall	_DHTRESULT
  3643     06BF                     l6291:
  3644                           
  3645                           ;main.c: 625:            meddone &= ~0x80 ;
  3646     06BF  307F               	movlw	127
  3647     06C0  0021               	movlb	1	; select bank1
  3648     06C1  05A2               	andwf	_meddone^(0+128),f
  3649     06C2  30FF               	movlw	255
  3650     06C3  05A3               	andwf	(_meddone+1)^(0+128),f
  3651     06C4                     l6293:
  3652     06C4  3032               	movlw	50
  3653     06C5  0644               	xorwf	(_sport^(0+128)+7),w
  3654     06C6  1D03               	btfss	3,2
  3655     06C7  2EC9               	goto	u5431
  3656     06C8  2ECA               	goto	u5430
  3657     06C9                     u5431:
  3658     06C9  2EE7               	goto	l6301
  3659     06CA                     u5430:
  3660     06CA                     l6295:
  3661     06CA  0831               	movf	_i2busy^(0+128),w
  3662     06CB  1D03               	btfss	3,2
  3663     06CC  2ECE               	goto	u5441
  3664     06CD  2ECF               	goto	u5440
  3665     06CE                     u5441:
  3666     06CE  2EE7               	goto	l6301
  3667     06CF                     u5440:
  3668     06CF                     l6297:
  3669                           
  3670                           ;main.c: 627:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x80, 8);
  3671     06CF  308C               	movlw	140
  3672     06D0  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3673     06D1  3000               	movlw	0
  3674     06D2  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3675     06D3  300C               	movlw	12
  3676     06D4  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3677     06D5  3000               	movlw	0
  3678     06D6  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3679     06D7  300C               	movlw	12
  3680     06D8  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3681     06D9  3001               	movlw	1
  3682     06DA  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3683     06DB  3080               	movlw	128
  3684     06DC  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3685     06DD  3008               	movlw	8
  3686     06DE  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3687     06DF  318E  26DD  3182   	fcall	_DS18B20_Read
  3688     06E2                     l6299:
  3689                           
  3690                           ;main.c: 628:            meddone &= ~0x80 ;
  3691     06E2  307F               	movlw	127
  3692     06E3  0021               	movlb	1	; select bank1
  3693     06E4  05A2               	andwf	_meddone^(0+128),f
  3694     06E5  30FF               	movlw	255
  3695     06E6  05A3               	andwf	(_meddone+1)^(0+128),f
  3696     06E7                     l6301:
  3697     06E7  3033               	movlw	51
  3698     06E8  0644               	xorwf	(_sport^(0+128)+7),w
  3699     06E9  1D03               	btfss	3,2
  3700     06EA  2EEC               	goto	u5451
  3701     06EB  2EED               	goto	u5450
  3702     06EC                     u5451:
  3703     06EC  2EFD               	goto	l6315
  3704     06ED                     u5450:
  3705     06ED                     l6303:
  3706     06ED  0831               	movf	_i2busy^(0+128),w
  3707     06EE  1D03               	btfss	3,2
  3708     06EF  2EF1               	goto	u5461
  3709     06F0  2EF2               	goto	u5460
  3710     06F1                     u5461:
  3711     06F1  2EFD               	goto	l6315
  3712     06F2                     u5460:
  3713     06F2                     l6305:
  3714                           
  3715                           ;main.c: 630:            i2cfinish=0;
  3716     06F2  01B5               	clrf	_i2cfinish^(0+128)
  3717     06F3                     l6307:
  3718                           
  3719                           ;main.c: 631:            i2cbgin=1;
  3720     06F3  01B6               	clrf	_i2cbgin^(0+128)
  3721     06F4  0AB6               	incf	_i2cbgin^(0+128),f
  3722     06F5                     l6309:
  3723                           
  3724                           ;main.c: 632:            i2select=1;
  3725     06F5  01B2               	clrf	_i2select^(0+128)
  3726     06F6  0AB2               	incf	_i2select^(0+128),f
  3727     06F7                     l6311:
  3728                           
  3729                           ;main.c: 633:            act_com=8;
  3730     06F7  3008               	movlw	8
  3731     06F8  00B0               	movwf	_act_com^(0+128)
  3732     06F9                     l6313:
  3733                           
  3734                           ;main.c: 634:            meddone &= ~0x80;
  3735     06F9  307F               	movlw	127
  3736     06FA  05A2               	andwf	_meddone^(0+128),f
  3737     06FB  30FF               	movlw	255
  3738     06FC  05A3               	andwf	(_meddone+1)^(0+128),f
  3739     06FD                     l6315:
  3740     06FD  3034               	movlw	52
  3741     06FE  0644               	xorwf	(_sport^(0+128)+7),w
  3742     06FF  1D03               	btfss	3,2
  3743     0700  2F02               	goto	u5471
  3744     0701  2F03               	goto	u5470
  3745     0702                     u5471:
  3746     0702  2F15               	goto	l6331
  3747     0703                     u5470:
  3748     0703                     l6317:
  3749     0703  0831               	movf	_i2busy^(0+128),w
  3750     0704  1D03               	btfss	3,2
  3751     0705  2F07               	goto	u5481
  3752     0706  2F08               	goto	u5480
  3753     0707                     u5481:
  3754     0707  2F15               	goto	l6331
  3755     0708                     u5480:
  3756     0708                     l6319:
  3757                           
  3758                           ;main.c: 636:            i2cfinish=0;
  3759     0708  01B5               	clrf	_i2cfinish^(0+128)
  3760     0709                     l6321:
  3761                           
  3762                           ;main.c: 637:            i2cbgin=1;
  3763     0709  01B6               	clrf	_i2cbgin^(0+128)
  3764     070A  0AB6               	incf	_i2cbgin^(0+128),f
  3765     070B                     l6323:
  3766                           
  3767                           ;main.c: 638:            i2select=2;
  3768     070B  3002               	movlw	2
  3769     070C  00B2               	movwf	_i2select^(0+128)
  3770     070D                     l6325:
  3771                           
  3772                           ;main.c: 639:            i2busy=1;
  3773     070D  01B1               	clrf	_i2busy^(0+128)
  3774     070E  0AB1               	incf	_i2busy^(0+128),f
  3775     070F                     l6327:
  3776                           
  3777                           ;main.c: 640:            act_com=8;
  3778     070F  3008               	movlw	8
  3779     0710  00B0               	movwf	_act_com^(0+128)
  3780     0711                     l6329:
  3781                           
  3782                           ;main.c: 641:            meddone &= ~0x80;
  3783     0711  307F               	movlw	127
  3784     0712  05A2               	andwf	_meddone^(0+128),f
  3785     0713  30FF               	movlw	255
  3786     0714  05A3               	andwf	(_meddone+1)^(0+128),f
  3787     0715                     l6331:
  3788     0715  1C23               	btfss	(_meddone+1)^(0+128),0
  3789     0716  2F18               	goto	u5491
  3790     0717  2F19               	goto	u5490
  3791     0718                     u5491:
  3792     0718  2F87               	goto	l6379
  3793     0719                     u5490:
  3794     0719                     l6333:
  3795                           
  3796                           ;main.c: 644:         if(sport[8]=='1' && i2busy==0){
  3797     0719  3031               	movlw	49
  3798     071A  0645               	xorwf	(_sport^(0+128)+8),w
  3799     071B  1D03               	btfss	3,2
  3800     071C  2F1E               	goto	u5501
  3801     071D  2F1F               	goto	u5500
  3802     071E                     u5501:
  3803     071E  2F36               	goto	l6341
  3804     071F                     u5500:
  3805     071F                     l6335:
  3806     071F  0831               	movf	_i2busy^(0+128),w
  3807     0720  1D03               	btfss	3,2
  3808     0721  2F23               	goto	u5511
  3809     0722  2F24               	goto	u5510
  3810     0723                     u5511:
  3811     0723  2F36               	goto	l6341
  3812     0724                     u5510:
  3813     0724                     l6337:
  3814                           
  3815                           ;main.c: 645:            DHTRESULT(0x20, 0, 9, TOUT, dhtresult, COM);
  3816     0724  01E0               	clrf	DHTRESULT@tris^(0+128)
  3817     0725  3009               	movlw	9
  3818     0726  00E1               	movwf	DHTRESULT@conector^(0+128)
  3819     0727  083A               	movf	_TOUT^(0+128),w
  3820     0728  00E2               	movwf	DHTRESULT@TOUT^(0+128)
  3821     0729  303D               	movlw	(low (_dhtresult| (0+256)))& (0+255)
  3822     072A  00E3               	movwf	DHTRESULT@dht^(0+128)
  3823     072B  30EC               	movlw	(low (_COM| 0))& (0+255)
  3824     072C  00E4               	movwf	DHTRESULT@COM^(0+128)
  3825     072D  3020               	movlw	32
  3826     072E  318D  25F7  3182   	fcall	_DHTRESULT
  3827     0731                     l6339:
  3828                           
  3829                           ;main.c: 646:            meddone &= ~0x100 ;
  3830     0731  30FF               	movlw	255
  3831     0732  0021               	movlb	1	; select bank1
  3832     0733  05A2               	andwf	_meddone^(0+128),f
  3833     0734  30FE               	movlw	254
  3834     0735  05A3               	andwf	(_meddone+1)^(0+128),f
  3835     0736                     l6341:
  3836     0736  3032               	movlw	50
  3837     0737  0645               	xorwf	(_sport^(0+128)+8),w
  3838     0738  1D03               	btfss	3,2
  3839     0739  2F3B               	goto	u5521
  3840     073A  2F3C               	goto	u5520
  3841     073B                     u5521:
  3842     073B  2F59               	goto	l6349
  3843     073C                     u5520:
  3844     073C                     l6343:
  3845     073C  0831               	movf	_i2busy^(0+128),w
  3846     073D  1D03               	btfss	3,2
  3847     073E  2F40               	goto	u5531
  3848     073F  2F41               	goto	u5530
  3849     0740                     u5531:
  3850     0740  2F59               	goto	l6349
  3851     0741                     u5530:
  3852     0741                     l6345:
  3853                           
  3854                           ;main.c: 648:            DS18B20_Read(&TRISA, &PORTA, &LATA, 0x20, 9);
  3855     0741  308C               	movlw	140
  3856     0742  00E0               	movwf	DS18B20_Read@TRIS^(0+128)
  3857     0743  3000               	movlw	0
  3858     0744  00E1               	movwf	(DS18B20_Read@TRIS^(0+128)+1)
  3859     0745  300C               	movlw	12
  3860     0746  00E2               	movwf	DS18B20_Read@PORT^(0+128)
  3861     0747  3000               	movlw	0
  3862     0748  00E3               	movwf	(DS18B20_Read@PORT^(0+128)+1)
  3863     0749  300C               	movlw	12
  3864     074A  00E4               	movwf	DS18B20_Read@LAT^(0+128)
  3865     074B  3001               	movlw	1
  3866     074C  00E5               	movwf	(DS18B20_Read@LAT^(0+128)+1)
  3867     074D  3020               	movlw	32
  3868     074E  00E6               	movwf	DS18B20_Read@PIN^(0+128)
  3869     074F  3009               	movlw	9
  3870     0750  00E7               	movwf	DS18B20_Read@entry^(0+128)
  3871     0751  318E  26DD  3182   	fcall	_DS18B20_Read
  3872     0754                     l6347:
  3873                           
  3874                           ;main.c: 649:            meddone &= ~0x100 ;
  3875     0754  30FF               	movlw	255
  3876     0755  0021               	movlb	1	; select bank1
  3877     0756  05A2               	andwf	_meddone^(0+128),f
  3878     0757  30FE               	movlw	254
  3879     0758  05A3               	andwf	(_meddone+1)^(0+128),f
  3880     0759                     l6349:
  3881     0759  3033               	movlw	51
  3882     075A  0645               	xorwf	(_sport^(0+128)+8),w
  3883     075B  1D03               	btfss	3,2
  3884     075C  2F5E               	goto	u5541
  3885     075D  2F5F               	goto	u5540
  3886     075E                     u5541:
  3887     075E  2F6F               	goto	l6363
  3888     075F                     u5540:
  3889     075F                     l6351:
  3890     075F  0831               	movf	_i2busy^(0+128),w
  3891     0760  1D03               	btfss	3,2
  3892     0761  2F63               	goto	u5551
  3893     0762  2F64               	goto	u5550
  3894     0763                     u5551:
  3895     0763  2F6F               	goto	l6363
  3896     0764                     u5550:
  3897     0764                     l6353:
  3898                           
  3899                           ;main.c: 651:            i2cfinish=0;
  3900     0764  01B5               	clrf	_i2cfinish^(0+128)
  3901     0765                     l6355:
  3902                           
  3903                           ;main.c: 652:            i2cbgin=1;
  3904     0765  01B6               	clrf	_i2cbgin^(0+128)
  3905     0766  0AB6               	incf	_i2cbgin^(0+128),f
  3906     0767                     l6357:
  3907                           
  3908                           ;main.c: 653:            i2select=1;
  3909     0767  01B2               	clrf	_i2select^(0+128)
  3910     0768  0AB2               	incf	_i2select^(0+128),f
  3911     0769                     l6359:
  3912                           
  3913                           ;main.c: 654:            act_com=9;
  3914     0769  3009               	movlw	9
  3915     076A  00B0               	movwf	_act_com^(0+128)
  3916     076B                     l6361:
  3917                           
  3918                           ;main.c: 655:            meddone &= ~0x100;
  3919     076B  30FF               	movlw	255
  3920     076C  05A2               	andwf	_meddone^(0+128),f
  3921     076D  30FE               	movlw	254
  3922     076E  05A3               	andwf	(_meddone+1)^(0+128),f
  3923     076F                     l6363:
  3924     076F  3034               	movlw	52
  3925     0770  0645               	xorwf	(_sport^(0+128)+8),w
  3926     0771  1D03               	btfss	3,2
  3927     0772  2F74               	goto	u5561
  3928     0773  2F75               	goto	u5560
  3929     0774                     u5561:
  3930     0774  2F87               	goto	l6379
  3931     0775                     u5560:
  3932     0775                     l6365:
  3933     0775  0831               	movf	_i2busy^(0+128),w
  3934     0776  1D03               	btfss	3,2
  3935     0777  2F79               	goto	u5571
  3936     0778  2F7A               	goto	u5570
  3937     0779                     u5571:
  3938     0779  2F87               	goto	l6379
  3939     077A                     u5570:
  3940     077A                     l6367:
  3941                           
  3942                           ;main.c: 657:            i2cfinish=0;
  3943     077A  01B5               	clrf	_i2cfinish^(0+128)
  3944     077B                     l6369:
  3945                           
  3946                           ;main.c: 658:            i2cbgin=1;
  3947     077B  01B6               	clrf	_i2cbgin^(0+128)
  3948     077C  0AB6               	incf	_i2cbgin^(0+128),f
  3949     077D                     l6371:
  3950                           
  3951                           ;main.c: 659:            i2select=2;
  3952     077D  3002               	movlw	2
  3953     077E  00B2               	movwf	_i2select^(0+128)
  3954     077F                     l6373:
  3955                           
  3956                           ;main.c: 660:            i2busy=1;
  3957     077F  01B1               	clrf	_i2busy^(0+128)
  3958     0780  0AB1               	incf	_i2busy^(0+128),f
  3959     0781                     l6375:
  3960                           
  3961                           ;main.c: 661:            act_com=9;
  3962     0781  3009               	movlw	9
  3963     0782  00B0               	movwf	_act_com^(0+128)
  3964     0783                     l6377:
  3965                           
  3966                           ;main.c: 662:            meddone &= ~0x100;
  3967     0783  30FF               	movlw	255
  3968     0784  05A2               	andwf	_meddone^(0+128),f
  3969     0785  30FE               	movlw	254
  3970     0786  05A3               	andwf	(_meddone+1)^(0+128),f
  3971     0787                     l6379:
  3972     0787  1CA3               	btfss	(_meddone+1)^(0+128),1
  3973     0788  2F8A               	goto	u5581
  3974     0789  2F8B               	goto	u5580
  3975     078A                     u5581:
  3976     078A  2AF8               	goto	l291
  3977     078B                     u5580:
  3978     078B                     l6381:
  3979                           
  3980                           ;main.c: 665:         if(sport[9]=='1' && i2busy==0){
  3981     078B  3031               	movlw	49
  3982     078C  0646               	xorwf	(_sport^(0+128)+9),w
  3983     078D  1D03               	btfss	3,2
  3984     078E  2F90               	goto	u5591
  3985     078F  2F91               	goto	u5590
  3986     0790                     u5591:
  3987     0790  2F9A               	goto	l6387
  3988     0791                     u5590:
  3989     0791                     l6383:
  3990     0791  0831               	movf	_i2busy^(0+128),w
  3991     0792  1D03               	btfss	3,2
  3992     0793  2F95               	goto	u5601
  3993     0794  2F96               	goto	u5600
  3994     0795                     u5601:
  3995     0795  2F9A               	goto	l6387
  3996     0796                     u5600:
  3997     0796                     l6385:
  3998                           
  3999                           ;main.c: 667:            meddone &= ~0x200 ;
  4000     0796  30FF               	movlw	255
  4001     0797  05A2               	andwf	_meddone^(0+128),f
  4002     0798  30FD               	movlw	253
  4003     0799  05A3               	andwf	(_meddone+1)^(0+128),f
  4004     079A                     l6387:
  4005     079A  3032               	movlw	50
  4006     079B  0646               	xorwf	(_sport^(0+128)+9),w
  4007     079C  1D03               	btfss	3,2
  4008     079D  2F9F               	goto	u5611
  4009     079E  2FA0               	goto	u5610
  4010     079F                     u5611:
  4011     079F  2FA9               	goto	l6393
  4012     07A0                     u5610:
  4013     07A0                     l6389:
  4014     07A0  0831               	movf	_i2busy^(0+128),w
  4015     07A1  1D03               	btfss	3,2
  4016     07A2  2FA4               	goto	u5621
  4017     07A3  2FA5               	goto	u5620
  4018     07A4                     u5621:
  4019     07A4  2FA9               	goto	l6393
  4020     07A5                     u5620:
  4021     07A5                     l6391:
  4022                           
  4023                           ;main.c: 670:            meddone &= ~0x200 ;
  4024     07A5  30FF               	movlw	255
  4025     07A6  05A2               	andwf	_meddone^(0+128),f
  4026     07A7  30FD               	movlw	253
  4027     07A8  05A3               	andwf	(_meddone+1)^(0+128),f
  4028     07A9                     l6393:
  4029     07A9  3033               	movlw	51
  4030     07AA  0646               	xorwf	(_sport^(0+128)+9),w
  4031     07AB  1D03               	btfss	3,2
  4032     07AC  2FAE               	goto	u5631
  4033     07AD  2FAF               	goto	u5630
  4034     07AE                     u5631:
  4035     07AE  2AF8               	goto	l291
  4036     07AF                     u5630:
  4037     07AF                     l6395:
  4038     07AF  0831               	movf	_i2busy^(0+128),w
  4039     07B0  1D03               	btfss	3,2
  4040     07B1  2FB3               	goto	u5641
  4041     07B2  2FB4               	goto	u5640
  4042     07B3                     u5641:
  4043     07B3  2AF8               	goto	l291
  4044     07B4                     u5640:
  4045     07B4                     l6397:
  4046                           
  4047                           ;main.c: 672:            i2cfinish=0;
  4048     07B4  01B5               	clrf	_i2cfinish^(0+128)
  4049     07B5                     l6399:
  4050                           
  4051                           ;main.c: 673:            i2cbgin=1;
  4052     07B5  01B6               	clrf	_i2cbgin^(0+128)
  4053     07B6  0AB6               	incf	_i2cbgin^(0+128),f
  4054     07B7                     l6401:
  4055                           
  4056                           ;main.c: 674:            i2select=1;
  4057     07B7  01B2               	clrf	_i2select^(0+128)
  4058     07B8  0AB2               	incf	_i2select^(0+128),f
  4059     07B9                     l6403:
  4060                           
  4061                           ;main.c: 675:            act_com=10;
  4062     07B9  300A               	movlw	10
  4063     07BA  00B0               	movwf	_act_com^(0+128)
  4064     07BB                     l6405:
  4065                           
  4066                           ;main.c: 676:            meddone &= ~0x200;
  4067     07BB  30FF               	movlw	255
  4068     07BC  05A2               	andwf	_meddone^(0+128),f
  4069     07BD  30FD               	movlw	253
  4070     07BE  05A3               	andwf	(_meddone+1)^(0+128),f
  4071     07BF  2AF8               	goto	l291
  4072     07C0  3182  2A6B         	ljmp	start
  4073     07C2                     __end_of_main:
  4074                           
  4075                           	psect	text1
  4076     0C4A                     __ptext1:	
  4077 ;; *************** function _port_config *****************
  4078 ;; Defined at:
  4079 ;;		line 354 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  stype           1    wreg     PTR unsigned char 
  4082 ;;		 -> sport(10), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  stype           1    1[BANK0 ] PTR unsigned char 
  4085 ;;		 -> sport(10), 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4095 ;;      Params:         0       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       1       0       0       0       0       0       0
  4097 ;;      Temps:          0       1       0       0       0       0       0       0
  4098 ;;      Totals:         0       2       0       0       0       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 2
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109     0C4A                     _port_config:	
  4110                           ;psect for function _port_config
  4111                           
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _port_config: [wreg+fsr1l+fsr1h+status,2+status,0]
  4115                           ;port_config@stype stored from wreg
  4116     0C4A  0020               	movlb	0	; select bank0
  4117     0C4B  00A1               	movwf	port_config@stype
  4118     0C4C                     l4217:
  4119                           
  4120                           ;main.c: 355:     if(stype[0]<='2'){
  4121     0C4C  0821               	movf	port_config@stype,w
  4122     0C4D  0086               	movwf	6
  4123     0C4E  0187               	clrf	7
  4124     0C4F  3033               	movlw	51
  4125     0C50  0201               	subwf	1,w
  4126     0C51  1803               	skipnc
  4127     0C52  2C54               	goto	u2791
  4128     0C53  2C55               	goto	u2790
  4129     0C54                     u2791:
  4130     0C54  2C5A               	goto	l265
  4131     0C55                     u2790:
  4132     0C55                     l4219:
  4133                           
  4134                           ;main.c: 356:         RA0=0;
  4135     0C55  100C               	bcf	12,0	;volatile
  4136                           
  4137                           ;main.c: 357:         RC1=0;
  4138     0C56  108E               	bcf	14,1	;volatile
  4139                           
  4140                           ;main.c: 358:         TRISA |= 0x01;
  4141     0C57  0021               	movlb	1	; select bank1
  4142     0C58  140C               	bsf	12,0	;volatile
  4143                           
  4144                           ;main.c: 359:     }else{
  4145     0C59  2C61               	goto	l4223
  4146     0C5A                     l265:
  4147                           
  4148                           ;main.c: 360:         RA0=0;
  4149     0C5A  100C               	bcf	12,0	;volatile
  4150                           
  4151                           ;main.c: 361:         RC1=1;
  4152     0C5B  148E               	bsf	14,1	;volatile
  4153     0C5C                     l4221:
  4154                           
  4155                           ;main.c: 362:         TRISA &= ~0x01;
  4156     0C5C  30FE               	movlw	254
  4157     0C5D  00A0               	movwf	??_port_config
  4158     0C5E  0820               	movf	??_port_config,w
  4159     0C5F  0021               	movlb	1	; select bank1
  4160     0C60  058C               	andwf	12,f	;volatile
  4161     0C61                     l4223:
  4162                           
  4163                           ;main.c: 364:     if(stype[1]<='2'){
  4164     0C61  0020               	movlb	0	; select bank0
  4165     0C62  0A21               	incf	port_config@stype,w
  4166     0C63  0086               	movwf	6
  4167     0C64  0187               	clrf	7
  4168     0C65  3033               	movlw	51
  4169     0C66  0201               	subwf	1,w
  4170     0C67  1803               	skipnc
  4171     0C68  2C6A               	goto	u2801
  4172     0C69  2C6B               	goto	u2800
  4173     0C6A                     u2801:
  4174     0C6A  2C70               	goto	l267
  4175     0C6B                     u2800:
  4176     0C6B                     l4225:
  4177                           
  4178                           ;main.c: 365:         RA1=1;
  4179     0C6B  148C               	bsf	12,1	;volatile
  4180                           
  4181                           ;main.c: 366:         RC2=0;
  4182     0C6C  110E               	bcf	14,2	;volatile
  4183                           
  4184                           ;main.c: 367:         TRISA |= 0x02;
  4185     0C6D  0021               	movlb	1	; select bank1
  4186     0C6E  148C               	bsf	12,1	;volatile
  4187                           
  4188                           ;main.c: 368:     }else{
  4189     0C6F  2C77               	goto	l4229
  4190     0C70                     l267:
  4191                           
  4192                           ;main.c: 369:         RA1=0;
  4193     0C70  108C               	bcf	12,1	;volatile
  4194                           
  4195                           ;main.c: 370:         RC2=1;
  4196     0C71  150E               	bsf	14,2	;volatile
  4197     0C72                     l4227:
  4198                           
  4199                           ;main.c: 371:         TRISA &= ~0x02;
  4200     0C72  30FD               	movlw	253
  4201     0C73  00A0               	movwf	??_port_config
  4202     0C74  0820               	movf	??_port_config,w
  4203     0C75  0021               	movlb	1	; select bank1
  4204     0C76  058C               	andwf	12,f	;volatile
  4205     0C77                     l4229:
  4206                           
  4207                           ;main.c: 373:     if(stype[2]<='2'){
  4208     0C77  0020               	movlb	0	; select bank0
  4209     0C78  0821               	movf	port_config@stype,w
  4210     0C79  3E02               	addlw	2
  4211     0C7A  0086               	movwf	6
  4212     0C7B  0187               	clrf	7
  4213     0C7C  3033               	movlw	51
  4214     0C7D  0201               	subwf	1,w
  4215     0C7E  1803               	skipnc
  4216     0C7F  2C81               	goto	u2811
  4217     0C80  2C82               	goto	u2810
  4218     0C81                     u2811:
  4219     0C81  2C87               	goto	l269
  4220     0C82                     u2810:
  4221     0C82                     l4231:
  4222                           
  4223                           ;main.c: 374:         RA2=1;
  4224     0C82  150C               	bsf	12,2	;volatile
  4225                           
  4226                           ;main.c: 375:         RC5=0;
  4227     0C83  128E               	bcf	14,5	;volatile
  4228                           
  4229                           ;main.c: 376:         TRISA |= 0x04;
  4230     0C84  0021               	movlb	1	; select bank1
  4231     0C85  150C               	bsf	12,2	;volatile
  4232                           
  4233                           ;main.c: 377:     }else{
  4234     0C86  2C8E               	goto	l4235
  4235     0C87                     l269:
  4236                           
  4237                           ;main.c: 378:         RA2=0;
  4238     0C87  110C               	bcf	12,2	;volatile
  4239                           
  4240                           ;main.c: 379:         RC5=1;
  4241     0C88  168E               	bsf	14,5	;volatile
  4242     0C89                     l4233:
  4243                           
  4244                           ;main.c: 380:         TRISA &= ~0x04;
  4245     0C89  30FB               	movlw	251
  4246     0C8A  00A0               	movwf	??_port_config
  4247     0C8B  0820               	movf	??_port_config,w
  4248     0C8C  0021               	movlb	1	; select bank1
  4249     0C8D  058C               	andwf	12,f	;volatile
  4250     0C8E                     l4235:
  4251                           
  4252                           ;main.c: 382:     if(stype[3]<='2'){
  4253     0C8E  0020               	movlb	0	; select bank0
  4254     0C8F  0821               	movf	port_config@stype,w
  4255     0C90  3E03               	addlw	3
  4256     0C91  0086               	movwf	6
  4257     0C92  0187               	clrf	7
  4258     0C93  3033               	movlw	51
  4259     0C94  0201               	subwf	1,w
  4260     0C95  1803               	skipnc
  4261     0C96  2C98               	goto	u2821
  4262     0C97  2C99               	goto	u2820
  4263     0C98                     u2821:
  4264     0C98  2C9E               	goto	l271
  4265     0C99                     u2820:
  4266     0C99                     l4237:
  4267                           
  4268                           ;main.c: 383:         RA3=1;
  4269     0C99  158C               	bsf	12,3	;volatile
  4270                           
  4271                           ;main.c: 384:         RB2=0;
  4272     0C9A  110D               	bcf	13,2	;volatile
  4273                           
  4274                           ;main.c: 385:         TRISA |= 0x08;
  4275     0C9B  0021               	movlb	1	; select bank1
  4276     0C9C  158C               	bsf	12,3	;volatile
  4277                           
  4278                           ;main.c: 386:     }else{
  4279     0C9D  2CA5               	goto	l4241
  4280     0C9E                     l271:
  4281                           
  4282                           ;main.c: 387:         RA3=0;
  4283     0C9E  118C               	bcf	12,3	;volatile
  4284                           
  4285                           ;main.c: 388:         RB2=1;
  4286     0C9F  150D               	bsf	13,2	;volatile
  4287     0CA0                     l4239:
  4288                           
  4289                           ;main.c: 389:         TRISA &= ~0x08;
  4290     0CA0  30F7               	movlw	247
  4291     0CA1  00A0               	movwf	??_port_config
  4292     0CA2  0820               	movf	??_port_config,w
  4293     0CA3  0021               	movlb	1	; select bank1
  4294     0CA4  058C               	andwf	12,f	;volatile
  4295     0CA5                     l4241:
  4296                           
  4297                           ;main.c: 391:     if(stype[4]<='2'){
  4298     0CA5  0020               	movlb	0	; select bank0
  4299     0CA6  0821               	movf	port_config@stype,w
  4300     0CA7  3E04               	addlw	4
  4301     0CA8  0086               	movwf	6
  4302     0CA9  0187               	clrf	7
  4303     0CAA  3033               	movlw	51
  4304     0CAB  0201               	subwf	1,w
  4305     0CAC  1803               	skipnc
  4306     0CAD  2CAF               	goto	u2831
  4307     0CAE  2CB0               	goto	u2830
  4308     0CAF                     u2831:
  4309     0CAF  2CB5               	goto	l273
  4310     0CB0                     u2830:
  4311     0CB0                     l4243:
  4312                           
  4313                           ;main.c: 392:         RA4=1;
  4314     0CB0  160C               	bsf	12,4	;volatile
  4315                           
  4316                           ;main.c: 393:         RB1=0;
  4317     0CB1  108D               	bcf	13,1	;volatile
  4318                           
  4319                           ;main.c: 394:         TRISA |= 0x10;
  4320     0CB2  0021               	movlb	1	; select bank1
  4321     0CB3  160C               	bsf	12,4	;volatile
  4322                           
  4323                           ;main.c: 395:     }else{
  4324     0CB4  2CBC               	goto	l4247
  4325     0CB5                     l273:
  4326                           
  4327                           ;main.c: 396:         RA4=0;
  4328     0CB5  120C               	bcf	12,4	;volatile
  4329                           
  4330                           ;main.c: 397:         RB1=1;
  4331     0CB6  148D               	bsf	13,1	;volatile
  4332     0CB7                     l4245:
  4333                           
  4334                           ;main.c: 398:         TRISA &= ~0x10;
  4335     0CB7  30EF               	movlw	239
  4336     0CB8  00A0               	movwf	??_port_config
  4337     0CB9  0820               	movf	??_port_config,w
  4338     0CBA  0021               	movlb	1	; select bank1
  4339     0CBB  058C               	andwf	12,f	;volatile
  4340     0CBC                     l4247:
  4341                           
  4342                           ;main.c: 400:     if(stype[5]<='2'){
  4343     0CBC  0020               	movlb	0	; select bank0
  4344     0CBD  0821               	movf	port_config@stype,w
  4345     0CBE  3E05               	addlw	5
  4346     0CBF  0086               	movwf	6
  4347     0CC0  0187               	clrf	7
  4348     0CC1  3033               	movlw	51
  4349     0CC2  0201               	subwf	1,w
  4350     0CC3  1803               	skipnc
  4351     0CC4  2CC6               	goto	u2841
  4352     0CC5  2CC7               	goto	u2840
  4353     0CC6                     u2841:
  4354     0CC6  2CCC               	goto	l275
  4355     0CC7                     u2840:
  4356     0CC7                     l4249:
  4357                           
  4358                           ;main.c: 401:         RC0=1;
  4359     0CC7  140E               	bsf	14,0	;volatile
  4360                           
  4361                           ;main.c: 402:         RB5=0;
  4362     0CC8  128D               	bcf	13,5	;volatile
  4363                           
  4364                           ;main.c: 403:         TRISC |= 0x01;
  4365     0CC9  0021               	movlb	1	; select bank1
  4366     0CCA  140E               	bsf	14,0	;volatile
  4367                           
  4368                           ;main.c: 404:     }else{
  4369     0CCB  2CD3               	goto	l4253
  4370     0CCC                     l275:
  4371                           
  4372                           ;main.c: 405:         RC0=0;
  4373     0CCC  100E               	bcf	14,0	;volatile
  4374                           
  4375                           ;main.c: 406:         RB5=1;
  4376     0CCD  168D               	bsf	13,5	;volatile
  4377     0CCE                     l4251:
  4378                           
  4379                           ;main.c: 407:         TRISC &= ~0x01;
  4380     0CCE  30FE               	movlw	254
  4381     0CCF  00A0               	movwf	??_port_config
  4382     0CD0  0820               	movf	??_port_config,w
  4383     0CD1  0021               	movlb	1	; select bank1
  4384     0CD2  058E               	andwf	14,f	;volatile
  4385     0CD3                     l4253:
  4386                           
  4387                           ;main.c: 409:     if(stype[6]<='2'){
  4388     0CD3  0020               	movlb	0	; select bank0
  4389     0CD4  0821               	movf	port_config@stype,w
  4390     0CD5  3E06               	addlw	6
  4391     0CD6  0086               	movwf	6
  4392     0CD7  0187               	clrf	7
  4393     0CD8  3033               	movlw	51
  4394     0CD9  0201               	subwf	1,w
  4395     0CDA  1803               	skipnc
  4396     0CDB  2CDD               	goto	u2851
  4397     0CDC  2CDE               	goto	u2850
  4398     0CDD                     u2851:
  4399     0CDD  2CE3               	goto	l277
  4400     0CDE                     u2850:
  4401     0CDE                     l4255:
  4402                           
  4403                           ;main.c: 410:         RA6=1;
  4404     0CDE  170C               	bsf	12,6	;volatile
  4405                           
  4406                           ;main.c: 411:         RB3=0;
  4407     0CDF  118D               	bcf	13,3	;volatile
  4408                           
  4409                           ;main.c: 412:         TRISA |= 0x40;
  4410     0CE0  0021               	movlb	1	; select bank1
  4411     0CE1  170C               	bsf	12,6	;volatile
  4412                           
  4413                           ;main.c: 413:     }else{
  4414     0CE2  2CEA               	goto	l4259
  4415     0CE3                     l277:
  4416                           
  4417                           ;main.c: 414:         RA6=1;
  4418     0CE3  170C               	bsf	12,6	;volatile
  4419                           
  4420                           ;main.c: 415:         RB3=1;
  4421     0CE4  158D               	bsf	13,3	;volatile
  4422     0CE5                     l4257:
  4423                           
  4424                           ;main.c: 416:         TRISA &= ~0x40;
  4425     0CE5  30BF               	movlw	191
  4426     0CE6  00A0               	movwf	??_port_config
  4427     0CE7  0820               	movf	??_port_config,w
  4428     0CE8  0021               	movlb	1	; select bank1
  4429     0CE9  058C               	andwf	12,f	;volatile
  4430     0CEA                     l4259:
  4431                           
  4432                           ;main.c: 418:     if(stype[7]<='2'){
  4433     0CEA  0020               	movlb	0	; select bank0
  4434     0CEB  0821               	movf	port_config@stype,w
  4435     0CEC  3E07               	addlw	7
  4436     0CED  0086               	movwf	6
  4437     0CEE  0187               	clrf	7
  4438     0CEF  3033               	movlw	51
  4439     0CF0  0201               	subwf	1,w
  4440     0CF1  1803               	skipnc
  4441     0CF2  2CF4               	goto	u2861
  4442     0CF3  2CF5               	goto	u2860
  4443     0CF4                     u2861:
  4444     0CF4  2CFA               	goto	l279
  4445     0CF5                     u2860:
  4446     0CF5                     l4261:
  4447                           
  4448                           ;main.c: 419:         RA7=1;
  4449     0CF5  178C               	bsf	12,7	;volatile
  4450                           
  4451                           ;main.c: 420:         RB4=0;
  4452     0CF6  120D               	bcf	13,4	;volatile
  4453                           
  4454                           ;main.c: 421:         TRISA |= 0x80;
  4455     0CF7  0021               	movlb	1	; select bank1
  4456     0CF8  178C               	bsf	12,7	;volatile
  4457                           
  4458                           ;main.c: 422:     }else{
  4459     0CF9  2D01               	goto	l4265
  4460     0CFA                     l279:
  4461                           
  4462                           ;main.c: 423:         RA7=0;
  4463     0CFA  138C               	bcf	12,7	;volatile
  4464                           
  4465                           ;main.c: 424:         RB4=1;
  4466     0CFB  160D               	bsf	13,4	;volatile
  4467     0CFC                     l4263:
  4468                           
  4469                           ;main.c: 425:         TRISA &= ~0x80;
  4470     0CFC  307F               	movlw	127
  4471     0CFD  00A0               	movwf	??_port_config
  4472     0CFE  0820               	movf	??_port_config,w
  4473     0CFF  0021               	movlb	1	; select bank1
  4474     0D00  058C               	andwf	12,f	;volatile
  4475     0D01                     l4265:
  4476                           
  4477                           ;main.c: 427:     if(stype[8]<='2'){
  4478     0D01  0020               	movlb	0	; select bank0
  4479     0D02  0821               	movf	port_config@stype,w
  4480     0D03  3E08               	addlw	8
  4481     0D04  0086               	movwf	6
  4482     0D05  0187               	clrf	7
  4483     0D06  3033               	movlw	51
  4484     0D07  0201               	subwf	1,w
  4485     0D08  1803               	skipnc
  4486     0D09  2D0B               	goto	u2871
  4487     0D0A  2D0C               	goto	u2870
  4488     0D0B                     u2871:
  4489     0D0B  2D11               	goto	l281
  4490     0D0C                     u2870:
  4491     0D0C                     l4267:
  4492                           
  4493                           ;main.c: 428:         RA5=1;
  4494     0D0C  168C               	bsf	12,5	;volatile
  4495                           
  4496                           ;main.c: 429:         RB0=0;
  4497     0D0D  100D               	bcf	13,0	;volatile
  4498                           
  4499                           ;main.c: 430:         TRISA |= 0x20;
  4500     0D0E  0021               	movlb	1	; select bank1
  4501     0D0F  168C               	bsf	12,5	;volatile
  4502                           
  4503                           ;main.c: 431:     }else{
  4504     0D10  2D18               	goto	l283
  4505     0D11                     l281:
  4506                           
  4507                           ;main.c: 432:         RA5=0;
  4508     0D11  128C               	bcf	12,5	;volatile
  4509                           
  4510                           ;main.c: 433:         RB0=1;
  4511     0D12  140D               	bsf	13,0	;volatile
  4512     0D13                     l4269:
  4513                           
  4514                           ;main.c: 434:         TRISA &= ~0x20;
  4515     0D13  30DF               	movlw	223
  4516     0D14  00A0               	movwf	??_port_config
  4517     0D15  0820               	movf	??_port_config,w
  4518     0D16  0021               	movlb	1	; select bank1
  4519     0D17  058C               	andwf	12,f	;volatile
  4520     0D18                     l283:
  4521     0D18  0008               	return
  4522     0D19                     __end_of_port_config:
  4523                           
  4524                           	psect	text2
  4525     0D19                     __ptext2:	
  4526 ;; *************** function _i2c_Read *****************
  4527 ;; Defined at:
  4528 ;;		line 308 in file "main.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  com             1    wreg     unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  com             1   19[BANK1 ] unsigned char 
  4533 ;;  j               2   22[BANK1 ] int 
  4534 ;;  j               2   20[BANK1 ] int 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4544 ;;      Params:         0       0       0       0       0       0       0       0
  4545 ;;      Locals:         0       0       5       0       0       0       0       0
  4546 ;;      Temps:          0       2       0       0       0       0       0       0
  4547 ;;      Totals:         0       2       5       0       0       0       0       0
  4548 ;;Total ram usage:        7 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 10
  4551 ;; This function calls:
  4552 ;;		_sprintf
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558     0D19                     _i2c_Read:	
  4559                           ;psect for function _i2c_Read
  4560                           
  4561                           
  4562                           ;incstack = 0
  4563                           ; Regs used in _i2c_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4564                           ;i2c_Read@com stored from wreg
  4565     0D19  0021               	movlb	1	; select bank1
  4566     0D1A  00E0               	movwf	i2c_Read@com^(0+128)
  4567     0D1B                     l5725:
  4568                           
  4569                           ;main.c: 309:       if(i2cbgin){
  4570     0D1B  0836               	movf	_i2cbgin^(0+128),w
  4571     0D1C  1903               	btfsc	3,2
  4572     0D1D  2D1F               	goto	u4561
  4573     0D1E  2D20               	goto	u4560
  4574     0D1F                     u4561:
  4575     0D1F  2D32               	goto	l5735
  4576     0D20                     u4560:
  4577     0D20                     l5727:
  4578                           
  4579                           ;main.c: 310:       _delay((unsigned long)((100)*(32000000/4000.0)));
  4580     0D20  3005               	movlw	5
  4581     0D21  0020               	movlb	0	; select bank0
  4582     0D22  00EB               	movwf	??_i2c_Read+1
  4583     0D23  300F               	movlw	15
  4584     0D24  00EA               	movwf	??_i2c_Read
  4585     0D25  30F1               	movlw	241
  4586     0D26                     u6047:
  4587     0D26  0B89               	decfsz	9,f
  4588     0D27  2D26               	goto	u6047
  4589     0D28  0BEA               	decfsz	??_i2c_Read,f
  4590     0D29  2D26               	goto	u6047
  4591     0D2A  0BEB               	decfsz	??_i2c_Read+1,f
  4592     0D2B  2D26               	goto	u6047
  4593     0D2C                     l5729:
  4594                           
  4595                           ;main.c: 311:       PIE1bits.SSPIE = 1;
  4596     0D2C  0021               	movlb	1	; select bank1
  4597     0D2D  1591               	bsf	17,3	;volatile
  4598     0D2E                     l5731:
  4599                           
  4600                           ;main.c: 312:       SSPCON2bits.SEN = 1;
  4601     0D2E  0024               	movlb	4	; select bank4
  4602     0D2F  1416               	bsf	22,0	;volatile
  4603     0D30                     l5733:
  4604                           
  4605                           ;main.c: 313:       i2cbgin=0;
  4606     0D30  0021               	movlb	1	; select bank1
  4607     0D31  01B6               	clrf	_i2cbgin^(0+128)
  4608     0D32                     l5735:
  4609                           
  4610                           ;main.c: 315:       if(i2cfinish==1 && i2select==1){
  4611     0D32  0335               	decf	_i2cfinish^(0+128),w
  4612     0D33  1D03               	btfss	3,2
  4613     0D34  2D36               	goto	u4571
  4614     0D35  2D37               	goto	u4570
  4615     0D36                     u4571:
  4616     0D36  2D8D               	goto	l5785
  4617     0D37                     u4570:
  4618     0D37                     l5737:
  4619     0D37  0332               	decf	_i2select^(0+128),w
  4620     0D38  1D03               	btfss	3,2
  4621     0D39  2D3B               	goto	u4581
  4622     0D3A  2D3C               	goto	u4580
  4623     0D3B                     u4581:
  4624     0D3B  2D8D               	goto	l5785
  4625     0D3C                     u4580:
  4626     0D3C                     l5739:
  4627                           
  4628                           ;main.c: 316:           sprintf(LUX,"%u",Lum);
  4629     0D3C  3030               	movlw	low _LUX
  4630     0D3D  00CD               	movwf	sprintf@s^(0+128)
  4631     0D3E  3001               	movlw	high _LUX
  4632     0D3F  00CE               	movwf	(sprintf@s+1)^(0+128)
  4633     0D40  3000               	movlw	low (STR_1| (0+32768))
  4634     0D41  00CF               	movwf	sprintf@fmt^(0+128)
  4635     0D42  3098               	movlw	high (STR_1| (0+32768))
  4636     0D43  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  4637     0D44  084C               	movf	(_Lum+1)^(0+128),w
  4638     0D45  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  4639     0D46  084B               	movf	_Lum^(0+128),w
  4640     0D47  00D1               	movwf	(?_sprintf^(0+128)+4)
  4641     0D48  3194  24F1  318D   	fcall	_sprintf
  4642     0D4B                     l5741:
  4643                           
  4644                           ;main.c: 317:           for(int j=0; j<5; j++)
  4645     0D4B  0021               	movlb	1	; select bank1
  4646     0D4C  01E1               	clrf	i2c_Read@j^(0+128)
  4647     0D4D  01E2               	clrf	(i2c_Read@j+1)^(0+128)
  4648     0D4E                     l5747:
  4649                           
  4650                           ;main.c: 318:           if(LUX[j]==0) LUX[j]='N';
  4651     0D4E  0021               	movlb	1	; select bank1
  4652     0D4F  0861               	movf	i2c_Read@j^(0+128),w
  4653     0D50  3E30               	addlw	(low (_LUX| (0+256)))& (0+255)
  4654     0D51  0086               	movwf	6
  4655     0D52  3001               	movlw	1	; select bank2/3
  4656     0D53  0087               	movwf	7
  4657     0D54  0801               	movf	1,w
  4658     0D55  1D03               	btfss	3,2
  4659     0D56  2D58               	goto	u4591
  4660     0D57  2D59               	goto	u4590
  4661     0D58                     u4591:
  4662     0D58  2D60               	goto	l5751
  4663     0D59                     u4590:
  4664     0D59                     l5749:
  4665     0D59  0861               	movf	i2c_Read@j^(0+128),w
  4666     0D5A  3E30               	addlw	(low (_LUX| (0+256)))& (0+255)
  4667     0D5B  0086               	movwf	6
  4668     0D5C  3001               	movlw	1	; select bank2/3
  4669     0D5D  0087               	movwf	7
  4670     0D5E  304E               	movlw	78
  4671     0D5F  0081               	movwf	1
  4672     0D60                     l5751:
  4673     0D60  3001               	movlw	1
  4674     0D61  07E1               	addwf	i2c_Read@j^(0+128),f
  4675     0D62  3000               	movlw	0
  4676     0D63  3DE2               	addwfc	(i2c_Read@j+1)^(0+128),f
  4677     0D64                     l5753:
  4678     0D64  0862               	movf	(i2c_Read@j+1)^(0+128),w
  4679     0D65  3A80               	xorlw	128
  4680     0D66  0020               	movlb	0	; select bank0
  4681     0D67  00EA               	movwf	??_i2c_Read
  4682     0D68  3080               	movlw	128
  4683     0D69  026A               	subwf	??_i2c_Read,w
  4684     0D6A  1D03               	skipz
  4685     0D6B  2D6F               	goto	u4605
  4686     0D6C  3005               	movlw	5
  4687     0D6D  0021               	movlb	1	; select bank1
  4688     0D6E  0261               	subwf	i2c_Read@j^(0+128),w
  4689     0D6F                     u4605:
  4690     0D6F  1C03               	skipc
  4691     0D70  2D72               	goto	u4601
  4692     0D71  2D73               	goto	u4600
  4693     0D72                     u4601:
  4694     0D72  2D4E               	goto	l5747
  4695     0D73                     u4600:
  4696     0D73                     l5755:
  4697                           
  4698                           ;main.c: 319:           COM[1]= com + 48;
  4699     0D73  0021               	movlb	1	; select bank1
  4700     0D74  0860               	movf	i2c_Read@com^(0+128),w
  4701     0D75  3E30               	addlw	48
  4702     0D76  00ED               	movwf	(_COM^(0+128)+1)
  4703     0D77                     l5757:
  4704                           
  4705                           ;main.c: 320:           VEML7700[6]=LUX[0];
  4706     0D77  0022               	movlb	2	; select bank2
  4707     0D78  0830               	movf	_LUX^(0+256),w
  4708     0D79  00DD               	movwf	(_VEML7700^(0+256)+6)
  4709     0D7A                     l5759:
  4710                           
  4711                           ;main.c: 321:           VEML7700[7]=LUX[1];
  4712     0D7A  0831               	movf	(_LUX^(0+256)+1),w
  4713     0D7B  00DE               	movwf	(_VEML7700^(0+256)+7)
  4714     0D7C                     l5761:
  4715                           
  4716                           ;main.c: 322:           VEML7700[8]=LUX[2];
  4717     0D7C  0832               	movf	(_LUX^(0+256)+2),w
  4718     0D7D  00DF               	movwf	(_VEML7700^(0+256)+8)
  4719     0D7E                     l5763:
  4720                           
  4721                           ;main.c: 323:           VEML7700[9]=LUX[3];
  4722     0D7E  0833               	movf	(_LUX^(0+256)+3),w
  4723     0D7F  00E0               	movwf	(_VEML7700^(0+256)+9)
  4724     0D80                     l5765:
  4725                           
  4726                           ;main.c: 324:           VEML7700[10]=LUX[4];
  4727     0D80  0834               	movf	(_LUX^(0+256)+4),w
  4728     0D81  00E1               	movwf	(_VEML7700^(0+256)+10)
  4729     0D82                     l5767:
  4730                           
  4731                           ;main.c: 325:           LUX[0]=0;
  4732     0D82  01B0               	clrf	_LUX^(0+256)
  4733     0D83                     l5769:
  4734                           
  4735                           ;main.c: 326:           LUX[1]=0;
  4736     0D83  01B1               	clrf	(_LUX^(0+256)+1)
  4737     0D84                     l5771:
  4738                           
  4739                           ;main.c: 327:           LUX[2]=0;
  4740     0D84  01B2               	clrf	(_LUX^(0+256)+2)
  4741     0D85                     l5773:
  4742                           
  4743                           ;main.c: 328:           LUX[3]=0;
  4744     0D85  01B3               	clrf	(_LUX^(0+256)+3)
  4745     0D86                     l5775:
  4746                           
  4747                           ;main.c: 329:           LUX[4]=0;
  4748     0D86  01B4               	clrf	(_LUX^(0+256)+4)
  4749     0D87                     l5777:
  4750                           
  4751                           ;main.c: 330:           med_sl=3;
  4752     0D87  3003               	movlw	3
  4753     0D88  0021               	movlb	1	; select bank1
  4754     0D89  00B8               	movwf	_med_sl^(0+128)
  4755     0D8A                     l5779:
  4756                           
  4757                           ;main.c: 331:           i2cfinish=0;
  4758     0D8A  01B5               	clrf	_i2cfinish^(0+128)
  4759     0D8B                     l5781:
  4760                           
  4761                           ;main.c: 332:           i2busy=0;
  4762     0D8B  01B1               	clrf	_i2busy^(0+128)
  4763     0D8C                     l5783:
  4764                           
  4765                           ;main.c: 333:           PIE1bits.TXIE = 1;
  4766     0D8C  1611               	bsf	17,4	;volatile
  4767     0D8D                     l5785:
  4768     0D8D  0335               	decf	_i2cfinish^(0+128),w
  4769     0D8E  1D03               	btfss	3,2
  4770     0D8F  2D91               	goto	u4611
  4771     0D90  2D92               	goto	u4610
  4772     0D91                     u4611:
  4773     0D91  2DF6               	goto	l262
  4774     0D92                     u4610:
  4775     0D92                     l5787:
  4776     0D92  3002               	movlw	2
  4777     0D93  0632               	xorwf	_i2select^(0+128),w
  4778     0D94  1D03               	btfss	3,2
  4779     0D95  2D97               	goto	u4621
  4780     0D96  2D98               	goto	u4620
  4781     0D97                     u4621:
  4782     0D97  2DF6               	goto	l262
  4783     0D98                     u4620:
  4784     0D98                     l5789:
  4785                           
  4786                           ;main.c: 335:           sprintf(KG,"%u",weight);
  4787     0D98  3028               	movlw	low _KG
  4788     0D99  00CD               	movwf	sprintf@s^(0+128)
  4789     0D9A  3001               	movlw	high _KG
  4790     0D9B  00CE               	movwf	(sprintf@s+1)^(0+128)
  4791     0D9C  3000               	movlw	low (STR_1| (0+32768))
  4792     0D9D  00CF               	movwf	sprintf@fmt^(0+128)
  4793     0D9E  3098               	movlw	high (STR_1| (0+32768))
  4794     0D9F  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  4795     0DA0  0022               	movlb	2	; select bank2
  4796     0DA1  0844               	movf	(_weight+3)^(0+256),w
  4797     0DA2  0021               	movlb	1	; select bank1
  4798     0DA3  00D4               	movwf	((?_sprintf+3)^(0+128)+4)
  4799     0DA4  0022               	movlb	2	; select bank2
  4800     0DA5  0843               	movf	(_weight+2)^(0+256),w
  4801     0DA6  0021               	movlb	1	; select bank1
  4802     0DA7  00D3               	movwf	((?_sprintf+2)^(0+128)+4)
  4803     0DA8  0022               	movlb	2	; select bank2
  4804     0DA9  0842               	movf	(_weight+1)^(0+256),w
  4805     0DAA  0021               	movlb	1	; select bank1
  4806     0DAB  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  4807     0DAC  0022               	movlb	2	; select bank2
  4808     0DAD  0841               	movf	_weight^(0+256),w
  4809     0DAE  0021               	movlb	1	; select bank1
  4810     0DAF  00D1               	movwf	(?_sprintf^(0+128)+4)
  4811     0DB0  3194  24F1  318D   	fcall	_sprintf
  4812     0DB3                     l5791:
  4813                           
  4814                           ;main.c: 336:           for(int j=0; j<8; j++)
  4815     0DB3  0021               	movlb	1	; select bank1
  4816     0DB4  01E3               	clrf	i2c_Read@j_346^(0+128)
  4817     0DB5  01E4               	clrf	(i2c_Read@j_346+1)^(0+128)
  4818     0DB6                     l5797:
  4819                           
  4820                           ;main.c: 337:           if(KG[j]==0) KG[j]='N';
  4821     0DB6  0021               	movlb	1	; select bank1
  4822     0DB7  0863               	movf	i2c_Read@j_346^(0+128),w
  4823     0DB8  3E28               	addlw	(low (_KG| (0+256)))& (0+255)
  4824     0DB9  0086               	movwf	6
  4825     0DBA  3001               	movlw	1	; select bank2/3
  4826     0DBB  0087               	movwf	7
  4827     0DBC  0801               	movf	1,w
  4828     0DBD  1D03               	btfss	3,2
  4829     0DBE  2DC0               	goto	u4631
  4830     0DBF  2DC1               	goto	u4630
  4831     0DC0                     u4631:
  4832     0DC0  2DC8               	goto	l5801
  4833     0DC1                     u4630:
  4834     0DC1                     l5799:
  4835     0DC1  0863               	movf	i2c_Read@j_346^(0+128),w
  4836     0DC2  3E28               	addlw	(low (_KG| (0+256)))& (0+255)
  4837     0DC3  0086               	movwf	6
  4838     0DC4  3001               	movlw	1	; select bank2/3
  4839     0DC5  0087               	movwf	7
  4840     0DC6  304E               	movlw	78
  4841     0DC7  0081               	movwf	1
  4842     0DC8                     l5801:
  4843     0DC8  3001               	movlw	1
  4844     0DC9  07E3               	addwf	i2c_Read@j_346^(0+128),f
  4845     0DCA  3000               	movlw	0
  4846     0DCB  3DE4               	addwfc	(i2c_Read@j_346+1)^(0+128),f
  4847     0DCC                     l5803:
  4848     0DCC  0864               	movf	(i2c_Read@j_346+1)^(0+128),w
  4849     0DCD  3A80               	xorlw	128
  4850     0DCE  0020               	movlb	0	; select bank0
  4851     0DCF  00EA               	movwf	??_i2c_Read
  4852     0DD0  3080               	movlw	128
  4853     0DD1  026A               	subwf	??_i2c_Read,w
  4854     0DD2  1D03               	skipz
  4855     0DD3  2DD7               	goto	u4645
  4856     0DD4  3008               	movlw	8
  4857     0DD5  0021               	movlb	1	; select bank1
  4858     0DD6  0263               	subwf	i2c_Read@j_346^(0+128),w
  4859     0DD7                     u4645:
  4860     0DD7  1C03               	skipc
  4861     0DD8  2DDA               	goto	u4641
  4862     0DD9  2DDB               	goto	u4640
  4863     0DDA                     u4641:
  4864     0DDA  2DB6               	goto	l5797
  4865     0DDB                     u4640:
  4866     0DDB                     l5805:
  4867                           
  4868                           ;main.c: 338:           COM[1]= com + 48;
  4869     0DDB  0021               	movlb	1	; select bank1
  4870     0DDC  0860               	movf	i2c_Read@com^(0+128),w
  4871     0DDD  3E30               	addlw	48
  4872     0DDE  00ED               	movwf	(_COM^(0+128)+1)
  4873     0DDF                     l5807:
  4874                           
  4875                           ;main.c: 339:           LOAD_CELL[6]=KG[0];
  4876     0DDF  0022               	movlb	2	; select bank2
  4877     0DE0  0828               	movf	_KG^(0+256),w
  4878     0DE1  00CD               	movwf	(_LOAD_CELL^(0+256)+6)
  4879     0DE2                     l5809:
  4880                           
  4881                           ;main.c: 340:           LOAD_CELL[7]=KG[1];
  4882     0DE2  0829               	movf	(_KG^(0+256)+1),w
  4883     0DE3  00CE               	movwf	(_LOAD_CELL^(0+256)+7)
  4884     0DE4                     l5811:
  4885                           
  4886                           ;main.c: 341:           LOAD_CELL[8]=KG[2];
  4887     0DE4  082A               	movf	(_KG^(0+256)+2),w
  4888     0DE5  00CF               	movwf	(_LOAD_CELL^(0+256)+8)
  4889     0DE6                     l5813:
  4890                           
  4891                           ;main.c: 342:           LOAD_CELL[9]=KG[3];
  4892     0DE6  082B               	movf	(_KG^(0+256)+3),w
  4893     0DE7  00D0               	movwf	(_LOAD_CELL^(0+256)+9)
  4894     0DE8                     l5815:
  4895                           
  4896                           ;main.c: 343:           LOAD_CELL[10]=KG[4];
  4897     0DE8  082C               	movf	(_KG^(0+256)+4),w
  4898     0DE9  00D1               	movwf	(_LOAD_CELL^(0+256)+10)
  4899     0DEA                     l5817:
  4900                           
  4901                           ;main.c: 344:           LOAD_CELL[11]=KG[5];
  4902     0DEA  082D               	movf	(_KG^(0+256)+5),w
  4903     0DEB  00D2               	movwf	(_LOAD_CELL^(0+256)+11)
  4904     0DEC                     l5819:
  4905                           
  4906                           ;main.c: 345:           LOAD_CELL[12]=KG[6];
  4907     0DEC  082E               	movf	(_KG^(0+256)+6),w
  4908     0DED  00D3               	movwf	(_LOAD_CELL^(0+256)+12)
  4909     0DEE                     l5821:
  4910                           
  4911                           ;main.c: 346:           LOAD_CELL[13]=KG[7];
  4912     0DEE  082F               	movf	(_KG^(0+256)+7),w
  4913     0DEF  00D4               	movwf	(_LOAD_CELL^(0+256)+13)
  4914     0DF0                     l5823:
  4915                           
  4916                           ;main.c: 347:           med_sl=4;
  4917     0DF0  3004               	movlw	4
  4918     0DF1  0021               	movlb	1	; select bank1
  4919     0DF2  00B8               	movwf	_med_sl^(0+128)
  4920     0DF3                     l5825:
  4921                           
  4922                           ;main.c: 348:           i2cfinish=0;
  4923     0DF3  01B5               	clrf	_i2cfinish^(0+128)
  4924     0DF4                     l5827:
  4925                           
  4926                           ;main.c: 349:           i2busy=0;
  4927     0DF4  01B1               	clrf	_i2busy^(0+128)
  4928     0DF5                     l5829:
  4929                           
  4930                           ;main.c: 350:           PIE1bits.TXIE = 1;
  4931     0DF5  1611               	bsf	17,4	;volatile
  4932     0DF6                     l262:
  4933     0DF6  0008               	return
  4934     0DF7                     __end_of_i2c_Read:
  4935                           
  4936                           	psect	text3
  4937     1411                     __ptext3:	
  4938 ;; *************** function _Sys_Init *****************
  4939 ;; Defined at:
  4940 ;;		line 83 in file "Init.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4954 ;;      Params:         0       0       0       0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 3
  4961 ;; This function calls:
  4962 ;;		_Pin_init
  4963 ;;		_Reg_init
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969     1411                     _Sys_Init:	
  4970                           ;psect for function _Sys_Init
  4971                           
  4972     1411                     l4271:	
  4973                           ;incstack = 0
  4974                           ; Regs used in _Sys_Init: [wreg+status,2+status,0+pclath+cstack]
  4975                           
  4976                           
  4977                           ;Init.c: 85:     Reg_init();
  4978     1411  3195  256E  3194   	fcall	_Reg_init
  4979                           
  4980                           ;Init.c: 86:     Pin_init();
  4981     1414  3194  2418  3194   	fcall	_Pin_init
  4982     1417                     l516:
  4983     1417  0008               	return
  4984     1418                     __end_of_Sys_Init:
  4985                           
  4986                           	psect	text4
  4987     156E                     __ptext4:	
  4988 ;; *************** function _Reg_init *****************
  4989 ;; Defined at:
  4990 ;;		line 47 in file "Init.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, status,2
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5004 ;;      Params:         0       0       0       0       0       0       0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0
  5006 ;;      Temps:          0       1       0       0       0       0       0       0
  5007 ;;      Totals:         0       1       0       0       0       0       0       0
  5008 ;;Total ram usage:        1 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 2
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_Sys_Init
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018     156E                     _Reg_init:	
  5019                           ;psect for function _Reg_init
  5020                           
  5021     156E                     l3805:	
  5022                           ;incstack = 0
  5023                           ; Regs used in _Reg_init: [wreg+status,2]
  5024                           
  5025                           
  5026                           ;Init.c: 49:     OSCCON = 0x70;
  5027     156E  3070               	movlw	112
  5028     156F  0021               	movlb	1	; select bank1
  5029     1570  0099               	movwf	25	;volatile
  5030     1571                     l3807:
  5031                           
  5032                           ;Init.c: 50:     OSCTUNE = 0x00;
  5033     1571  0198               	clrf	24	;volatile
  5034     1572                     l3809:
  5035                           
  5036                           ;Init.c: 51:     BORCON = 0x00;
  5037     1572  0022               	movlb	2	; select bank2
  5038     1573  0196               	clrf	22	;volatile
  5039                           
  5040                           ;Init.c: 53:     INTCON = 0xE0;
  5041     1574  30E0               	movlw	224
  5042     1575  008B               	movwf	11	;volatile
  5043                           
  5044                           ;Init.c: 57:     BAUDCON = 0x08;
  5045     1576  3008               	movlw	8
  5046     1577  0023               	movlb	3	; select bank3
  5047     1578  009F               	movwf	31	;volatile
  5048                           
  5049                           ;Init.c: 58:     SPBRG = 68;
  5050     1579  3044               	movlw	68
  5051     157A  009B               	movwf	27	;volatile
  5052                           
  5053                           ;Init.c: 60:     RCSTA = 0x90;
  5054     157B  3090               	movlw	144
  5055     157C  009D               	movwf	29	;volatile
  5056                           
  5057                           ;Init.c: 62:     TXSTA = 0x24;
  5058     157D  3024               	movlw	36
  5059     157E  009E               	movwf	30	;volatile
  5060     157F                     l3811:
  5061                           
  5062                           ;Init.c: 63:     PIE1bits.RCIE = 1;
  5063     157F  0021               	movlb	1	; select bank1
  5064     1580  1691               	bsf	17,5	;volatile
  5065                           
  5066                           ;Init.c: 65:     T1CON = 0x30;
  5067     1581  3030               	movlw	48
  5068     1582  0020               	movlb	0	; select bank0
  5069     1583  0098               	movwf	24	;volatile
  5070                           
  5071                           ;Init.c: 67:     T2CON = 0x01;
  5072     1584  3001               	movlw	1
  5073     1585  009C               	movwf	28	;volatile
  5074     1586                     l3813:
  5075                           
  5076                           ;Init.c: 68:     PIE1bits.TMR2IE = 1;
  5077     1586  0021               	movlb	1	; select bank1
  5078     1587  1491               	bsf	17,1	;volatile
  5079     1588                     l3815:
  5080                           
  5081                           ;Init.c: 71:     SSPSTAT = 0x00;
  5082     1588  0024               	movlb	4	; select bank4
  5083     1589  0194               	clrf	20	;volatile
  5084     158A                     l3817:
  5085                           
  5086                           ;Init.c: 72:     SSPCON1 = 0x08;
  5087     158A  3008               	movlw	8
  5088     158B  0095               	movwf	21	;volatile
  5089                           
  5090                           ;Init.c: 73:     SSPCON2 = 0x00;
  5091     158C  0196               	clrf	22	;volatile
  5092     158D                     l3819:
  5093                           
  5094                           ;Init.c: 74:     SSPADD = 0x4F;
  5095     158D  304F               	movlw	79
  5096     158E  0092               	movwf	18	;volatile
  5097     158F                     l3821:
  5098                           
  5099                           ;Init.c: 75:     SSPCON1bits.SSPEN = 0;
  5100     158F  1295               	bcf	21,5	;volatile
  5101     1590                     l3823:
  5102                           
  5103                           ;Init.c: 76:     _delay((unsigned long)((10)*(32000000/4000.0)));
  5104     1590  3068               	movlw	104
  5105     1591  0020               	movlb	0	; select bank0
  5106     1592  00A0               	movwf	??_Reg_init
  5107     1593  30E4               	movlw	228
  5108     1594                     u6057:
  5109     1594  0B89               	decfsz	9,f
  5110     1595  2D94               	goto	u6057
  5111     1596  0BA0               	decfsz	??_Reg_init,f
  5112     1597  2D94               	goto	u6057
  5113     1598  0000               	nop
  5114     1599                     l3825:
  5115                           
  5116                           ;Init.c: 78:     SSPCON1bits.SSPEN = 1;
  5117     1599  0024               	movlb	4	; select bank4
  5118     159A  1695               	bsf	21,5	;volatile
  5119     159B                     l3827:
  5120                           
  5121                           ;Init.c: 79:     PIE1bits.SSPIE = 0;
  5122     159B  0021               	movlb	1	; select bank1
  5123     159C  1191               	bcf	17,3	;volatile
  5124     159D                     l513:
  5125     159D  0008               	return
  5126     159E                     __end_of_Reg_init:
  5127                           
  5128                           	psect	text5
  5129     1418                     __ptext5:	
  5130 ;; *************** function _Pin_init *****************
  5131 ;; Defined at:
  5132 ;;		line 14 in file "Init.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5146 ;;      Params:         0       0       0       0       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 2
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_Sys_Init
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160     1418                     _Pin_init:	
  5161                           ;psect for function _Pin_init
  5162                           
  5163     1418                     l3781:	
  5164                           ;incstack = 0
  5165                           ; Regs used in _Pin_init: [wreg+status,2]
  5166                           
  5167                           
  5168                           ;Init.c: 19:     LATA = 0x00;
  5169     1418  0022               	movlb	2	; select bank2
  5170     1419  018C               	clrf	12	;volatile
  5171                           
  5172                           ;Init.c: 20:     LATB = 0x00;
  5173     141A  018D               	clrf	13	;volatile
  5174                           
  5175                           ;Init.c: 21:     LATC = 0x00;
  5176     141B  018E               	clrf	14	;volatile
  5177     141C                     l3783:
  5178                           
  5179                           ;Init.c: 25:     TRISA = 0xFF;
  5180     141C  30FF               	movlw	255
  5181     141D  0021               	movlb	1	; select bank1
  5182     141E  008C               	movwf	12	;volatile
  5183     141F                     l3785:
  5184                           
  5185                           ;Init.c: 26:     TRISB = 0x80;
  5186     141F  3080               	movlw	128
  5187     1420  008D               	movwf	13	;volatile
  5188     1421                     l3787:
  5189                           
  5190                           ;Init.c: 27:     TRISC = 0xD9;
  5191     1421  30D9               	movlw	217
  5192     1422  008E               	movwf	14	;volatile
  5193     1423                     l3789:
  5194                           
  5195                           ;Init.c: 31:     ANSELB = 0x00;
  5196     1423  0023               	movlb	3	; select bank3
  5197     1424  018D               	clrf	13	;volatile
  5198     1425                     l3791:
  5199                           
  5200                           ;Init.c: 32:     ANSELA = 0x00;
  5201     1425  018C               	clrf	12	;volatile
  5202     1426                     l3793:
  5203                           
  5204                           ;Init.c: 36:     WPUE = 0x00;
  5205     1426  0024               	movlb	4	; select bank4
  5206     1427  0190               	clrf	16	;volatile
  5207     1428                     l3795:
  5208                           
  5209                           ;Init.c: 37:     WPUB = 0x00;
  5210     1428  018D               	clrf	13	;volatile
  5211     1429                     l3797:
  5212                           
  5213                           ;Init.c: 41:     APFCON = 0x00;
  5214     1429  0022               	movlb	2	; select bank2
  5215     142A  019D               	clrf	29	;volatile
  5216     142B                     l3799:
  5217                           
  5218                           ;Init.c: 43:     PORTA = 0x00;
  5219     142B  0020               	movlb	0	; select bank0
  5220     142C  018C               	clrf	12	;volatile
  5221     142D                     l3801:
  5222                           
  5223                           ;Init.c: 44:     PORTB = 0x00;
  5224     142D  018D               	clrf	13	;volatile
  5225     142E                     l3803:
  5226                           
  5227                           ;Init.c: 45:     PORTC = 0x00;
  5228     142E  018E               	clrf	14	;volatile
  5229     142F                     l510:
  5230     142F  0008               	return
  5231     1430                     __end_of_Pin_init:
  5232                           
  5233                           	psect	text6
  5234     0EDD                     __ptext6:	
  5235 ;; *************** function _DS18B20_Read *****************
  5236 ;; Defined at:
  5237 ;;		line 104 in file "main.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  TRIS            2   19[BANK1 ] PTR unsigned char 
  5240 ;;		 -> TRISC(1), TRISA(1), 
  5241 ;;  PORT            2   21[BANK1 ] PTR unsigned char 
  5242 ;;		 -> PORTC(1), PORTA(1), 
  5243 ;;  LAT             2   23[BANK1 ] PTR unsigned char 
  5244 ;;		 -> LATC(1), LATA(1), 
  5245 ;;  PIN             1   25[BANK1 ] unsigned char 
  5246 ;;  entry           1   26[BANK1 ] unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  j               2   77[BANK0 ] int 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5258 ;;      Params:         0       0       8       0       0       0       0       0
  5259 ;;      Locals:         0       2       0       0       0       0       0       0
  5260 ;;      Temps:          0       3       0       0       0       0       0       0
  5261 ;;      Totals:         0       5       8       0       0       0       0       0
  5262 ;;Total ram usage:       13 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 10
  5265 ;; This function calls:
  5266 ;;		_OW_read_byte
  5267 ;;		_OW_reset_pulse
  5268 ;;		_OW_write_byte
  5269 ;;		_sprintf
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275     0EDD                     _DS18B20_Read:	
  5276                           ;psect for function _DS18B20_Read
  5277                           
  5278     0EDD                     l5669:	
  5279                           ;incstack = 0
  5280                           ; Regs used in _DS18B20_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5281                           
  5282                           
  5283                           ;main.c: 105:           OW_reset_pulse(&TRISA, &PORTA, &LATA, PIN);
  5284     0EDD  308C               	movlw	140
  5285     0EDE  0020               	movlb	0	; select bank0
  5286     0EDF  00A7               	movwf	OW_reset_pulse@TRIS
  5287     0EE0  3000               	movlw	0
  5288     0EE1  00A8               	movwf	OW_reset_pulse@TRIS+1
  5289     0EE2  300C               	movlw	12
  5290     0EE3  00A9               	movwf	OW_reset_pulse@PORT
  5291     0EE4  3000               	movlw	0
  5292     0EE5  00AA               	movwf	OW_reset_pulse@PORT+1
  5293     0EE6  300C               	movlw	12
  5294     0EE7  00AB               	movwf	OW_reset_pulse@LAT
  5295     0EE8  3001               	movlw	1
  5296     0EE9  00AC               	movwf	OW_reset_pulse@LAT+1
  5297     0EEA  0021               	movlb	1	; select bank1
  5298     0EEB  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5299     0EEC  0020               	movlb	0	; select bank0
  5300     0EED  00AD               	movwf	OW_reset_pulse@PIN
  5301     0EEE  3188  2048  318E   	fcall	_OW_reset_pulse
  5302                           
  5303                           ;main.c: 107:           OW_write_byte(0xCC, &TRISA, &LATA, PIN);
  5304     0EF1  308C               	movlw	140
  5305     0EF2  0020               	movlb	0	; select bank0
  5306     0EF3  00A7               	movwf	OW_write_byte@TRIS
  5307     0EF4  3000               	movlw	0
  5308     0EF5  00A8               	movwf	OW_write_byte@TRIS+1
  5309     0EF6  300C               	movlw	12
  5310     0EF7  00A9               	movwf	OW_write_byte@LAT
  5311     0EF8  3001               	movlw	1
  5312     0EF9  00AA               	movwf	OW_write_byte@LAT+1
  5313     0EFA  0021               	movlb	1	; select bank1
  5314     0EFB  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5315     0EFC  0020               	movlb	0	; select bank0
  5316     0EFD  00AB               	movwf	OW_write_byte@PIN
  5317     0EFE  30CC               	movlw	204
  5318     0EFF  3194  2465  318E   	fcall	_OW_write_byte
  5319                           
  5320                           ;main.c: 108:           OW_write_byte(0x44, &TRISA, &LATA, PIN);
  5321     0F02  308C               	movlw	140
  5322     0F03  0020               	movlb	0	; select bank0
  5323     0F04  00A7               	movwf	OW_write_byte@TRIS
  5324     0F05  3000               	movlw	0
  5325     0F06  00A8               	movwf	OW_write_byte@TRIS+1
  5326     0F07  300C               	movlw	12
  5327     0F08  00A9               	movwf	OW_write_byte@LAT
  5328     0F09  3001               	movlw	1
  5329     0F0A  00AA               	movwf	OW_write_byte@LAT+1
  5330     0F0B  0021               	movlb	1	; select bank1
  5331     0F0C  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5332     0F0D  0020               	movlb	0	; select bank0
  5333     0F0E  00AB               	movwf	OW_write_byte@PIN
  5334     0F0F  3044               	movlw	68
  5335     0F10  3194  2465  318E   	fcall	_OW_write_byte
  5336     0F13                     l5671:
  5337                           
  5338                           ;main.c: 110:           _delay((unsigned long)((800)*(32000000/4000.0)));
  5339     0F13  3021               	movlw	33
  5340     0F14  0020               	movlb	0	; select bank0
  5341     0F15  00EB               	movwf	??_DS18B20_Read+1
  5342     0F16  3078               	movlw	120
  5343     0F17  00EA               	movwf	??_DS18B20_Read
  5344     0F18  3098               	movlw	152
  5345     0F19                     u6067:
  5346     0F19  0B89               	decfsz	9,f
  5347     0F1A  2F19               	goto	u6067
  5348     0F1B  0BEA               	decfsz	??_DS18B20_Read,f
  5349     0F1C  2F19               	goto	u6067
  5350     0F1D  0BEB               	decfsz	??_DS18B20_Read+1,f
  5351     0F1E  2F19               	goto	u6067
  5352     0F1F  0000               	nop
  5353     0F20                     l5673:
  5354                           
  5355                           ;main.c: 112:           OW_reset_pulse(&TRISA, &PORTA, &LATA, PIN);
  5356     0F20  308C               	movlw	140
  5357     0F21  0020               	movlb	0	; select bank0
  5358     0F22  00A7               	movwf	OW_reset_pulse@TRIS
  5359     0F23  3000               	movlw	0
  5360     0F24  00A8               	movwf	OW_reset_pulse@TRIS+1
  5361     0F25  300C               	movlw	12
  5362     0F26  00A9               	movwf	OW_reset_pulse@PORT
  5363     0F27  3000               	movlw	0
  5364     0F28  00AA               	movwf	OW_reset_pulse@PORT+1
  5365     0F29  300C               	movlw	12
  5366     0F2A  00AB               	movwf	OW_reset_pulse@LAT
  5367     0F2B  3001               	movlw	1
  5368     0F2C  00AC               	movwf	OW_reset_pulse@LAT+1
  5369     0F2D  0021               	movlb	1	; select bank1
  5370     0F2E  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5371     0F2F  0020               	movlb	0	; select bank0
  5372     0F30  00AD               	movwf	OW_reset_pulse@PIN
  5373     0F31  3188  2048  318E   	fcall	_OW_reset_pulse
  5374     0F34                     l5675:
  5375                           
  5376                           ;main.c: 114:           OW_write_byte(0xCC, &TRISA, &LATA, PIN);
  5377     0F34  308C               	movlw	140
  5378     0F35  0020               	movlb	0	; select bank0
  5379     0F36  00A7               	movwf	OW_write_byte@TRIS
  5380     0F37  3000               	movlw	0
  5381     0F38  00A8               	movwf	OW_write_byte@TRIS+1
  5382     0F39  300C               	movlw	12
  5383     0F3A  00A9               	movwf	OW_write_byte@LAT
  5384     0F3B  3001               	movlw	1
  5385     0F3C  00AA               	movwf	OW_write_byte@LAT+1
  5386     0F3D  0021               	movlb	1	; select bank1
  5387     0F3E  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5388     0F3F  0020               	movlb	0	; select bank0
  5389     0F40  00AB               	movwf	OW_write_byte@PIN
  5390     0F41  30CC               	movlw	204
  5391     0F42  3194  2465  318E   	fcall	_OW_write_byte
  5392     0F45                     l5677:
  5393                           
  5394                           ;main.c: 115:           OW_write_byte(0xBE, &TRISA, &LATA, PIN);
  5395     0F45  308C               	movlw	140
  5396     0F46  0020               	movlb	0	; select bank0
  5397     0F47  00A7               	movwf	OW_write_byte@TRIS
  5398     0F48  3000               	movlw	0
  5399     0F49  00A8               	movwf	OW_write_byte@TRIS+1
  5400     0F4A  300C               	movlw	12
  5401     0F4B  00A9               	movwf	OW_write_byte@LAT
  5402     0F4C  3001               	movlw	1
  5403     0F4D  00AA               	movwf	OW_write_byte@LAT+1
  5404     0F4E  0021               	movlb	1	; select bank1
  5405     0F4F  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5406     0F50  0020               	movlb	0	; select bank0
  5407     0F51  00AB               	movwf	OW_write_byte@PIN
  5408     0F52  30BE               	movlw	190
  5409     0F53  3194  2465  318E   	fcall	_OW_write_byte
  5410     0F56                     l5679:
  5411                           
  5412                           ;main.c: 117:           Temp=0;
  5413     0F56  0021               	movlb	1	; select bank1
  5414     0F57  01A4               	clrf	_Temp^(0+128)
  5415     0F58  01A5               	clrf	(_Temp+1)^(0+128)
  5416     0F59                     l5681:
  5417                           
  5418                           ;main.c: 118:           Temp = OW_read_byte(&TRISA, &PORTA, &LATA, PIN);
  5419     0F59  308C               	movlw	140
  5420     0F5A  0020               	movlb	0	; select bank0
  5421     0F5B  00B0               	movwf	OW_read_byte@TRIS
  5422     0F5C  3000               	movlw	0
  5423     0F5D  00B1               	movwf	OW_read_byte@TRIS+1
  5424     0F5E  300C               	movlw	12
  5425     0F5F  00B2               	movwf	OW_read_byte@PORT
  5426     0F60  3000               	movlw	0
  5427     0F61  00B3               	movwf	OW_read_byte@PORT+1
  5428     0F62  300C               	movlw	12
  5429     0F63  00B4               	movwf	OW_read_byte@LAT
  5430     0F64  3001               	movlw	1
  5431     0F65  00B5               	movwf	OW_read_byte@LAT+1
  5432     0F66  0021               	movlb	1	; select bank1
  5433     0F67  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5434     0F68  0020               	movlb	0	; select bank0
  5435     0F69  00B6               	movwf	OW_read_byte@PIN
  5436     0F6A  3195  2516  318E   	fcall	_OW_read_byte
  5437     0F6D  0020               	movlb	0	; select bank0
  5438     0F6E  00EA               	movwf	??_DS18B20_Read
  5439     0F6F  01EB               	clrf	??_DS18B20_Read+1
  5440     0F70  086A               	movf	??_DS18B20_Read,w
  5441     0F71  0021               	movlb	1	; select bank1
  5442     0F72  00A4               	movwf	_Temp^(0+128)
  5443     0F73  0020               	movlb	0	; select bank0
  5444     0F74  086B               	movf	??_DS18B20_Read+1,w
  5445     0F75  0021               	movlb	1	; select bank1
  5446     0F76  00A5               	movwf	(_Temp+1)^(0+128)
  5447     0F77                     l5683:
  5448                           
  5449                           ;main.c: 120:           Temp |= (OW_read_byte(&TRISA, &PORTA, &LATA, PIN) << 8);
  5450     0F77  308C               	movlw	140
  5451     0F78  0020               	movlb	0	; select bank0
  5452     0F79  00B0               	movwf	OW_read_byte@TRIS
  5453     0F7A  3000               	movlw	0
  5454     0F7B  00B1               	movwf	OW_read_byte@TRIS+1
  5455     0F7C  300C               	movlw	12
  5456     0F7D  00B2               	movwf	OW_read_byte@PORT
  5457     0F7E  3000               	movlw	0
  5458     0F7F  00B3               	movwf	OW_read_byte@PORT+1
  5459     0F80  300C               	movlw	12
  5460     0F81  00B4               	movwf	OW_read_byte@LAT
  5461     0F82  3001               	movlw	1
  5462     0F83  00B5               	movwf	OW_read_byte@LAT+1
  5463     0F84  0021               	movlb	1	; select bank1
  5464     0F85  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5465     0F86  0020               	movlb	0	; select bank0
  5466     0F87  00B6               	movwf	OW_read_byte@PIN
  5467     0F88  3195  2516  318E   	fcall	_OW_read_byte
  5468     0F8B  0020               	movlb	0	; select bank0
  5469     0F8C  00EA               	movwf	??_DS18B20_Read
  5470     0F8D  01EB               	clrf	??_DS18B20_Read+1
  5471     0F8E  086A               	movf	??_DS18B20_Read,w
  5472     0F8F  00EB               	movwf	??_DS18B20_Read+1
  5473     0F90  01EA               	clrf	??_DS18B20_Read
  5474     0F91  086A               	movf	??_DS18B20_Read,w
  5475     0F92  0021               	movlb	1	; select bank1
  5476     0F93  04A4               	iorwf	_Temp^(0+128),f
  5477     0F94  0020               	movlb	0	; select bank0
  5478     0F95  086B               	movf	??_DS18B20_Read+1,w
  5479     0F96  0021               	movlb	1	; select bank1
  5480     0F97  04A5               	iorwf	(_Temp+1)^(0+128),f
  5481     0F98                     l5685:
  5482                           
  5483                           ;main.c: 121:           OW_reset_pulse(&TRISA, &PORTA, &LATA, PIN);
  5484     0F98  308C               	movlw	140
  5485     0F99  0020               	movlb	0	; select bank0
  5486     0F9A  00A7               	movwf	OW_reset_pulse@TRIS
  5487     0F9B  3000               	movlw	0
  5488     0F9C  00A8               	movwf	OW_reset_pulse@TRIS+1
  5489     0F9D  300C               	movlw	12
  5490     0F9E  00A9               	movwf	OW_reset_pulse@PORT
  5491     0F9F  3000               	movlw	0
  5492     0FA0  00AA               	movwf	OW_reset_pulse@PORT+1
  5493     0FA1  300C               	movlw	12
  5494     0FA2  00AB               	movwf	OW_reset_pulse@LAT
  5495     0FA3  3001               	movlw	1
  5496     0FA4  00AC               	movwf	OW_reset_pulse@LAT+1
  5497     0FA5  0021               	movlb	1	; select bank1
  5498     0FA6  0866               	movf	DS18B20_Read@PIN^(0+128),w
  5499     0FA7  0020               	movlb	0	; select bank0
  5500     0FA8  00AD               	movwf	OW_reset_pulse@PIN
  5501     0FA9  3188  2048  318E   	fcall	_OW_reset_pulse
  5502     0FAC                     l5687:
  5503                           
  5504                           ;main.c: 122:           sprintf(TEMPDS,"%u",Temp);
  5505     0FAC  3035               	movlw	low _TEMPDS
  5506     0FAD  0021               	movlb	1	; select bank1
  5507     0FAE  00CD               	movwf	sprintf@s^(0+128)
  5508     0FAF  3001               	movlw	high _TEMPDS
  5509     0FB0  00CE               	movwf	(sprintf@s+1)^(0+128)
  5510     0FB1  3000               	movlw	low (STR_1| (0+32768))
  5511     0FB2  00CF               	movwf	sprintf@fmt^(0+128)
  5512     0FB3  3098               	movlw	high (STR_1| (0+32768))
  5513     0FB4  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  5514     0FB5  0825               	movf	(_Temp+1)^(0+128),w
  5515     0FB6  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  5516     0FB7  0824               	movf	_Temp^(0+128),w
  5517     0FB8  00D1               	movwf	(?_sprintf^(0+128)+4)
  5518     0FB9  3194  24F1  318E   	fcall	_sprintf
  5519     0FBC                     l5689:
  5520                           
  5521                           ;main.c: 123:           for(int j=0; j<4; j++)
  5522     0FBC  0020               	movlb	0	; select bank0
  5523     0FBD  01ED               	clrf	DS18B20_Read@j
  5524     0FBE  01EE               	clrf	DS18B20_Read@j+1
  5525     0FBF                     l5695:
  5526                           
  5527                           ;main.c: 124:           if(TEMPDS[j]==0) TEMPDS[j]='N';
  5528     0FBF  0020               	movlb	0	; select bank0
  5529     0FC0  086D               	movf	DS18B20_Read@j,w
  5530     0FC1  3E35               	addlw	(low (_TEMPDS| (0+256)))& (0+255)
  5531     0FC2  0086               	movwf	6
  5532     0FC3  3001               	movlw	1	; select bank2/3
  5533     0FC4  0087               	movwf	7
  5534     0FC5  0801               	movf	1,w
  5535     0FC6  1D03               	btfss	3,2
  5536     0FC7  2FC9               	goto	u4541
  5537     0FC8  2FCA               	goto	u4540
  5538     0FC9                     u4541:
  5539     0FC9  2FD1               	goto	l5699
  5540     0FCA                     u4540:
  5541     0FCA                     l5697:
  5542     0FCA  086D               	movf	DS18B20_Read@j,w
  5543     0FCB  3E35               	addlw	(low (_TEMPDS| (0+256)))& (0+255)
  5544     0FCC  0086               	movwf	6
  5545     0FCD  3001               	movlw	1	; select bank2/3
  5546     0FCE  0087               	movwf	7
  5547     0FCF  304E               	movlw	78
  5548     0FD0  0081               	movwf	1
  5549     0FD1                     l5699:
  5550     0FD1  3001               	movlw	1
  5551     0FD2  07ED               	addwf	DS18B20_Read@j,f
  5552     0FD3  3000               	movlw	0
  5553     0FD4  3DEE               	addwfc	DS18B20_Read@j+1,f
  5554     0FD5                     l5701:
  5555     0FD5  086E               	movf	DS18B20_Read@j+1,w
  5556     0FD6  3A80               	xorlw	128
  5557     0FD7  00EA               	movwf	??_DS18B20_Read
  5558     0FD8  3080               	movlw	128
  5559     0FD9  026A               	subwf	??_DS18B20_Read,w
  5560     0FDA  1D03               	skipz
  5561     0FDB  2FDE               	goto	u4555
  5562     0FDC  3004               	movlw	4
  5563     0FDD  026D               	subwf	DS18B20_Read@j,w
  5564     0FDE                     u4555:
  5565     0FDE  1C03               	skipc
  5566     0FDF  2FE1               	goto	u4551
  5567     0FE0  2FE2               	goto	u4550
  5568     0FE1                     u4551:
  5569     0FE1  2FBF               	goto	l5695
  5570     0FE2                     u4550:
  5571     0FE2                     l5703:
  5572                           
  5573                           ;main.c: 125:           COM[1]=entry + 48;
  5574     0FE2  0021               	movlb	1	; select bank1
  5575     0FE3  0867               	movf	DS18B20_Read@entry^(0+128),w
  5576     0FE4  3E30               	addlw	48
  5577     0FE5  00ED               	movwf	(_COM^(0+128)+1)
  5578     0FE6                     l5705:
  5579                           
  5580                           ;main.c: 126:           DS18B[6]=TEMPDS[0];
  5581     0FE6  0022               	movlb	2	; select bank2
  5582     0FE7  0835               	movf	_TEMPDS^(0+256),w
  5583     0FE8  0023               	movlb	3	; select bank3
  5584     0FE9  00BD               	movwf	(_DS18B^(0+384)+6)
  5585     0FEA                     l5707:
  5586                           
  5587                           ;main.c: 127:           DS18B[7]=TEMPDS[1];
  5588     0FEA  0022               	movlb	2	; select bank2
  5589     0FEB  0836               	movf	(_TEMPDS^(0+256)+1),w
  5590     0FEC  0023               	movlb	3	; select bank3
  5591     0FED  00BE               	movwf	(_DS18B^(0+384)+7)
  5592     0FEE                     l5709:
  5593                           
  5594                           ;main.c: 128:           DS18B[8]=TEMPDS[2];
  5595     0FEE  0022               	movlb	2	; select bank2
  5596     0FEF  0837               	movf	(_TEMPDS^(0+256)+2),w
  5597     0FF0  0023               	movlb	3	; select bank3
  5598     0FF1  00BF               	movwf	(_DS18B^(0+384)+8)
  5599     0FF2                     l5711:
  5600                           
  5601                           ;main.c: 129:           DS18B[9]=TEMPDS[3];
  5602     0FF2  0022               	movlb	2	; select bank2
  5603     0FF3  0838               	movf	(_TEMPDS^(0+256)+3),w
  5604     0FF4  0023               	movlb	3	; select bank3
  5605     0FF5  00C0               	movwf	(_DS18B^(0+384)+9)
  5606     0FF6                     l5713:
  5607                           
  5608                           ;main.c: 130:           TEMPDS[0]=0;
  5609     0FF6  0022               	movlb	2	; select bank2
  5610     0FF7  01B5               	clrf	_TEMPDS^(0+256)
  5611     0FF8                     l5715:
  5612                           
  5613                           ;main.c: 131:           TEMPDS[1]=0;
  5614     0FF8  01B6               	clrf	(_TEMPDS^(0+256)+1)
  5615     0FF9                     l5717:
  5616                           
  5617                           ;main.c: 132:           TEMPDS[2]=0;
  5618     0FF9  01B7               	clrf	(_TEMPDS^(0+256)+2)
  5619     0FFA                     l5719:
  5620                           
  5621                           ;main.c: 133:           TEMPDS[3]=0;
  5622     0FFA  01B8               	clrf	(_TEMPDS^(0+256)+3)
  5623     0FFB                     l5721:
  5624                           
  5625                           ;main.c: 134:           med_sl=2;
  5626     0FFB  3002               	movlw	2
  5627     0FFC  0021               	movlb	1	; select bank1
  5628     0FFD  00B8               	movwf	_med_sl^(0+128)
  5629     0FFE                     l5723:
  5630                           
  5631                           ;main.c: 135:           PIE1bits.TXIE = 1;
  5632     0FFE  1611               	bsf	17,4	;volatile
  5633     0FFF                     l190:
  5634     0FFF  0008               	return
  5635     1000                     __end_of_DS18B20_Read:
  5636                           
  5637                           	psect	text7
  5638     1465                     __ptext7:	
  5639 ;; *************** function _OW_write_byte *****************
  5640 ;; Defined at:
  5641 ;;		line 177 in file "1wire.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  write_data      1    wreg     unsigned char 
  5644 ;;  TRIS            2    7[BANK0 ] PTR unsigned char 
  5645 ;;		 -> TRISA(1), 
  5646 ;;  LAT             2    9[BANK0 ] PTR unsigned char 
  5647 ;;		 -> LATA(1), 
  5648 ;;  PIN             1   11[BANK0 ] unsigned char 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  write_data      1   13[BANK0 ] unsigned char 
  5651 ;;  loop            1   14[BANK0 ] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5661 ;;      Params:         0       5       0       0       0       0       0       0
  5662 ;;      Locals:         0       2       0       0       0       0       0       0
  5663 ;;      Temps:          0       1       0       0       0       0       0       0
  5664 ;;      Totals:         0       8       0       0       0       0       0       0
  5665 ;;Total ram usage:        8 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 3
  5668 ;; This function calls:
  5669 ;;		_OW_write_bit
  5670 ;; This function is called by:
  5671 ;;		_DS18B20_Read
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675     1465                     _OW_write_byte:	
  5676                           ;psect for function _OW_write_byte
  5677                           
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _OW_write_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5681                           ;OW_write_byte@write_data stored from wreg
  5682     1465  0020               	movlb	0	; select bank0
  5683     1466  00AD               	movwf	OW_write_byte@write_data
  5684     1467                     l5587:
  5685     1467  01AE               	clrf	OW_write_byte@loop
  5686     1468                     l5593:
  5687     1468  0828               	movf	OW_write_byte@TRIS+1,w
  5688     1469  00A1               	movwf	OW_write_bit@TRIS+1
  5689     146A  0827               	movf	OW_write_byte@TRIS,w
  5690     146B  00A0               	movwf	OW_write_bit@TRIS
  5691     146C  082A               	movf	OW_write_byte@LAT+1,w
  5692     146D  00A3               	movwf	OW_write_bit@LAT+1
  5693     146E  0829               	movf	OW_write_byte@LAT,w
  5694     146F  00A2               	movwf	OW_write_bit@LAT
  5695     1470  082B               	movf	OW_write_byte@PIN,w
  5696     1471  00A4               	movwf	OW_write_bit@PIN
  5697     1472  082D               	movf	OW_write_byte@write_data,w
  5698     1473  3901               	andlw	1
  5699     1474  3197  27A7  3194   	fcall	_OW_write_bit
  5700     1477                     l5595:
  5701     1477  1003               	clrc
  5702     1478  0020               	movlb	0	; select bank0
  5703     1479  0CAD               	rrf	OW_write_byte@write_data,f
  5704     147A                     l5597:
  5705     147A  3001               	movlw	1
  5706     147B  00AC               	movwf	??_OW_write_byte
  5707     147C  082C               	movf	??_OW_write_byte,w
  5708     147D  07AE               	addwf	OW_write_byte@loop,f
  5709     147E                     l5599:
  5710     147E  3008               	movlw	8
  5711     147F  022E               	subwf	OW_write_byte@loop,w
  5712     1480  1C03               	skipc
  5713     1481  2C83               	goto	u4481
  5714     1482  2C84               	goto	u4480
  5715     1483                     u4481:
  5716     1483  2C68               	goto	l5593
  5717     1484                     u4480:
  5718     1484                     l623:
  5719     1484  0008               	return
  5720     1485                     __end_of_OW_write_byte:
  5721                           
  5722                           	psect	text8
  5723     17A7                     __ptext8:	
  5724 ;; *************** function _OW_write_bit *****************
  5725 ;; Defined at:
  5726 ;;		line 118 in file "1wire.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  write_bit       1    wreg     unsigned char 
  5729 ;;  TRIS            2    0[BANK0 ] PTR unsigned char 
  5730 ;;		 -> TRISA(1), 
  5731 ;;  LAT             2    2[BANK0 ] PTR unsigned char 
  5732 ;;		 -> LATA(1), 
  5733 ;;  PIN             1    4[BANK0 ] unsigned char 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  write_bit       1    6[BANK0 ] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5745 ;;      Params:         0       5       0       0       0       0       0       0
  5746 ;;      Locals:         0       1       0       0       0       0       0       0
  5747 ;;      Temps:          0       1       0       0       0       0       0       0
  5748 ;;      Totals:         0       7       0       0       0       0       0       0
  5749 ;;Total ram usage:        7 bytes
  5750 ;; Hardware stack levels used: 1
  5751 ;; Hardware stack levels required when called: 2
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_OW_write_byte
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759     17A7                     _OW_write_bit:	
  5760                           ;psect for function _OW_write_bit
  5761                           
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _OW_write_bit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5765                           ;OW_write_bit@write_bit stored from wreg
  5766     17A7  0020               	movlb	0	; select bank0
  5767     17A8  00A6               	movwf	OW_write_bit@write_bit
  5768     17A9                     l5505:
  5769     17A9  0826               	movf	OW_write_bit@write_bit,w
  5770     17AA  1903               	btfsc	3,2
  5771     17AB  2FAD               	goto	u4461
  5772     17AC  2FAE               	goto	u4460
  5773     17AD                     u4461:
  5774     17AD  2FD7               	goto	l5517
  5775     17AE                     u4460:
  5776     17AE                     l5507:
  5777     17AE  0924               	comf	OW_write_bit@PIN,w
  5778     17AF  00A5               	movwf	??_OW_write_bit
  5779     17B0  0822               	movf	OW_write_bit@LAT,w
  5780     17B1  0086               	movwf	6
  5781     17B2  0823               	movf	OW_write_bit@LAT+1,w
  5782     17B3  0087               	movwf	7
  5783     17B4  0825               	movf	??_OW_write_bit,w
  5784     17B5  0581               	andwf	1,f
  5785     17B6  0924               	comf	OW_write_bit@PIN,w
  5786     17B7  00A5               	movwf	??_OW_write_bit
  5787     17B8  0820               	movf	OW_write_bit@TRIS,w
  5788     17B9  0086               	movwf	6
  5789     17BA  0821               	movf	OW_write_bit@TRIS+1,w
  5790     17BB  0087               	movwf	7
  5791     17BC  0825               	movf	??_OW_write_bit,w
  5792     17BD  0581               	andwf	1,f
  5793     17BE                     l5509:
  5794     17BE  3010               	movlw	16
  5795     17BF                     u6077:
  5796     17BF  0B89               	decfsz	9,f
  5797     17C0  2FBF               	goto	u6077
  5798     17C1                     l5511:
  5799     17C1  0020               	movlb	0	; select bank0
  5800     17C2  0924               	comf	OW_write_bit@PIN,w
  5801     17C3  00A5               	movwf	??_OW_write_bit
  5802     17C4  0822               	movf	OW_write_bit@LAT,w
  5803     17C5  0086               	movwf	6
  5804     17C6  0823               	movf	OW_write_bit@LAT+1,w
  5805     17C7  0087               	movwf	7
  5806     17C8  0825               	movf	??_OW_write_bit,w
  5807     17C9  0581               	andwf	1,f
  5808     17CA                     l5513:
  5809     17CA  0824               	movf	OW_write_bit@PIN,w
  5810     17CB  00A5               	movwf	??_OW_write_bit
  5811     17CC  0820               	movf	OW_write_bit@TRIS,w
  5812     17CD  0086               	movwf	6
  5813     17CE  0821               	movf	OW_write_bit@TRIS+1,w
  5814     17CF  0087               	movwf	7
  5815     17D0  0825               	movf	??_OW_write_bit,w
  5816     17D1  0481               	iorwf	1,f
  5817     17D2                     l5515:
  5818     17D2  30AA               	movlw	170
  5819     17D3                     u6087:
  5820     17D3  0B89               	decfsz	9,f
  5821     17D4  2FD3               	goto	u6087
  5822     17D5  3200               	nop2
  5823     17D6  2FFF               	goto	l615
  5824     17D7                     l5517:
  5825     17D7  0924               	comf	OW_write_bit@PIN,w
  5826     17D8  00A5               	movwf	??_OW_write_bit
  5827     17D9  0822               	movf	OW_write_bit@LAT,w
  5828     17DA  0086               	movwf	6
  5829     17DB  0823               	movf	OW_write_bit@LAT+1,w
  5830     17DC  0087               	movwf	7
  5831     17DD  0825               	movf	??_OW_write_bit,w
  5832     17DE  0581               	andwf	1,f
  5833     17DF  0924               	comf	OW_write_bit@PIN,w
  5834     17E0  00A5               	movwf	??_OW_write_bit
  5835     17E1  0820               	movf	OW_write_bit@TRIS,w
  5836     17E2  0086               	movwf	6
  5837     17E3  0821               	movf	OW_write_bit@TRIS+1,w
  5838     17E4  0087               	movwf	7
  5839     17E5  0825               	movf	??_OW_write_bit,w
  5840     17E6  0581               	andwf	1,f
  5841     17E7                     l5519:
  5842     17E7  30A0               	movlw	160
  5843     17E8                     u6097:
  5844     17E8  0B89               	decfsz	9,f
  5845     17E9  2FE8               	goto	u6097
  5846     17EA                     l5521:
  5847     17EA  0020               	movlb	0	; select bank0
  5848     17EB  0924               	comf	OW_write_bit@PIN,w
  5849     17EC  00A5               	movwf	??_OW_write_bit
  5850     17ED  0822               	movf	OW_write_bit@LAT,w
  5851     17EE  0086               	movwf	6
  5852     17EF  0823               	movf	OW_write_bit@LAT+1,w
  5853     17F0  0087               	movwf	7
  5854     17F1  0825               	movf	??_OW_write_bit,w
  5855     17F2  0581               	andwf	1,f
  5856     17F3                     l5523:
  5857     17F3  0824               	movf	OW_write_bit@PIN,w
  5858     17F4  00A5               	movwf	??_OW_write_bit
  5859     17F5  0820               	movf	OW_write_bit@TRIS,w
  5860     17F6  0086               	movwf	6
  5861     17F7  0821               	movf	OW_write_bit@TRIS+1,w
  5862     17F8  0087               	movwf	7
  5863     17F9  0825               	movf	??_OW_write_bit,w
  5864     17FA  0481               	iorwf	1,f
  5865     17FB                     l5525:
  5866     17FB  301A               	movlw	26
  5867     17FC                     u6107:
  5868     17FC  0B89               	decfsz	9,f
  5869     17FD  2FFC               	goto	u6107
  5870     17FE  3200               	nop2
  5871     17FF                     l615:
  5872     17FF  0008               	return
  5873     1800                     __end_of_OW_write_bit:
  5874                           
  5875                           	psect	text9
  5876     0848                     __ptext9:	
  5877 ;; *************** function _OW_reset_pulse *****************
  5878 ;; Defined at:
  5879 ;;		line 82 in file "1wire.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  TRIS            2    7[BANK0 ] PTR unsigned char 
  5882 ;;		 -> TRISA(1), 
  5883 ;;  PORT            2    9[BANK0 ] PTR unsigned char 
  5884 ;;		 -> PORTA(1), 
  5885 ;;  LAT             2   11[BANK0 ] PTR unsigned char 
  5886 ;;		 -> LATA(1), 
  5887 ;;  PIN             1   13[BANK0 ] unsigned char 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  presence_det    1    0        unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      unsigned char 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5899 ;;      Params:         0       7       0       0       0       0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0
  5901 ;;      Temps:          0       1       0       0       0       0       0       0
  5902 ;;      Totals:         0       8       0       0       0       0       0       0
  5903 ;;Total ram usage:        8 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 3
  5906 ;; This function calls:
  5907 ;;		_read_OW
  5908 ;; This function is called by:
  5909 ;;		_DS18B20_Read
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913     0848                     _OW_reset_pulse:	
  5914                           ;psect for function _OW_reset_pulse
  5915                           
  5916     0848                     l5567:	
  5917                           ;incstack = 0
  5918                           ; Regs used in _OW_reset_pulse: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5919                           
  5920     0848  0020               	movlb	0	; select bank0
  5921     0849  092D               	comf	OW_reset_pulse@PIN,w
  5922     084A  00AE               	movwf	??_OW_reset_pulse
  5923     084B  082B               	movf	OW_reset_pulse@LAT,w
  5924     084C  0086               	movwf	6
  5925     084D  082C               	movf	OW_reset_pulse@LAT+1,w
  5926     084E  0087               	movwf	7
  5927     084F  082E               	movf	??_OW_reset_pulse,w
  5928     0850  0581               	andwf	1,f
  5929     0851  092D               	comf	OW_reset_pulse@PIN,w
  5930     0852  00AE               	movwf	??_OW_reset_pulse
  5931     0853  0827               	movf	OW_reset_pulse@TRIS,w
  5932     0854  0086               	movwf	6
  5933     0855  0828               	movf	OW_reset_pulse@TRIS+1,w
  5934     0856  0087               	movwf	7
  5935     0857  082E               	movf	??_OW_reset_pulse,w
  5936     0858  0581               	andwf	1,f
  5937     0859                     l5569:
  5938     0859  3003               	movlw	3
  5939     085A  0020               	movlb	0	; select bank0
  5940     085B  00AE               	movwf	??_OW_reset_pulse
  5941     085C  307D               	movlw	125
  5942     085D                     u6117:
  5943     085D  0B89               	decfsz	9,f
  5944     085E  285D               	goto	u6117
  5945     085F  0BAE               	decfsz	??_OW_reset_pulse,f
  5946     0860  285D               	goto	u6117
  5947     0861                     l5571:
  5948     0861  3003               	movlw	3
  5949     0862  0020               	movlb	0	; select bank0
  5950     0863  00AE               	movwf	??_OW_reset_pulse
  5951     0864  307D               	movlw	125
  5952     0865                     u6127:
  5953     0865  0B89               	decfsz	9,f
  5954     0866  2865               	goto	u6127
  5955     0867  0BAE               	decfsz	??_OW_reset_pulse,f
  5956     0868  2865               	goto	u6127
  5957     0869  0020               	movlb	0	; select bank0
  5958     086A  092D               	comf	OW_reset_pulse@PIN,w
  5959     086B  00AE               	movwf	??_OW_reset_pulse
  5960     086C  082B               	movf	OW_reset_pulse@LAT,w
  5961     086D  0086               	movwf	6
  5962     086E  082C               	movf	OW_reset_pulse@LAT+1,w
  5963     086F  0087               	movwf	7
  5964     0870  082E               	movf	??_OW_reset_pulse,w
  5965     0871  0581               	andwf	1,f
  5966     0872  082D               	movf	OW_reset_pulse@PIN,w
  5967     0873  00AE               	movwf	??_OW_reset_pulse
  5968     0874  0827               	movf	OW_reset_pulse@TRIS,w
  5969     0875  0086               	movwf	6
  5970     0876  0828               	movf	OW_reset_pulse@TRIS+1,w
  5971     0877  0087               	movwf	7
  5972     0878  082E               	movf	??_OW_reset_pulse,w
  5973     0879  0481               	iorwf	1,f
  5974     087A                     l5573:
  5975     087A  30BA               	movlw	186
  5976     087B                     u6137:
  5977     087B  0B89               	decfsz	9,f
  5978     087C  287B               	goto	u6137
  5979     087D  3200               	nop2
  5980     087E                     l5575:
  5981     087E  0020               	movlb	0	; select bank0
  5982     087F  0828               	movf	OW_reset_pulse@TRIS+1,w
  5983     0880  00A1               	movwf	read_OW@TRIS+1
  5984     0881  0827               	movf	OW_reset_pulse@TRIS,w
  5985     0882  00A0               	movwf	read_OW@TRIS
  5986     0883  082A               	movf	OW_reset_pulse@PORT+1,w
  5987     0884  00A3               	movwf	read_OW@PORT+1
  5988     0885  0829               	movf	OW_reset_pulse@PORT,w
  5989     0886  00A2               	movwf	read_OW@PORT
  5990     0887  082D               	movf	OW_reset_pulse@PIN,w
  5991     0888  00A4               	movwf	read_OW@PIN
  5992     0889  3194  2430  3188   	fcall	_read_OW
  5993     088C                     l5577:
  5994     088C  30EA               	movlw	234
  5995     088D                     u6147:
  5996     088D  3200               	nop2
  5997     088E  3200               	nop2
  5998     088F  0B89               	decfsz	9,f
  5999     0890  288D               	goto	u6147
  6000     0891  3200               	nop2
  6001     0892                     l5579:
  6002     0892  30EA               	movlw	234
  6003     0893                     u6157:
  6004     0893  3200               	nop2
  6005     0894  3200               	nop2
  6006     0895  0B89               	decfsz	9,f
  6007     0896  2893               	goto	u6157
  6008     0897  3200               	nop2
  6009     0898                     l5581:
  6010     0898  0020               	movlb	0	; select bank0
  6011     0899  092D               	comf	OW_reset_pulse@PIN,w
  6012     089A  00AE               	movwf	??_OW_reset_pulse
  6013     089B  082B               	movf	OW_reset_pulse@LAT,w
  6014     089C  0086               	movwf	6
  6015     089D  082C               	movf	OW_reset_pulse@LAT+1,w
  6016     089E  0087               	movwf	7
  6017     089F  082E               	movf	??_OW_reset_pulse,w
  6018     08A0  0581               	andwf	1,f
  6019     08A1                     l5583:
  6020     08A1  082D               	movf	OW_reset_pulse@PIN,w
  6021     08A2  00AE               	movwf	??_OW_reset_pulse
  6022     08A3  0827               	movf	OW_reset_pulse@TRIS,w
  6023     08A4  0086               	movwf	6
  6024     08A5  0828               	movf	OW_reset_pulse@TRIS+1,w
  6025     08A6  0087               	movwf	7
  6026     08A7  082E               	movf	??_OW_reset_pulse,w
  6027     08A8  0481               	iorwf	1,f
  6028     08A9                     l610:
  6029     08A9  0008               	return
  6030     08AA                     __end_of_OW_reset_pulse:
  6031                           
  6032                           	psect	text10
  6033     1516                     __ptext10:	
  6034 ;; *************** function _OW_read_byte *****************
  6035 ;; Defined at:
  6036 ;;		line 197 in file "1wire.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  TRIS            2   16[BANK0 ] PTR unsigned char 
  6039 ;;		 -> TRISA(1), 
  6040 ;;  PORT            2   18[BANK0 ] PTR unsigned char 
  6041 ;;		 -> PORTA(1), 
  6042 ;;  LAT             2   20[BANK0 ] PTR unsigned char 
  6043 ;;		 -> LATA(1), 
  6044 ;;  PIN             1   22[BANK0 ] unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  loop            1   25[BANK0 ] unsigned char 
  6047 ;;  result          1   24[BANK0 ] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      unsigned char 
  6050 ;; Registers used:
  6051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6057 ;;      Params:         0       7       0       0       0       0       0       0
  6058 ;;      Locals:         0       2       0       0       0       0       0       0
  6059 ;;      Temps:          0       1       0       0       0       0       0       0
  6060 ;;      Totals:         0      10       0       0       0       0       0       0
  6061 ;;Total ram usage:       10 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 4
  6064 ;; This function calls:
  6065 ;;		_OW_read_bit
  6066 ;; This function is called by:
  6067 ;;		_DS18B20_Read
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071     1516                     _OW_read_byte:	
  6072                           ;psect for function _OW_read_byte
  6073                           
  6074     1516                     l5601:	
  6075                           ;incstack = 0
  6076                           ; Regs used in _OW_read_byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6077                           
  6078     1516  0020               	movlb	0	; select bank0
  6079     1517  01B8               	clrf	OW_read_byte@result
  6080     1518  01B9               	clrf	OW_read_byte@loop
  6081     1519                     l5607:
  6082     1519  1003               	clrc
  6083     151A  0CB8               	rrf	OW_read_byte@result,f
  6084     151B                     l5609:
  6085     151B  0831               	movf	OW_read_byte@TRIS+1,w
  6086     151C  00A8               	movwf	OW_read_bit@TRIS+1
  6087     151D  0830               	movf	OW_read_byte@TRIS,w
  6088     151E  00A7               	movwf	OW_read_bit@TRIS
  6089     151F  0833               	movf	OW_read_byte@PORT+1,w
  6090     1520  00AA               	movwf	OW_read_bit@PORT+1
  6091     1521  0832               	movf	OW_read_byte@PORT,w
  6092     1522  00A9               	movwf	OW_read_bit@PORT
  6093     1523  0835               	movf	OW_read_byte@LAT+1,w
  6094     1524  00AC               	movwf	OW_read_bit@LAT+1
  6095     1525  0834               	movf	OW_read_byte@LAT,w
  6096     1526  00AB               	movwf	OW_read_bit@LAT
  6097     1527  0836               	movf	OW_read_byte@PIN,w
  6098     1528  00AD               	movwf	OW_read_bit@PIN
  6099     1529  3195  25D3  3195   	fcall	_OW_read_bit
  6100     152C  3A00               	xorlw	0
  6101     152D  1903               	skipnz
  6102     152E  2D30               	goto	u4491
  6103     152F  2D31               	goto	u4490
  6104     1530                     u4491:
  6105     1530  2D33               	goto	l5613
  6106     1531                     u4490:
  6107     1531                     l5611:
  6108     1531  0020               	movlb	0	; select bank0
  6109     1532  17B8               	bsf	OW_read_byte@result,7
  6110     1533                     l5613:
  6111     1533  3001               	movlw	1
  6112     1534  0020               	movlb	0	; select bank0
  6113     1535  00B7               	movwf	??_OW_read_byte
  6114     1536  0837               	movf	??_OW_read_byte,w
  6115     1537  07B9               	addwf	OW_read_byte@loop,f
  6116     1538                     l5615:
  6117     1538  3008               	movlw	8
  6118     1539  0239               	subwf	OW_read_byte@loop,w
  6119     153A  1C03               	skipc
  6120     153B  2D3D               	goto	u4501
  6121     153C  2D3E               	goto	u4500
  6122     153D                     u4501:
  6123     153D  2D19               	goto	l5607
  6124     153E                     u4500:
  6125     153E                     l5617:
  6126     153E  0838               	movf	OW_read_byte@result,w
  6127     153F                     l629:
  6128     153F  0008               	return
  6129     1540                     __end_of_OW_read_byte:
  6130                           
  6131                           	psect	text11
  6132     15D3                     __ptext11:	
  6133 ;; *************** function _OW_read_bit *****************
  6134 ;; Defined at:
  6135 ;;		line 152 in file "1wire.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  TRIS            2    7[BANK0 ] PTR unsigned char 
  6138 ;;		 -> TRISA(1), 
  6139 ;;  PORT            2    9[BANK0 ] PTR unsigned char 
  6140 ;;		 -> PORTA(1), 
  6141 ;;  LAT             2   11[BANK0 ] PTR unsigned char 
  6142 ;;		 -> LATA(1), 
  6143 ;;  PIN             1   13[BANK0 ] unsigned char 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  read_data       1   15[BANK0 ] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      unsigned char 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6155 ;;      Params:         0       7       0       0       0       0       0       0
  6156 ;;      Locals:         0       1       0       0       0       0       0       0
  6157 ;;      Temps:          0       1       0       0       0       0       0       0
  6158 ;;      Totals:         0       9       0       0       0       0       0       0
  6159 ;;Total ram usage:        9 bytes
  6160 ;; Hardware stack levels used: 1
  6161 ;; Hardware stack levels required when called: 3
  6162 ;; This function calls:
  6163 ;;		_read_OW
  6164 ;; This function is called by:
  6165 ;;		_OW_read_byte
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169     15D3                     _OW_read_bit:	
  6170                           ;psect for function _OW_read_bit
  6171                           
  6172     15D3                     l5527:	
  6173                           ;incstack = 0
  6174                           ; Regs used in _OW_read_bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6175                           
  6176     15D3  0020               	movlb	0	; select bank0
  6177     15D4  092D               	comf	OW_read_bit@PIN,w
  6178     15D5  00AE               	movwf	??_OW_read_bit
  6179     15D6  082B               	movf	OW_read_bit@LAT,w
  6180     15D7  0086               	movwf	6
  6181     15D8  082C               	movf	OW_read_bit@LAT+1,w
  6182     15D9  0087               	movwf	7
  6183     15DA  082E               	movf	??_OW_read_bit,w
  6184     15DB  0581               	andwf	1,f
  6185     15DC  092D               	comf	OW_read_bit@PIN,w
  6186     15DD  00AE               	movwf	??_OW_read_bit
  6187     15DE  0827               	movf	OW_read_bit@TRIS,w
  6188     15DF  0086               	movwf	6
  6189     15E0  0828               	movf	OW_read_bit@TRIS+1,w
  6190     15E1  0087               	movwf	7
  6191     15E2  082E               	movf	??_OW_read_bit,w
  6192     15E3  0581               	andwf	1,f
  6193     15E4                     l5529:
  6194     15E4  3010               	movlw	16
  6195     15E5                     u6167:
  6196     15E5  0B89               	decfsz	9,f
  6197     15E6  2DE5               	goto	u6167
  6198     15E7                     l5531:
  6199     15E7  0020               	movlb	0	; select bank0
  6200     15E8  092D               	comf	OW_read_bit@PIN,w
  6201     15E9  00AE               	movwf	??_OW_read_bit
  6202     15EA  082B               	movf	OW_read_bit@LAT,w
  6203     15EB  0086               	movwf	6
  6204     15EC  082C               	movf	OW_read_bit@LAT+1,w
  6205     15ED  0087               	movwf	7
  6206     15EE  082E               	movf	??_OW_read_bit,w
  6207     15EF  0581               	andwf	1,f
  6208     15F0                     l5533:
  6209     15F0  082D               	movf	OW_read_bit@PIN,w
  6210     15F1  00AE               	movwf	??_OW_read_bit
  6211     15F2  0827               	movf	OW_read_bit@TRIS,w
  6212     15F3  0086               	movwf	6
  6213     15F4  0828               	movf	OW_read_bit@TRIS+1,w
  6214     15F5  0087               	movwf	7
  6215     15F6  082E               	movf	??_OW_read_bit,w
  6216     15F7  0481               	iorwf	1,f
  6217     15F8                     l5535:
  6218     15F8  3018               	movlw	24
  6219     15F9                     u6177:
  6220     15F9  0B89               	decfsz	9,f
  6221     15FA  2DF9               	goto	u6177
  6222     15FB                     l5537:
  6223     15FB  0020               	movlb	0	; select bank0
  6224     15FC  0828               	movf	OW_read_bit@TRIS+1,w
  6225     15FD  00A1               	movwf	read_OW@TRIS+1
  6226     15FE  0827               	movf	OW_read_bit@TRIS,w
  6227     15FF  00A0               	movwf	read_OW@TRIS
  6228     1600  082A               	movf	OW_read_bit@PORT+1,w
  6229     1601  00A3               	movwf	read_OW@PORT+1
  6230     1602  0829               	movf	OW_read_bit@PORT,w
  6231     1603  00A2               	movwf	read_OW@PORT
  6232     1604  082D               	movf	OW_read_bit@PIN,w
  6233     1605  00A4               	movwf	read_OW@PIN
  6234     1606  3194  2430  3195   	fcall	_read_OW
  6235     1609  0020               	movlb	0	; select bank0
  6236     160A  00AF               	movwf	OW_read_bit@read_data
  6237     160B                     l5539:
  6238     160B  3092               	movlw	146
  6239     160C                     u6187:
  6240     160C  0B89               	decfsz	9,f
  6241     160D  2E0C               	goto	u6187
  6242     160E  3200               	nop2
  6243     160F                     l5541:
  6244     160F  0020               	movlb	0	; select bank0
  6245     1610  082F               	movf	OW_read_bit@read_data,w
  6246     1611                     l618:
  6247     1611  0008               	return
  6248     1612                     __end_of_OW_read_bit:
  6249                           
  6250                           	psect	text12
  6251     1430                     __ptext12:	
  6252 ;; *************** function _read_OW *****************
  6253 ;; Defined at:
  6254 ;;		line 60 in file "1wire.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  TRIS            2    0[BANK0 ] PTR unsigned char 
  6257 ;;		 -> TRISA(1), 
  6258 ;;  PORT            2    2[BANK0 ] PTR unsigned char 
  6259 ;;		 -> PORTA(1), 
  6260 ;;  PIN             1    4[BANK0 ] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  read_data       1    6[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      unsigned char 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6272 ;;      Params:         0       5       0       0       0       0       0       0
  6273 ;;      Locals:         0       1       0       0       0       0       0       0
  6274 ;;      Temps:          0       1       0       0       0       0       0       0
  6275 ;;      Totals:         0       7       0       0       0       0       0       0
  6276 ;;Total ram usage:        7 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 2
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_OW_reset_pulse
  6283 ;;		_OW_read_bit
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287     1430                     _read_OW:	
  6288                           ;psect for function _read_OW
  6289                           
  6290     1430                     l5453:	
  6291                           ;incstack = 0
  6292                           ; Regs used in _read_OW: [wreg+fsr1l+fsr1h+status,2+status,0]
  6293                           
  6294     1430                     l5455:
  6295     1430  0020               	movlb	0	; select bank0
  6296     1431  0824               	movf	read_OW@PIN,w
  6297     1432  00A5               	movwf	??_read_OW
  6298     1433  0820               	movf	read_OW@TRIS,w
  6299     1434  0086               	movwf	6
  6300     1435  0821               	movf	read_OW@TRIS+1,w
  6301     1436  0087               	movwf	7
  6302     1437  0825               	movf	??_read_OW,w
  6303     1438  0481               	iorwf	1,f
  6304     1439                     l5457:
  6305     1439  0822               	movf	read_OW@PORT,w
  6306     143A  0086               	movwf	6
  6307     143B  0823               	movf	read_OW@PORT+1,w
  6308     143C  0087               	movwf	7
  6309     143D  0801               	movf	1,w
  6310     143E  0524               	andwf	read_OW@PIN,w
  6311     143F  1903               	btfsc	3,2
  6312     1440  2C42               	goto	u4431
  6313     1441  2C43               	goto	u4430
  6314     1442                     u4431:
  6315     1442  2C46               	goto	l5461
  6316     1443                     u4430:
  6317     1443                     l5459:
  6318     1443  01A6               	clrf	read_OW@read_data
  6319     1444  0AA6               	incf	read_OW@read_data,f
  6320     1445  2C47               	goto	l5463
  6321     1446                     l5461:
  6322     1446  01A6               	clrf	read_OW@read_data
  6323     1447                     l5463:
  6324     1447  0826               	movf	read_OW@read_data,w
  6325     1448                     l607:
  6326     1448  0008               	return
  6327     1449                     __end_of_read_OW:
  6328                           
  6329                           	psect	text13
  6330     0DF7                     __ptext13:	
  6331 ;; *************** function _DHTRESULT *****************
  6332 ;; Defined at:
  6333 ;;		line 72 in file "main.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  port            1    wreg     unsigned char 
  6336 ;;  tris            1   19[BANK1 ] unsigned char 
  6337 ;;  conector        1   20[BANK1 ] unsigned char 
  6338 ;;  TOUT            1   21[BANK1 ] unsigned char 
  6339 ;;  dht             1   22[BANK1 ] PTR unsigned char 
  6340 ;;		 -> dhtresult(4), 
  6341 ;;  COM             1   23[BANK1 ] PTR unsigned char 
  6342 ;;		 -> COM(4), 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  port            1   24[BANK1 ] unsigned char 
  6345 ;;  j               2   25[BANK1 ] int 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6355 ;;      Params:         0       0       5       0       0       0       0       0
  6356 ;;      Locals:         0       0       3       0       0       0       0       0
  6357 ;;      Temps:          0       5       0       0       0       0       0       0
  6358 ;;      Totals:         0       5       8       0       0       0       0       0
  6359 ;;Total ram usage:       13 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 10
  6362 ;; This function calls:
  6363 ;;		_DHT22READ
  6364 ;;		_sprintf
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370     0DF7                     _DHTRESULT:	
  6371                           ;psect for function _DHTRESULT
  6372                           
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _DHTRESULT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6376                           ;DHTRESULT@port stored from wreg
  6377     0DF7  0021               	movlb	1	; select bank1
  6378     0DF8  00E5               	movwf	DHTRESULT@port^(0+128)
  6379     0DF9                     l5621:
  6380                           
  6381                           ;main.c: 72: void DHTRESULT(unsigned char port, unsigned char tris, unsigned char conect
      +                          or, unsigned char TOUT, unsigned char dht[], unsigned char COM[]);main.c: 73: {;main.c: 
      +                          74:       static unsigned int temp=0, hum=0;;main.c: 75:       DHT22READ(port, tris, con
      +                          ector, TOUT, dht, COM);
  6382     0DF9  0860               	movf	DHTRESULT@tris^(0+128),w
  6383     0DFA  0020               	movlb	0	; select bank0
  6384     0DFB  00A6               	movwf	DHT22READ@tris
  6385     0DFC  0021               	movlb	1	; select bank1
  6386     0DFD  0861               	movf	DHTRESULT@conector^(0+128),w
  6387     0DFE  0020               	movlb	0	; select bank0
  6388     0DFF  00A7               	movwf	DHT22READ@entry
  6389     0E00  0021               	movlb	1	; select bank1
  6390     0E01  0862               	movf	DHTRESULT@TOUT^(0+128),w
  6391     0E02  0020               	movlb	0	; select bank0
  6392     0E03  00A8               	movwf	DHT22READ@TOUT
  6393     0E04  0021               	movlb	1	; select bank1
  6394     0E05  0863               	movf	DHTRESULT@dht^(0+128),w
  6395     0E06  0020               	movlb	0	; select bank0
  6396     0E07  00A9               	movwf	DHT22READ@dhtresult
  6397     0E08  0021               	movlb	1	; select bank1
  6398     0E09  0864               	movf	DHTRESULT@COM^(0+128),w
  6399     0E0A  0020               	movlb	0	; select bank0
  6400     0E0B  00AA               	movwf	DHT22READ@COM
  6401     0E0C  0021               	movlb	1	; select bank1
  6402     0E0D  0865               	movf	DHTRESULT@port^(0+128),w
  6403     0E0E  3196  26A7  318D   	fcall	_DHT22READ
  6404     0E11                     l5623:
  6405                           
  6406                           ;main.c: 76:       hum=(unsigned int)((dht[0]<<8) | dht[1]);
  6407     0E11  0021               	movlb	1	; select bank1
  6408     0E12  0A63               	incf	DHTRESULT@dht^(0+128),w
  6409     0E13  0086               	movwf	6
  6410     0E14  3001               	movlw	1	; select bank2/3
  6411     0E15  0087               	movwf	7
  6412     0E16  0801               	movf	1,w
  6413     0E17  0020               	movlb	0	; select bank0
  6414     0E18  00EA               	movwf	??_DHTRESULT
  6415     0E19  01EB               	clrf	??_DHTRESULT+1
  6416     0E1A  0021               	movlb	1	; select bank1
  6417     0E1B  0863               	movf	DHTRESULT@dht^(0+128),w
  6418     0E1C  0086               	movwf	6
  6419     0E1D  3001               	movlw	1	; select bank2/3
  6420     0E1E  0087               	movwf	7
  6421     0E1F  0801               	movf	1,w
  6422     0E20  0020               	movlb	0	; select bank0
  6423     0E21  00EC               	movwf	??_DHTRESULT+2
  6424     0E22  01ED               	clrf	??_DHTRESULT+3
  6425     0E23  086C               	movf	??_DHTRESULT+2,w
  6426     0E24  00ED               	movwf	??_DHTRESULT+3
  6427     0E25  01EC               	clrf	??_DHTRESULT+2
  6428     0E26  086A               	movf	??_DHTRESULT,w
  6429     0E27  046C               	iorwf	??_DHTRESULT+2,w
  6430     0E28  0022               	movlb	2	; select bank2
  6431     0E29  00A2               	movwf	DHTRESULT@hum^(0+256)
  6432     0E2A  0020               	movlb	0	; select bank0
  6433     0E2B  086B               	movf	??_DHTRESULT+1,w
  6434     0E2C  046D               	iorwf	??_DHTRESULT+3,w
  6435     0E2D  0022               	movlb	2	; select bank2
  6436     0E2E  00A3               	movwf	(DHTRESULT@hum+1)^(0+256)
  6437     0E2F                     l5625:
  6438                           
  6439                           ;main.c: 77:       temp=(unsigned int)((dht[2]<<8) | dht[3]);
  6440     0E2F  0021               	movlb	1	; select bank1
  6441     0E30  0863               	movf	DHTRESULT@dht^(0+128),w
  6442     0E31  3E03               	addlw	3
  6443     0E32  0086               	movwf	6
  6444     0E33  3001               	movlw	1	; select bank2/3
  6445     0E34  0087               	movwf	7
  6446     0E35  0801               	movf	1,w
  6447     0E36  0020               	movlb	0	; select bank0
  6448     0E37  00EA               	movwf	??_DHTRESULT
  6449     0E38  01EB               	clrf	??_DHTRESULT+1
  6450     0E39  0021               	movlb	1	; select bank1
  6451     0E3A  0863               	movf	DHTRESULT@dht^(0+128),w
  6452     0E3B  3E02               	addlw	2
  6453     0E3C  0086               	movwf	6
  6454     0E3D  3001               	movlw	1	; select bank2/3
  6455     0E3E  0087               	movwf	7
  6456     0E3F  0801               	movf	1,w
  6457     0E40  0020               	movlb	0	; select bank0
  6458     0E41  00EC               	movwf	??_DHTRESULT+2
  6459     0E42  01ED               	clrf	??_DHTRESULT+3
  6460     0E43  086C               	movf	??_DHTRESULT+2,w
  6461     0E44  00ED               	movwf	??_DHTRESULT+3
  6462     0E45  01EC               	clrf	??_DHTRESULT+2
  6463     0E46  086A               	movf	??_DHTRESULT,w
  6464     0E47  046C               	iorwf	??_DHTRESULT+2,w
  6465     0E48  0022               	movlb	2	; select bank2
  6466     0E49  00A4               	movwf	DHTRESULT@temp^(0+256)
  6467     0E4A  0020               	movlb	0	; select bank0
  6468     0E4B  086B               	movf	??_DHTRESULT+1,w
  6469     0E4C  046D               	iorwf	??_DHTRESULT+3,w
  6470     0E4D  0022               	movlb	2	; select bank2
  6471     0E4E  00A5               	movwf	(DHTRESULT@temp+1)^(0+256)
  6472     0E4F                     l5627:
  6473                           
  6474                           ;main.c: 78:       sprintf(tempar,"%u",temp);
  6475     0E4F  30C7               	movlw	low _tempar
  6476     0E50  0021               	movlb	1	; select bank1
  6477     0E51  00CD               	movwf	sprintf@s^(0+128)
  6478     0E52  3000               	movlw	high _tempar
  6479     0E53  00CE               	movwf	(sprintf@s+1)^(0+128)
  6480     0E54  3000               	movlw	low (STR_1| (0+32768))
  6481     0E55  00CF               	movwf	sprintf@fmt^(0+128)
  6482     0E56  3098               	movlw	high (STR_1| (0+32768))
  6483     0E57  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  6484     0E58  0022               	movlb	2	; select bank2
  6485     0E59  0825               	movf	(DHTRESULT@temp+1)^(0+256),w
  6486     0E5A  0021               	movlb	1	; select bank1
  6487     0E5B  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  6488     0E5C  0022               	movlb	2	; select bank2
  6489     0E5D  0824               	movf	DHTRESULT@temp^(0+256),w
  6490     0E5E  0021               	movlb	1	; select bank1
  6491     0E5F  00D1               	movwf	(?_sprintf^(0+128)+4)
  6492     0E60  3194  24F1  318D   	fcall	_sprintf
  6493     0E63                     l5629:
  6494                           
  6495                           ;main.c: 79:       sprintf(humar,"%u",hum);
  6496     0E63  3039               	movlw	low _humar
  6497     0E64  0021               	movlb	1	; select bank1
  6498     0E65  00CD               	movwf	sprintf@s^(0+128)
  6499     0E66  3001               	movlw	high _humar
  6500     0E67  00CE               	movwf	(sprintf@s+1)^(0+128)
  6501     0E68  3000               	movlw	low (STR_1| (0+32768))
  6502     0E69  00CF               	movwf	sprintf@fmt^(0+128)
  6503     0E6A  3098               	movlw	high (STR_1| (0+32768))
  6504     0E6B  00D0               	movwf	(sprintf@fmt^(0+128)+1)
  6505     0E6C  0022               	movlb	2	; select bank2
  6506     0E6D  0823               	movf	(DHTRESULT@hum+1)^(0+256),w
  6507     0E6E  0021               	movlb	1	; select bank1
  6508     0E6F  00D2               	movwf	((?_sprintf+1)^(0+128)+4)
  6509     0E70  0022               	movlb	2	; select bank2
  6510     0E71  0822               	movf	DHTRESULT@hum^(0+256),w
  6511     0E72  0021               	movlb	1	; select bank1
  6512     0E73  00D1               	movwf	(?_sprintf^(0+128)+4)
  6513     0E74  3194  24F1  318D   	fcall	_sprintf
  6514     0E77                     l5631:
  6515                           
  6516                           ;main.c: 80:       for(int j=0; j<4; j++){
  6517     0E77  0021               	movlb	1	; select bank1
  6518     0E78  01E6               	clrf	DHTRESULT@j^(0+128)
  6519     0E79  01E7               	clrf	(DHTRESULT@j+1)^(0+128)
  6520     0E7A                     l5637:
  6521                           
  6522                           ;main.c: 81:           if(humar[j]==0) humar[j]='N';
  6523     0E7A  0021               	movlb	1	; select bank1
  6524     0E7B  0866               	movf	DHTRESULT@j^(0+128),w
  6525     0E7C  3E39               	addlw	(low (_humar| (0+256)))& (0+255)
  6526     0E7D  0086               	movwf	6
  6527     0E7E  3001               	movlw	1	; select bank2/3
  6528     0E7F  0087               	movwf	7
  6529     0E80  0801               	movf	1,w
  6530     0E81  1D03               	btfss	3,2
  6531     0E82  2E84               	goto	u4511
  6532     0E83  2E85               	goto	u4510
  6533     0E84                     u4511:
  6534     0E84  2E8C               	goto	l182
  6535     0E85                     u4510:
  6536     0E85                     l5639:
  6537     0E85  0866               	movf	DHTRESULT@j^(0+128),w
  6538     0E86  3E39               	addlw	(low (_humar| (0+256)))& (0+255)
  6539     0E87  0086               	movwf	6
  6540     0E88  3001               	movlw	1	; select bank2/3
  6541     0E89  0087               	movwf	7
  6542     0E8A  304E               	movlw	78
  6543     0E8B  0081               	movwf	1
  6544     0E8C                     l182:
  6545                           
  6546                           ;main.c: 82:           if(tempar[j]==0) tempar[j]='N';
  6547     0E8C  0866               	movf	DHTRESULT@j^(0+128),w
  6548     0E8D  3EC7               	addlw	(low (_tempar| 0))& (0+255)
  6549     0E8E  0086               	movwf	6
  6550     0E8F  0187               	clrf	7
  6551     0E90  0801               	movf	1,w
  6552     0E91  1D03               	btfss	3,2
  6553     0E92  2E94               	goto	u4521
  6554     0E93  2E95               	goto	u4520
  6555     0E94                     u4521:
  6556     0E94  2E9B               	goto	l5643
  6557     0E95                     u4520:
  6558     0E95                     l5641:
  6559     0E95  0866               	movf	DHTRESULT@j^(0+128),w
  6560     0E96  3EC7               	addlw	(low (_tempar| 0))& (0+255)
  6561     0E97  0086               	movwf	6
  6562     0E98  0187               	clrf	7
  6563     0E99  304E               	movlw	78
  6564     0E9A  0081               	movwf	1
  6565     0E9B                     l5643:
  6566                           
  6567                           ;main.c: 83:       }
  6568     0E9B  3001               	movlw	1
  6569     0E9C  07E6               	addwf	DHTRESULT@j^(0+128),f
  6570     0E9D  3000               	movlw	0
  6571     0E9E  3DE7               	addwfc	(DHTRESULT@j+1)^(0+128),f
  6572     0E9F                     l5645:
  6573     0E9F  0867               	movf	(DHTRESULT@j+1)^(0+128),w
  6574     0EA0  3A80               	xorlw	128
  6575     0EA1  0020               	movlb	0	; select bank0
  6576     0EA2  00EA               	movwf	??_DHTRESULT
  6577     0EA3  3080               	movlw	128
  6578     0EA4  026A               	subwf	??_DHTRESULT,w
  6579     0EA5  1D03               	skipz
  6580     0EA6  2EAA               	goto	u4535
  6581     0EA7  3004               	movlw	4
  6582     0EA8  0021               	movlb	1	; select bank1
  6583     0EA9  0266               	subwf	DHTRESULT@j^(0+128),w
  6584     0EAA                     u4535:
  6585     0EAA  1C03               	skipc
  6586     0EAB  2EAD               	goto	u4531
  6587     0EAC  2EAE               	goto	u4530
  6588     0EAD                     u4531:
  6589     0EAD  2E7A               	goto	l5637
  6590     0EAE                     u4530:
  6591     0EAE                     l5647:
  6592                           
  6593                           ;main.c: 84:       DHTS[17]=tempar[0];
  6594     0EAE  0021               	movlb	1	; select bank1
  6595     0EAF  0847               	movf	_tempar^(0+128),w
  6596     0EB0  0023               	movlb	3	; select bank3
  6597     0EB1  00B1               	movwf	(_DHTS^(0+384)+17)
  6598                           
  6599                           ;main.c: 85:       DHTS[18]=tempar[1];
  6600     0EB2  0021               	movlb	1	; select bank1
  6601     0EB3  0848               	movf	(_tempar^(0+128)+1),w
  6602     0EB4  0023               	movlb	3	; select bank3
  6603     0EB5  00B2               	movwf	(_DHTS^(0+384)+18)
  6604                           
  6605                           ;main.c: 86:       DHTS[19]=tempar[2];
  6606     0EB6  0021               	movlb	1	; select bank1
  6607     0EB7  0849               	movf	(_tempar^(0+128)+2),w
  6608     0EB8  0023               	movlb	3	; select bank3
  6609     0EB9  00B3               	movwf	(_DHTS^(0+384)+19)
  6610                           
  6611                           ;main.c: 87:       DHTS[20]=tempar[3];
  6612     0EBA  0021               	movlb	1	; select bank1
  6613     0EBB  084A               	movf	(_tempar^(0+128)+3),w
  6614     0EBC  0023               	movlb	3	; select bank3
  6615     0EBD  00B4               	movwf	(_DHTS^(0+384)+20)
  6616     0EBE                     l5649:
  6617                           
  6618                           ;main.c: 88:       tempar[0]=0;
  6619     0EBE  0021               	movlb	1	; select bank1
  6620     0EBF  01C7               	clrf	_tempar^(0+128)
  6621     0EC0                     l5651:
  6622                           
  6623                           ;main.c: 89:       tempar[1]=0;
  6624     0EC0  01C8               	clrf	(_tempar^(0+128)+1)
  6625     0EC1                     l5653:
  6626                           
  6627                           ;main.c: 90:       tempar[2]=0;
  6628     0EC1  01C9               	clrf	(_tempar^(0+128)+2)
  6629     0EC2                     l5655:
  6630                           
  6631                           ;main.c: 91:       tempar[3]=0;
  6632     0EC2  01CA               	clrf	(_tempar^(0+128)+3)
  6633                           
  6634                           ;main.c: 92:       DHTS[6]=humar[0];
  6635     0EC3  0022               	movlb	2	; select bank2
  6636     0EC4  0839               	movf	_humar^(0+256),w
  6637     0EC5  0023               	movlb	3	; select bank3
  6638     0EC6  00A6               	movwf	(_DHTS^(0+384)+6)
  6639                           
  6640                           ;main.c: 93:       DHTS[7]=humar[1];
  6641     0EC7  0022               	movlb	2	; select bank2
  6642     0EC8  083A               	movf	(_humar^(0+256)+1),w
  6643     0EC9  0023               	movlb	3	; select bank3
  6644     0ECA  00A7               	movwf	(_DHTS^(0+384)+7)
  6645                           
  6646                           ;main.c: 94:       DHTS[8]=humar[2];
  6647     0ECB  0022               	movlb	2	; select bank2
  6648     0ECC  083B               	movf	(_humar^(0+256)+2),w
  6649     0ECD  0023               	movlb	3	; select bank3
  6650     0ECE  00A8               	movwf	(_DHTS^(0+384)+8)
  6651                           
  6652                           ;main.c: 95:       DHTS[9]=humar[3];
  6653     0ECF  0022               	movlb	2	; select bank2
  6654     0ED0  083C               	movf	(_humar^(0+256)+3),w
  6655     0ED1  0023               	movlb	3	; select bank3
  6656     0ED2  00A9               	movwf	(_DHTS^(0+384)+9)
  6657     0ED3                     l5657:
  6658                           
  6659                           ;main.c: 96:       humar[0]=0;
  6660     0ED3  0022               	movlb	2	; select bank2
  6661     0ED4  01B9               	clrf	_humar^(0+256)
  6662     0ED5                     l5659:
  6663                           
  6664                           ;main.c: 97:       humar[1]=0;
  6665     0ED5  01BA               	clrf	(_humar^(0+256)+1)
  6666     0ED6                     l5661:
  6667                           
  6668                           ;main.c: 98:       humar[2]=0;
  6669     0ED6  01BB               	clrf	(_humar^(0+256)+2)
  6670     0ED7                     l5663:
  6671                           
  6672                           ;main.c: 99:       humar[3]=0;
  6673     0ED7  01BC               	clrf	(_humar^(0+256)+3)
  6674     0ED8                     l5665:
  6675                           
  6676                           ;main.c: 100:       med_sl=1;
  6677     0ED8  0021               	movlb	1	; select bank1
  6678     0ED9  01B8               	clrf	_med_sl^(0+128)
  6679     0EDA  0AB8               	incf	_med_sl^(0+128),f
  6680     0EDB                     l5667:
  6681                           
  6682                           ;main.c: 101:       PIE1bits.TXIE = 1;
  6683     0EDB  1611               	bsf	17,4	;volatile
  6684     0EDC                     l184:
  6685     0EDC  0008               	return
  6686     0EDD                     __end_of_DHTRESULT:
  6687                           
  6688                           	psect	text14
  6689     14F1                     __ptext14:	
  6690 ;; *************** function _sprintf *****************
  6691 ;; Defined at:
  6692 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  s               2    0[BANK1 ] PTR unsigned char 
  6695 ;;		 -> KG(8), LUX(5), TEMPDS(4), humar(4), 
  6696 ;;		 -> tempar(4), 
  6697 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  6698 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6699 ;;		 -> STR_1(3), 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  f              10    9[BANK1 ] struct _IO_FILE
  6702 ;;  ret             2    0        int 
  6703 ;;  ap              1    8[BANK1 ] PTR void [1]
  6704 ;;		 -> ?_sprintf(2), 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  2    0[BANK1 ] int 
  6707 ;; Registers used:
  6708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6714 ;;      Params:         0       0       8       0       0       0       0       0
  6715 ;;      Locals:         0       0      11       0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0
  6717 ;;      Totals:         0       0      19       0       0       0       0       0
  6718 ;;Total ram usage:       19 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 9
  6721 ;; This function calls:
  6722 ;;		_vfprintf
  6723 ;; This function is called by:
  6724 ;;		_DHTRESULT
  6725 ;;		_DS18B20_Read
  6726 ;;		_i2c_Read
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730     14F1                     _sprintf:	
  6731                           ;psect for function _sprintf
  6732                           
  6733     14F1                     l5555:	
  6734                           ;incstack = 0
  6735                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6736                           
  6737     14F1  30D1               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  6738     14F2  0021               	movlb	1	; select bank1
  6739     14F3  00D5               	movwf	sprintf@ap^(0+128)
  6740     14F4  084E               	movf	(sprintf@s+1)^(0+128),w
  6741     14F5  00D7               	movwf	(sprintf@f+1)^(0+128)
  6742     14F6  084D               	movf	sprintf@s^(0+128),w
  6743     14F7  00D6               	movwf	sprintf@f^(0+128)
  6744     14F8                     l5557:
  6745     14F8  01D8               	clrf	(sprintf@f^(0+128)+2)
  6746     14F9  01D9               	clrf	((sprintf@f+1)^(0+128)+2)
  6747     14FA                     l5559:
  6748     14FA  01DE               	clrf	(sprintf@f^(0+128)+8)
  6749     14FB  01DF               	clrf	((sprintf@f+1)^(0+128)+8)
  6750     14FC                     l5561:
  6751     14FC  0850               	movf	(sprintf@fmt+1)^(0+128),w
  6752     14FD  0020               	movlb	0	; select bank0
  6753     14FE  00E4               	movwf	vfprintf@fmt+1
  6754     14FF  0021               	movlb	1	; select bank1
  6755     1500  084F               	movf	sprintf@fmt^(0+128),w
  6756     1501  0020               	movlb	0	; select bank0
  6757     1502  00E3               	movwf	vfprintf@fmt
  6758     1503  30D5               	movlw	(low (sprintf@ap| 0))& (0+255)
  6759     1504  00E5               	movwf	vfprintf@ap
  6760     1505  30D6               	movlw	(low (sprintf@f| 0))& (0+255)
  6761     1506  3194  2449  3194   	fcall	_vfprintf
  6762     1509                     l5563:
  6763     1509  3002               	movlw	2
  6764     150A  3ED6               	addlw	(low (sprintf@f| 0))& (0+255)
  6765     150B  0086               	movwf	6
  6766     150C  0187               	clrf	7
  6767     150D  3F40               	moviw [0]fsr1
  6768     150E  0021               	movlb	1	; select bank1
  6769     150F  074D               	addwf	sprintf@s^(0+128),w
  6770     1510  0084               	movwf	4
  6771     1511  3F41               	moviw [1]fsr1
  6772     1512  3D4E               	addwfc	(sprintf@s+1)^(0+128),w
  6773     1513  0085               	movwf	5
  6774     1514  0180               	clrf	0
  6775     1515                     l1242:
  6776     1515  0008               	return
  6777     1516                     __end_of_sprintf:
  6778                           
  6779                           	psect	text15
  6780     1449                     __ptext15:	
  6781 ;; *************** function _vfprintf *****************
  6782 ;; Defined at:
  6783 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  fp              1    wreg     PTR struct _IO_FILE
  6786 ;;		 -> sprintf@f(10), 
  6787 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6788 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6789 ;;		 -> STR_1(3), 
  6790 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6791 ;;		 -> sprintf@ap(1), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  6794 ;;		 -> sprintf@f(10), 
  6795 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6796 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6797 ;;		 -> STR_1(3), 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  2   67[BANK0 ] int 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6807 ;;      Params:         0       3       0       0       0       0       0       0
  6808 ;;      Locals:         0       3       0       0       0       0       0       0
  6809 ;;      Temps:          0       1       0       0       0       0       0       0
  6810 ;;      Totals:         0       7       0       0       0       0       0       0
  6811 ;;Total ram usage:        7 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 8
  6814 ;; This function calls:
  6815 ;;		_vfpfcnvrt
  6816 ;; This function is called by:
  6817 ;;		_sprintf
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821     1449                     _vfprintf:	
  6822                           ;psect for function _vfprintf
  6823                           
  6824                           
  6825                           ;incstack = 0
  6826                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6827                           ;vfprintf@fp stored from wreg
  6828     1449  0020               	movlb	0	; select bank0
  6829     144A  00E7               	movwf	vfprintf@fp
  6830     144B                     l5545:
  6831                           
  6832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6833     144B  0864               	movf	vfprintf@fmt+1,w
  6834     144C  00E9               	movwf	vfprintf@cfmt+1
  6835     144D  0863               	movf	vfprintf@fmt,w
  6836     144E  00E8               	movwf	vfprintf@cfmt
  6837                           
  6838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6839     144F  2C58               	goto	l5549
  6840     1450                     l5547:
  6841                           
  6842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6843     1450  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6844     1451  00D2               	movwf	vfpfcnvrt@fmt
  6845     1452  0865               	movf	vfprintf@ap,w
  6846     1453  00D3               	movwf	vfpfcnvrt@ap
  6847     1454  0867               	movf	vfprintf@fp,w
  6848     1455  318A  2223  3194   	fcall	_vfpfcnvrt
  6849     1458                     l5549:
  6850                           
  6851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6852     1458  0020               	movlb	0	; select bank0
  6853     1459  0868               	movf	vfprintf@cfmt,w
  6854     145A  0084               	movwf	4
  6855     145B  0869               	movf	vfprintf@cfmt+1,w
  6856     145C  0085               	movwf	5
  6857     145D  0012               	moviw fsr0++
  6858     145E  1D03               	btfss	3,2
  6859     145F  2C61               	goto	u4471
  6860     1460  2C62               	goto	u4470
  6861     1461                     u4471:
  6862     1461  2C50               	goto	l5547
  6863     1462                     u4470:
  6864     1462                     l5551:
  6865                           
  6866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6867     1462  01E3               	clrf	?_vfprintf
  6868     1463  01E4               	clrf	?_vfprintf+1
  6869     1464                     l1294:
  6870     1464  0008               	return
  6871     1465                     __end_of_vfprintf:
  6872                           
  6873                           	psect	text16
  6874     0A23                     __ptext16:	
  6875 ;; *************** function _vfpfcnvrt *****************
  6876 ;; Defined at:
  6877 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  fp              1    wreg     PTR struct _IO_FILE
  6880 ;;		 -> sprintf@f(10), 
  6881 ;;  fmt             1   50[BANK0 ] PTR PTR unsigned char 
  6882 ;;		 -> vfprintf@cfmt(2), 
  6883 ;;  ap              1   51[BANK0 ] PTR PTR void 
  6884 ;;		 -> sprintf@ap(1), 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  6887 ;;		 -> sprintf@f(10), 
  6888 ;;  convarg         8   56[BANK0 ] struct .
  6889 ;;  cp              2   65[BANK0 ] PTR unsigned char 
  6890 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6891 ;;		 -> STR_1(3), 
  6892 ;;  i               2    0        int 
  6893 ;;  done            2    0        int 
  6894 ;;  c               1    0        unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6904 ;;      Params:         0       2       0       0       0       0       0       0
  6905 ;;      Locals:         0      11       0       0       0       0       0       0
  6906 ;;      Temps:          0       4       0       0       0       0       0       0
  6907 ;;      Totals:         0      17       0       0       0       0       0       0
  6908 ;;Total ram usage:       17 bytes
  6909 ;; Hardware stack levels used: 1
  6910 ;; Hardware stack levels required when called: 7
  6911 ;; This function calls:
  6912 ;;		_fputc
  6913 ;;		_utoa
  6914 ;; This function is called by:
  6915 ;;		_vfprintf
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919     0A23                     _vfpfcnvrt:	
  6920                           ;psect for function _vfpfcnvrt
  6921                           
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6925                           ;vfpfcnvrt@fp stored from wreg
  6926     0A23  0020               	movlb	0	; select bank0
  6927     0A24  00E0               	movwf	vfpfcnvrt@fp
  6928     0A25                     l5467:
  6929                           
  6930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6931     0A25  0852               	movf	vfpfcnvrt@fmt,w
  6932     0A26  0086               	movwf	6
  6933     0A27  0187               	clrf	7
  6934     0A28  3F40               	moviw [0]fsr1
  6935     0A29  00D4               	movwf	??_vfpfcnvrt
  6936     0A2A  3F41               	moviw [1]fsr1
  6937     0A2B  00D5               	movwf	??_vfpfcnvrt+1
  6938     0A2C  0854               	movf	??_vfpfcnvrt,w
  6939     0A2D  0084               	movwf	4
  6940     0A2E  0855               	movf	??_vfpfcnvrt+1,w
  6941     0A2F  0085               	movwf	5
  6942     0A30  0012               	moviw fsr0++
  6943     0A31  3A25               	xorlw	37
  6944     0A32  1D03               	btfss	3,2
  6945     0A33  2A35               	goto	u4441
  6946     0A34  2A36               	goto	u4440
  6947     0A35                     u4441:
  6948     0A35  2AAD               	goto	l5495
  6949     0A36                     u4440:
  6950     0A36                     l5469:
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6953     0A36  0852               	movf	vfpfcnvrt@fmt,w
  6954     0A37  0086               	movwf	6
  6955     0A38  0187               	clrf	7
  6956     0A39  3001               	movlw	1
  6957     0A3A  0781               	addwf	1,f
  6958     0A3B  3141               	addfsr 1,1
  6959     0A3C  1803               	skipnc
  6960     0A3D  0A81               	incf	1,f
  6961     0A3E                     l5471:
  6962                           
  6963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6964     0A3E  0022               	movlb	2	; select bank2
  6965     0A3F  01A0               	clrf	_width^(0+256)
  6966     0A40  01A1               	clrf	(_width+1)^(0+256)
  6967     0A41  1003               	clrc
  6968     0A42  3000               	movlw	0
  6969     0A43  1803               	btfsc	3,0
  6970     0A44  3001               	movlw	1
  6971     0A45  0021               	movlb	1	; select bank1
  6972     0A46  00A6               	movwf	_flags^(0+128)
  6973     0A47                     l5473:
  6974                           
  6975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6976     0A47  30FF               	movlw	255
  6977     0A48  00A0               	movwf	_prec^(0+128)
  6978     0A49  30FF               	movlw	255
  6979     0A4A  00A1               	movwf	(_prec^(0+128)+1)
  6980     0A4B                     l5475:
  6981                           
  6982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  6983     0A4B  0020               	movlb	0	; select bank0
  6984     0A4C  0852               	movf	vfpfcnvrt@fmt,w
  6985     0A4D  0086               	movwf	6
  6986     0A4E  0187               	clrf	7
  6987     0A4F  3F40               	moviw [0]fsr1
  6988     0A50  00E1               	movwf	vfpfcnvrt@cp
  6989     0A51  3F41               	moviw [1]fsr1
  6990     0A52  00E2               	movwf	vfpfcnvrt@cp+1
  6991     0A53                     l5477:
  6992     0A53  0861               	movf	vfpfcnvrt@cp,w
  6993     0A54  0084               	movwf	4
  6994     0A55  0862               	movf	vfpfcnvrt@cp+1,w
  6995     0A56  0085               	movwf	5
  6996     0A57  0012               	moviw fsr0++
  6997     0A58  3A75               	xorlw	117
  6998     0A59  1D03               	btfss	3,2
  6999     0A5A  2A5C               	goto	u4451
  7000     0A5B  2A5D               	goto	u4450
  7001     0A5C                     u4451:
  7002     0A5C  2AA3               	goto	l5491
  7003     0A5D                     u4450:
  7004     0A5D                     l5479:
  7005                           
  7006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  7007     0A5D  0853               	movf	vfpfcnvrt@ap,w
  7008     0A5E  0086               	movwf	6
  7009     0A5F  0187               	clrf	7
  7010     0A60  0801               	movf	1,w
  7011     0A61  0084               	movwf	4
  7012     0A62  0185               	clrf	5
  7013     0A63  3002               	movlw	2
  7014     0A64  0781               	addwf	1,f
  7015     0A65  3F00               	moviw [0]fsr0
  7016     0A66  00D8               	movwf	vfpfcnvrt@convarg
  7017     0A67  3F01               	moviw [1]fsr0
  7018     0A68  00D9               	movwf	vfpfcnvrt@convarg+1
  7019     0A69  01DA               	clrf	vfpfcnvrt@convarg+2
  7020     0A6A  01DB               	clrf	vfpfcnvrt@convarg+3
  7021     0A6B  01DC               	clrf	vfpfcnvrt@convarg+4
  7022     0A6C  01DD               	clrf	vfpfcnvrt@convarg+5
  7023     0A6D  01DE               	clrf	vfpfcnvrt@convarg+6
  7024     0A6E  01DF               	clrf	vfpfcnvrt@convarg+7
  7025     0A6F                     l5481:
  7026                           
  7027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  7028     0A6F  0861               	movf	vfpfcnvrt@cp,w
  7029     0A70  3E01               	addlw	1
  7030     0A71  00D4               	movwf	??_vfpfcnvrt
  7031     0A72  3000               	movlw	0
  7032     0A73  3D62               	addwfc	vfpfcnvrt@cp+1,w
  7033     0A74  00D5               	movwf	??_vfpfcnvrt+1
  7034     0A75  0852               	movf	vfpfcnvrt@fmt,w
  7035     0A76  0086               	movwf	6
  7036     0A77  0187               	clrf	7
  7037     0A78  0854               	movf	??_vfpfcnvrt,w
  7038     0A79  3FC0               	movwi [0]fsr1
  7039     0A7A  0855               	movf	??_vfpfcnvrt+1,w
  7040     0A7B  3FC1               	movwi [1]fsr1
  7041                           
  7042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  7043     0A7C  2A92               	goto	l5489
  7044     0A7D                     l5483:
  7045                           
  7046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  7047     0A7D  0858               	movf	vfpfcnvrt@convarg,w
  7048     0A7E  00BA               	movwf	utoa@d
  7049     0A7F  0859               	movf	vfpfcnvrt@convarg+1,w
  7050     0A80  00BB               	movwf	utoa@d+1
  7051     0A81  085A               	movf	vfpfcnvrt@convarg+2,w
  7052     0A82  00BC               	movwf	utoa@d+2
  7053     0A83  085B               	movf	vfpfcnvrt@convarg+3,w
  7054     0A84  00BD               	movwf	utoa@d+3
  7055     0A85  085C               	movf	vfpfcnvrt@convarg+4,w
  7056     0A86  00BE               	movwf	utoa@d+4
  7057     0A87  085D               	movf	vfpfcnvrt@convarg+5,w
  7058     0A88  00BF               	movwf	utoa@d+5
  7059     0A89  085E               	movf	vfpfcnvrt@convarg+6,w
  7060     0A8A  00C0               	movwf	utoa@d+6
  7061     0A8B  085F               	movf	vfpfcnvrt@convarg+7,w
  7062     0A8C  00C1               	movwf	utoa@d+7
  7063     0A8D  0860               	movf	vfpfcnvrt@fp,w
  7064     0A8E  318B  237F  318A   	fcall	_utoa
  7065     0A91  2AC5               	goto	l1287
  7066     0A92                     l5489:
  7067     0A92  0861               	movf	vfpfcnvrt@cp,w
  7068     0A93  0084               	movwf	4
  7069     0A94  0862               	movf	vfpfcnvrt@cp+1,w
  7070     0A95  0085               	movwf	5
  7071     0A96  0800               	movf	0,w	;code access
  7072     0A97  00D4               	movwf	??_vfpfcnvrt
  7073     0A98  01D5               	clrf	??_vfpfcnvrt+1
  7074                           
  7075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7076                           ; Switch size 1, requested type "simple"
  7077                           ; Number of cases is 1, Range of values is 0 to 0
  7078                           ; switch strategies available:
  7079                           ; Name         Instructions Cycles
  7080                           ; simple_byte            4     3 (average)
  7081                           ; direct_byte            8     6 (fixed)
  7082                           ; jumptable            260     6 (fixed)
  7083                           ;	Chosen strategy is simple_byte
  7084     0A99  0855               	movf	??_vfpfcnvrt+1,w
  7085     0A9A  3A00               	xorlw	0	; case 0
  7086     0A9B  1903               	skipnz
  7087     0A9C  2A9E               	goto	l6905
  7088     0A9D  2AA3               	goto	l5491
  7089     0A9E                     l6905:
  7090                           
  7091                           ; Switch size 1, requested type "simple"
  7092                           ; Number of cases is 1, Range of values is 117 to 117
  7093                           ; switch strategies available:
  7094                           ; Name         Instructions Cycles
  7095                           ; simple_byte            4     3 (average)
  7096                           ; direct_byte           11     9 (fixed)
  7097                           ; jumptable            263     9 (fixed)
  7098                           ;	Chosen strategy is simple_byte
  7099     0A9E  0854               	movf	??_vfpfcnvrt,w
  7100     0A9F  3A75               	xorlw	117	; case 117
  7101     0AA0  1903               	skipnz
  7102     0AA1  2A7D               	goto	l5483
  7103     0AA2  2AA3               	goto	l5491
  7104     0AA3                     l5491:
  7105                           
  7106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  7107     0AA3  0020               	movlb	0	; select bank0
  7108     0AA4  0852               	movf	vfpfcnvrt@fmt,w
  7109     0AA5  0086               	movwf	6
  7110     0AA6  0187               	clrf	7
  7111     0AA7  3001               	movlw	1
  7112     0AA8  0781               	addwf	1,f
  7113     0AA9  3141               	addfsr 1,1
  7114     0AAA  1803               	skipnc
  7115     0AAB  0A81               	incf	1,f
  7116     0AAC  2AC5               	goto	l1287
  7117     0AAD                     l5495:
  7118                           
  7119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7120     0AAD  0852               	movf	vfpfcnvrt@fmt,w
  7121     0AAE  0086               	movwf	6
  7122     0AAF  0187               	clrf	7
  7123     0AB0  3F40               	moviw [0]fsr1
  7124     0AB1  00D4               	movwf	??_vfpfcnvrt
  7125     0AB2  3F41               	moviw [1]fsr1
  7126     0AB3  00D5               	movwf	??_vfpfcnvrt+1
  7127     0AB4  0854               	movf	??_vfpfcnvrt,w
  7128     0AB5  0084               	movwf	4
  7129     0AB6  0855               	movf	??_vfpfcnvrt+1,w
  7130     0AB7  0085               	movwf	5
  7131     0AB8  0800               	movf	0,w	;code access
  7132     0AB9  00D6               	movwf	??_vfpfcnvrt+2
  7133     0ABA  01D7               	clrf	??_vfpfcnvrt+3
  7134     0ABB  0856               	movf	??_vfpfcnvrt+2,w
  7135     0ABC  00A0               	movwf	fputc@c
  7136     0ABD  0857               	movf	??_vfpfcnvrt+3,w
  7137     0ABE  00A1               	movwf	fputc@c+1
  7138     0ABF  0860               	movf	vfpfcnvrt@fp,w
  7139     0AC0  00A2               	movwf	fputc@fp
  7140     0AC1  3197  2750  318A   	fcall	_fputc
  7141     0AC4  2AA3               	goto	l5491
  7142     0AC5                     l1287:
  7143     0AC5  0008               	return
  7144     0AC6                     __end_of_vfpfcnvrt:
  7145                           
  7146                           	psect	text17
  7147     0B7F                     __ptext17:	
  7148 ;; *************** function _utoa *****************
  7149 ;; Defined at:
  7150 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  fp              1    wreg     PTR struct _IO_FILE
  7153 ;;		 -> sprintf@f(10), 
  7154 ;;  d               8   26[BANK0 ] unsigned long long 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  7157 ;;		 -> sprintf@f(10), 
  7158 ;;  n               8   40[BANK0 ] unsigned long long 
  7159 ;;  i               2   48[BANK0 ] int 
  7160 ;;  p               2   38[BANK0 ] int 
  7161 ;;  w               2   36[BANK0 ] int 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7171 ;;      Params:         0       8       0       0       0       0       0       0
  7172 ;;      Locals:         0      15       0       0       0       0       0       0
  7173 ;;      Temps:          0       1       0       0       0       0       0       0
  7174 ;;      Totals:         0      24       0       0       0       0       0       0
  7175 ;;Total ram usage:       24 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 6
  7178 ;; This function calls:
  7179 ;;		___lodiv
  7180 ;;		___lomod
  7181 ;;		_pad
  7182 ;; This function is called by:
  7183 ;;		_vfpfcnvrt
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187     0B7F                     _utoa:	
  7188                           ;psect for function _utoa
  7189                           
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7193                           ;utoa@fp stored from wreg
  7194     0B7F  0020               	movlb	0	; select bank0
  7195     0B80  00C3               	movwf	utoa@fp
  7196     0B81                     l5423:
  7197                           
  7198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  7199     0B81  0021               	movlb	1	; select bank1
  7200     0B82  0821               	movf	(_prec+1)^(0+128),w
  7201     0B83  3A80               	xorlw	128
  7202     0B84  0020               	movlb	0	; select bank0
  7203     0B85  00C2               	movwf	??_utoa
  7204     0B86  3080               	movlw	128
  7205     0B87  0242               	subwf	??_utoa,w
  7206     0B88  1D03               	skipz
  7207     0B89  2B8D               	goto	u4395
  7208     0B8A  3001               	movlw	1
  7209     0B8B  0021               	movlb	1	; select bank1
  7210     0B8C  0220               	subwf	_prec^(0+128),w
  7211     0B8D                     u4395:
  7212     0B8D  1803               	skipnc
  7213     0B8E  2B90               	goto	u4391
  7214     0B8F  2B91               	goto	u4390
  7215     0B90                     u4391:
  7216     0B90  2B97               	goto	l5427
  7217     0B91                     u4390:
  7218     0B91                     l5425:
  7219     0B91  3001               	movlw	1
  7220     0B92  0020               	movlb	0	; select bank0
  7221     0B93  00C6               	movwf	utoa@p
  7222     0B94  3000               	movlw	0
  7223     0B95  00C7               	movwf	utoa@p+1
  7224     0B96  2B9F               	goto	l1272
  7225     0B97                     l5427:
  7226     0B97  0021               	movlb	1	; select bank1
  7227     0B98  0821               	movf	(_prec+1)^(0+128),w
  7228     0B99  0020               	movlb	0	; select bank0
  7229     0B9A  00C7               	movwf	utoa@p+1
  7230     0B9B  0021               	movlb	1	; select bank1
  7231     0B9C  0820               	movf	_prec^(0+128),w
  7232     0B9D  0020               	movlb	0	; select bank0
  7233     0B9E  00C6               	movwf	utoa@p
  7234     0B9F                     l1272:
  7235                           
  7236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  7237     0B9F  0022               	movlb	2	; select bank2
  7238     0BA0  0821               	movf	(_width+1)^(0+256),w
  7239     0BA1  0020               	movlb	0	; select bank0
  7240     0BA2  00C5               	movwf	utoa@w+1
  7241     0BA3  0022               	movlb	2	; select bank2
  7242     0BA4  0820               	movf	_width^(0+256),w
  7243     0BA5  0020               	movlb	0	; select bank0
  7244     0BA6  00C4               	movwf	utoa@w
  7245     0BA7                     l5429:
  7246                           
  7247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  7248     0BA7  083A               	movf	utoa@d,w
  7249     0BA8  00C8               	movwf	utoa@n
  7250     0BA9  083B               	movf	utoa@d+1,w
  7251     0BAA  00C9               	movwf	utoa@n+1
  7252     0BAB  083C               	movf	utoa@d+2,w
  7253     0BAC  00CA               	movwf	utoa@n+2
  7254     0BAD  083D               	movf	utoa@d+3,w
  7255     0BAE  00CB               	movwf	utoa@n+3
  7256     0BAF  083E               	movf	utoa@d+4,w
  7257     0BB0  00CC               	movwf	utoa@n+4
  7258     0BB1  083F               	movf	utoa@d+5,w
  7259     0BB2  00CD               	movwf	utoa@n+5
  7260     0BB3  0840               	movf	utoa@d+6,w
  7261     0BB4  00CE               	movwf	utoa@n+6
  7262     0BB5  0841               	movf	utoa@d+7,w
  7263     0BB6  00CF               	movwf	utoa@n+7
  7264                           
  7265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  7266     0BB7  301F               	movlw	31
  7267     0BB8  00D0               	movwf	utoa@i
  7268     0BB9  3000               	movlw	0
  7269     0BBA  00D1               	movwf	utoa@i+1
  7270     0BBB                     l5431:
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  7273     0BBB  0023               	movlb	3	; select bank3
  7274     0BBC  01E2               	clrf	(_dbuf^(0+384)+31)
  7275                           
  7276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  7277     0BBD  2C1D               	goto	l5443
  7278     0BBE                     l5433:
  7279                           
  7280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  7281     0BBE  30FF               	movlw	255
  7282     0BBF  0020               	movlb	0	; select bank0
  7283     0BC0  07D0               	addwf	utoa@i,f
  7284     0BC1  30FF               	movlw	255
  7285     0BC2  3DD1               	addwfc	utoa@i+1,f
  7286     0BC3                     l5435:
  7287                           
  7288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  7289     0BC3  0850               	movf	utoa@i,w
  7290     0BC4  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7291     0BC5  0086               	movwf	6
  7292     0BC6  3001               	movlw	1	; select bank3/4
  7293     0BC7  0087               	movwf	7
  7294     0BC8  300A               	movlw	10
  7295     0BC9  00A0               	movwf	___lomod@divisor
  7296     0BCA  01A1               	clrf	___lomod@divisor+1
  7297     0BCB  01A2               	clrf	___lomod@divisor+2
  7298     0BCC  01A3               	clrf	___lomod@divisor+3
  7299     0BCD  01A4               	clrf	___lomod@divisor+4
  7300     0BCE  01A5               	clrf	___lomod@divisor+5
  7301     0BCF  01A6               	clrf	___lomod@divisor+6
  7302     0BD0  01A7               	clrf	___lomod@divisor+7
  7303     0BD1  0848               	movf	utoa@n,w
  7304     0BD2  00A8               	movwf	___lomod@dividend
  7305     0BD3  0849               	movf	utoa@n+1,w
  7306     0BD4  00A9               	movwf	___lomod@dividend+1
  7307     0BD5  084A               	movf	utoa@n+2,w
  7308     0BD6  00AA               	movwf	___lomod@dividend+2
  7309     0BD7  084B               	movf	utoa@n+3,w
  7310     0BD8  00AB               	movwf	___lomod@dividend+3
  7311     0BD9  084C               	movf	utoa@n+4,w
  7312     0BDA  00AC               	movwf	___lomod@dividend+4
  7313     0BDB  084D               	movf	utoa@n+5,w
  7314     0BDC  00AD               	movwf	___lomod@dividend+5
  7315     0BDD  084E               	movf	utoa@n+6,w
  7316     0BDE  00AE               	movwf	___lomod@dividend+6
  7317     0BDF  084F               	movf	utoa@n+7,w
  7318     0BE0  00AF               	movwf	___lomod@dividend+7
  7319     0BE1  3188  20AA  318B   	fcall	___lomod
  7320     0BE4  0020               	movlb	0	; select bank0
  7321     0BE5  0820               	movf	?___lomod,w
  7322     0BE6  3E30               	addlw	48
  7323     0BE7  0081               	movwf	1
  7324     0BE8                     l5437:
  7325                           
  7326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  7327     0BE8  30FF               	movlw	255
  7328     0BE9  07C6               	addwf	utoa@p,f
  7329     0BEA  30FF               	movlw	255
  7330     0BEB  3DC7               	addwfc	utoa@p+1,f
  7331     0BEC                     l5439:
  7332                           
  7333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  7334     0BEC  30FF               	movlw	255
  7335     0BED  07C4               	addwf	utoa@w,f
  7336     0BEE  30FF               	movlw	255
  7337     0BEF  3DC5               	addwfc	utoa@w+1,f
  7338     0BF0                     l5441:
  7339                           
  7340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  7341     0BF0  300A               	movlw	10
  7342     0BF1  00A0               	movwf	___lodiv@divisor
  7343     0BF2  01A1               	clrf	___lodiv@divisor+1
  7344     0BF3  01A2               	clrf	___lodiv@divisor+2
  7345     0BF4  01A3               	clrf	___lodiv@divisor+3
  7346     0BF5  01A4               	clrf	___lodiv@divisor+4
  7347     0BF6  01A5               	clrf	___lodiv@divisor+5
  7348     0BF7  01A6               	clrf	___lodiv@divisor+6
  7349     0BF8  01A7               	clrf	___lodiv@divisor+7
  7350     0BF9  0848               	movf	utoa@n,w
  7351     0BFA  00A8               	movwf	___lodiv@dividend
  7352     0BFB  0849               	movf	utoa@n+1,w
  7353     0BFC  00A9               	movwf	___lodiv@dividend+1
  7354     0BFD  084A               	movf	utoa@n+2,w
  7355     0BFE  00AA               	movwf	___lodiv@dividend+2
  7356     0BFF  084B               	movf	utoa@n+3,w
  7357     0C00  00AB               	movwf	___lodiv@dividend+3
  7358     0C01  084C               	movf	utoa@n+4,w
  7359     0C02  00AC               	movwf	___lodiv@dividend+4
  7360     0C03  084D               	movf	utoa@n+5,w
  7361     0C04  00AD               	movwf	___lodiv@dividend+5
  7362     0C05  084E               	movf	utoa@n+6,w
  7363     0C06  00AE               	movwf	___lodiv@dividend+6
  7364     0C07  084F               	movf	utoa@n+7,w
  7365     0C08  00AF               	movwf	___lodiv@dividend+7
  7366     0C09  3189  219F  318B   	fcall	___lodiv
  7367     0C0C  0020               	movlb	0	; select bank0
  7368     0C0D  0820               	movf	?___lodiv,w
  7369     0C0E  00C8               	movwf	utoa@n
  7370     0C0F  0821               	movf	?___lodiv+1,w
  7371     0C10  00C9               	movwf	utoa@n+1
  7372     0C11  0822               	movf	?___lodiv+2,w
  7373     0C12  00CA               	movwf	utoa@n+2
  7374     0C13  0823               	movf	?___lodiv+3,w
  7375     0C14  00CB               	movwf	utoa@n+3
  7376     0C15  0824               	movf	?___lodiv+4,w
  7377     0C16  00CC               	movwf	utoa@n+4
  7378     0C17  0825               	movf	?___lodiv+5,w
  7379     0C18  00CD               	movwf	utoa@n+5
  7380     0C19  0826               	movf	?___lodiv+6,w
  7381     0C1A  00CE               	movwf	utoa@n+6
  7382     0C1B  0827               	movf	?___lodiv+7,w
  7383     0C1C  00CF               	movwf	utoa@n+7
  7384     0C1D                     l5443:
  7385                           
  7386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  7387     0C1D  0020               	movlb	0	; select bank0
  7388     0C1E  0850               	movf	utoa@i,w
  7389     0C1F  0451               	iorwf	utoa@i+1,w
  7390     0C20  1903               	btfsc	3,2
  7391     0C21  2C23               	goto	u4401
  7392     0C22  2C24               	goto	u4400
  7393     0C23                     u4401:
  7394     0C23  2C3D               	goto	l5449
  7395     0C24                     u4400:
  7396     0C24                     l5445:
  7397     0C24  0848               	movf	utoa@n,w
  7398     0C25  0449               	iorwf	utoa@n+1,w
  7399     0C26  044A               	iorwf	utoa@n+2,w
  7400     0C27  044B               	iorwf	utoa@n+3,w
  7401     0C28  044C               	iorwf	utoa@n+4,w
  7402     0C29  044D               	iorwf	utoa@n+5,w
  7403     0C2A  044E               	iorwf	utoa@n+6,w
  7404     0C2B  044F               	iorwf	utoa@n+7,w
  7405     0C2C  1D03               	skipz
  7406     0C2D  2C2F               	goto	u4411
  7407     0C2E  2C30               	goto	u4410
  7408     0C2F                     u4411:
  7409     0C2F  2BBE               	goto	l5433
  7410     0C30                     u4410:
  7411     0C30                     l5447:
  7412     0C30  0847               	movf	utoa@p+1,w
  7413     0C31  3A80               	xorlw	128
  7414     0C32  00C2               	movwf	??_utoa
  7415     0C33  3080               	movlw	128
  7416     0C34  0242               	subwf	??_utoa,w
  7417     0C35  1D03               	skipz
  7418     0C36  2C39               	goto	u4425
  7419     0C37  3001               	movlw	1
  7420     0C38  0246               	subwf	utoa@p,w
  7421     0C39                     u4425:
  7422     0C39  1803               	skipnc
  7423     0C3A  2C3C               	goto	u4421
  7424     0C3B  2C3D               	goto	u4420
  7425     0C3C                     u4421:
  7426     0C3C  2BBE               	goto	l5433
  7427     0C3D                     u4420:
  7428     0C3D                     l5449:
  7429                           
  7430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7431     0C3D  0020               	movlb	0	; select bank0
  7432     0C3E  0850               	movf	utoa@i,w
  7433     0C3F  3EC3               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7434     0C40  00AF               	movwf	pad@buf
  7435     0C41  0845               	movf	utoa@w+1,w
  7436     0C42  00B1               	movwf	pad@p+1
  7437     0C43  0844               	movf	utoa@w,w
  7438     0C44  00B0               	movwf	pad@p
  7439     0C45  0843               	movf	utoa@fp,w
  7440     0C46  3195  259E  318B   	fcall	_pad
  7441     0C49                     l1278:
  7442     0C49  0008               	return
  7443     0C4A                     __end_of_utoa:
  7444                           
  7445                           	psect	text18
  7446     159E                     __ptext18:	
  7447 ;; *************** function _pad *****************
  7448 ;; Defined at:
  7449 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  fp              1    wreg     PTR struct _IO_FILE
  7452 ;;		 -> sprintf@f(10), 
  7453 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  7454 ;;		 -> dbuf(32), 
  7455 ;;  p               2   16[BANK0 ] int 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  7458 ;;		 -> sprintf@f(10), 
  7459 ;;  w               2   21[BANK0 ] int 
  7460 ;;  i               2   19[BANK0 ] int 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7470 ;;      Params:         0       3       0       0       0       0       0       0
  7471 ;;      Locals:         0       5       0       0       0       0       0       0
  7472 ;;      Temps:          0       1       0       0       0       0       0       0
  7473 ;;      Totals:         0       9       0       0       0       0       0       0
  7474 ;;Total ram usage:        9 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 5
  7477 ;; This function calls:
  7478 ;;		_fputc
  7479 ;;		_fputs
  7480 ;; This function is called by:
  7481 ;;		_utoa
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485     159E                     _pad:	
  7486                           ;psect for function _pad
  7487                           
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7491                           ;pad@fp stored from wreg
  7492     159E  0020               	movlb	0	; select bank0
  7493     159F  00B7               	movwf	pad@fp
  7494     15A0                     l5409:
  7495                           
  7496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7497     15A0  1BB1               	btfsc	pad@p+1,7
  7498     15A1  2DA3               	goto	u4371
  7499     15A2  2DA4               	goto	u4370
  7500     15A3                     u4371:
  7501     15A3  2DA9               	goto	l5413
  7502     15A4                     u4370:
  7503     15A4                     l5411:
  7504     15A4  0831               	movf	pad@p+1,w
  7505     15A5  00B6               	movwf	pad@w+1
  7506     15A6  0830               	movf	pad@p,w
  7507     15A7  00B5               	movwf	pad@w
  7508     15A8  2DAB               	goto	l1262
  7509     15A9                     l5413:
  7510     15A9  01B5               	clrf	pad@w
  7511     15AA  01B6               	clrf	pad@w+1
  7512     15AB                     l1262:
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7515     15AB  01B3               	clrf	pad@i
  7516     15AC  01B4               	clrf	pad@i+1
  7517                           
  7518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7519     15AD  2DBD               	goto	l5419
  7520     15AE                     l5415:
  7521                           
  7522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7523     15AE  3020               	movlw	32
  7524     15AF  0020               	movlb	0	; select bank0
  7525     15B0  00A0               	movwf	fputc@c
  7526     15B1  3000               	movlw	0
  7527     15B2  00A1               	movwf	fputc@c+1
  7528     15B3  0837               	movf	pad@fp,w
  7529     15B4  00A2               	movwf	fputc@fp
  7530     15B5  3197  2750  3195   	fcall	_fputc
  7531     15B8                     l5417:
  7532                           
  7533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7534     15B8  3001               	movlw	1
  7535     15B9  0020               	movlb	0	; select bank0
  7536     15BA  07B3               	addwf	pad@i,f
  7537     15BB  3000               	movlw	0
  7538     15BC  3DB4               	addwfc	pad@i+1,f
  7539     15BD                     l5419:
  7540                           
  7541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7542     15BD  0834               	movf	pad@i+1,w
  7543     15BE  3A80               	xorlw	128
  7544     15BF  00B2               	movwf	??_pad
  7545     15C0  0836               	movf	pad@w+1,w
  7546     15C1  3A80               	xorlw	128
  7547     15C2  0232               	subwf	??_pad,w
  7548     15C3  1D03               	skipz
  7549     15C4  2DC7               	goto	u4385
  7550     15C5  0835               	movf	pad@w,w
  7551     15C6  0233               	subwf	pad@i,w
  7552     15C7                     u4385:
  7553     15C7  1C03               	skipc
  7554     15C8  2DCA               	goto	u4381
  7555     15C9  2DCB               	goto	u4380
  7556     15CA                     u4381:
  7557     15CA  2DAE               	goto	l5415
  7558     15CB                     u4380:
  7559     15CB                     l5421:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7562     15CB  0020               	movlb	0	; select bank0
  7563     15CC  0837               	movf	pad@fp,w
  7564     15CD  00A8               	movwf	fputs@fp
  7565     15CE  082F               	movf	pad@buf,w
  7566     15CF  3194  24CC  3195   	fcall	_fputs
  7567     15D2                     l1266:
  7568     15D2  0008               	return
  7569     15D3                     __end_of_pad:
  7570                           
  7571                           	psect	text19
  7572     14CC                     __ptext19:	
  7573 ;; *************** function _fputs *****************
  7574 ;; Defined at:
  7575 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  s               1    wreg     PTR const unsigned char 
  7578 ;;		 -> dbuf(32), 
  7579 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  7580 ;;		 -> sprintf@f(10), 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  s               1   11[BANK0 ] PTR const unsigned char 
  7583 ;;		 -> dbuf(32), 
  7584 ;;  i               2   13[BANK0 ] int 
  7585 ;;  c               1   12[BANK0 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  2    8[BANK0 ] int 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7595 ;;      Params:         0       1       0       0       0       0       0       0
  7596 ;;      Locals:         0       4       0       0       0       0       0       0
  7597 ;;      Temps:          0       2       0       0       0       0       0       0
  7598 ;;      Totals:         0       7       0       0       0       0       0       0
  7599 ;;Total ram usage:        7 bytes
  7600 ;; Hardware stack levels used: 1
  7601 ;; Hardware stack levels required when called: 4
  7602 ;; This function calls:
  7603 ;;		_fputc
  7604 ;; This function is called by:
  7605 ;;		_pad
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609     14CC                     _fputs:	
  7610                           ;psect for function _fputs
  7611                           
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7615                           ;fputs@s stored from wreg
  7616     14CC  0020               	movlb	0	; select bank0
  7617     14CD  00AB               	movwf	fputs@s
  7618     14CE                     l5363:
  7619     14CE  01AD               	clrf	fputs@i
  7620     14CF  01AE               	clrf	fputs@i+1
  7621     14D0  2CE2               	goto	l5369
  7622     14D1                     l5365:
  7623     14D1  082C               	movf	fputs@c,w
  7624     14D2  00A9               	movwf	??_fputs
  7625     14D3  01AA               	clrf	??_fputs+1
  7626     14D4  0829               	movf	??_fputs,w
  7627     14D5  00A0               	movwf	fputc@c
  7628     14D6  082A               	movf	??_fputs+1,w
  7629     14D7  00A1               	movwf	fputc@c+1
  7630     14D8  0828               	movf	fputs@fp,w
  7631     14D9  00A2               	movwf	fputc@fp
  7632     14DA  3197  2750  3194   	fcall	_fputc
  7633     14DD                     l5367:
  7634     14DD  3001               	movlw	1
  7635     14DE  0020               	movlb	0	; select bank0
  7636     14DF  07AD               	addwf	fputs@i,f
  7637     14E0  3000               	movlw	0
  7638     14E1  3DAE               	addwfc	fputs@i+1,f
  7639     14E2                     l5369:
  7640     14E2  082D               	movf	fputs@i,w
  7641     14E3  072B               	addwf	fputs@s,w
  7642     14E4  00A9               	movwf	??_fputs
  7643     14E5  0829               	movf	??_fputs,w
  7644     14E6  0086               	movwf	6
  7645     14E7  3001               	movlw	1	; select bank2/3
  7646     14E8  0087               	movwf	7
  7647     14E9  0801               	movf	1,w
  7648     14EA  00AC               	movwf	fputs@c
  7649     14EB  082C               	movf	fputs@c,w
  7650     14EC  1D03               	btfss	3,2
  7651     14ED  2CEF               	goto	u4271
  7652     14EE  2CF0               	goto	u4270
  7653     14EF                     u4271:
  7654     14EF  2CD1               	goto	l5365
  7655     14F0                     u4270:
  7656     14F0                     l1314:
  7657     14F0  0008               	return
  7658     14F1                     __end_of_fputs:
  7659                           
  7660                           	psect	text20
  7661     1750                     __ptext20:	
  7662 ;; *************** function _fputc *****************
  7663 ;; Defined at:
  7664 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  c               2    0[BANK0 ] int 
  7667 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  7668 ;;		 -> sprintf@f(10), 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  2    0[BANK0 ] int 
  7673 ;; Registers used:
  7674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7680 ;;      Params:         0       3       0       0       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0
  7682 ;;      Temps:          0       5       0       0       0       0       0       0
  7683 ;;      Totals:         0       8       0       0       0       0       0       0
  7684 ;;Total ram usage:        8 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 3
  7687 ;; This function calls:
  7688 ;;		_putch
  7689 ;; This function is called by:
  7690 ;;		_pad
  7691 ;;		_vfpfcnvrt
  7692 ;;		_fputs
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696     1750                     _fputc:	
  7697                           ;psect for function _fputc
  7698                           
  7699     1750                     l5347:	
  7700                           ;incstack = 0
  7701                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7702                           
  7703     1750  0020               	movlb	0	; select bank0
  7704     1751  0822               	movf	fputc@fp,w
  7705     1752  1903               	btfsc	3,2
  7706     1753  2F55               	goto	u4231
  7707     1754  2F56               	goto	u4230
  7708     1755                     u4231:
  7709     1755  2F5B               	goto	l5351
  7710     1756                     u4230:
  7711     1756                     l5349:
  7712     1756  0822               	movf	fputc@fp,w
  7713     1757  1D03               	btfss	3,2
  7714     1758  2F5A               	goto	u4241
  7715     1759  2F5B               	goto	u4240
  7716     175A                     u4241:
  7717     175A  2F60               	goto	l5353
  7718     175B                     u4240:
  7719     175B                     l5351:
  7720     175B  0820               	movf	fputc@c,w
  7721     175C  3187  27FE  3197   	fcall	_putch
  7722     175F  2FA6               	goto	l1306
  7723     1760                     l5353:
  7724     1760  0822               	movf	fputc@fp,w
  7725     1761  3E08               	addlw	8
  7726     1762  0086               	movwf	6
  7727     1763  0187               	clrf	7
  7728     1764  0016               	moviw fsr1++
  7729     1765  0401               	iorwf	1,w
  7730     1766  1903               	btfsc	3,2
  7731     1767  2F69               	goto	u4251
  7732     1768  2F6A               	goto	u4250
  7733     1769                     u4251:
  7734     1769  2F88               	goto	l5357
  7735     176A                     u4250:
  7736     176A                     l5355:
  7737     176A  0822               	movf	fputc@fp,w
  7738     176B  3E08               	addlw	8
  7739     176C  0086               	movwf	6
  7740     176D  0187               	clrf	7
  7741     176E  3F40               	moviw [0]fsr1
  7742     176F  00A3               	movwf	??_fputc
  7743     1770  3F41               	moviw [1]fsr1
  7744     1771  00A4               	movwf	??_fputc+1
  7745     1772  0822               	movf	fputc@fp,w
  7746     1773  3E02               	addlw	2
  7747     1774  0086               	movwf	6
  7748     1775  0187               	clrf	7
  7749     1776  3F40               	moviw [0]fsr1
  7750     1777  00A5               	movwf	??_fputc+2
  7751     1778  3F41               	moviw [1]fsr1
  7752     1779  00A6               	movwf	??_fputc+3
  7753     177A  0826               	movf	??_fputc+3,w
  7754     177B  3A80               	xorlw	128
  7755     177C  00A7               	movwf	??_fputc+4
  7756     177D  0824               	movf	??_fputc+1,w
  7757     177E  3A80               	xorlw	128
  7758     177F  0227               	subwf	??_fputc+4,w
  7759     1780  1D03               	skipz
  7760     1781  2F84               	goto	u4265
  7761     1782  0823               	movf	??_fputc,w
  7762     1783  0225               	subwf	??_fputc+2,w
  7763     1784                     u4265:
  7764     1784  1803               	skipnc
  7765     1785  2F87               	goto	u4261
  7766     1786  2F88               	goto	u4260
  7767     1787                     u4261:
  7768     1787  2FA6               	goto	l1306
  7769     1788                     u4260:
  7770     1788                     l5357:
  7771     1788  0020               	movlb	0	; select bank0
  7772     1789  0822               	movf	fputc@fp,w
  7773     178A  3E02               	addlw	2
  7774     178B  0086               	movwf	6
  7775     178C  0187               	clrf	7
  7776     178D  0822               	movf	fputc@fp,w
  7777     178E  0084               	movwf	4
  7778     178F  0185               	clrf	5
  7779     1790  3F40               	moviw [0]fsr1
  7780     1791  0700               	addwf	0,w
  7781     1792  00A3               	movwf	??_fputc
  7782     1793  3101               	addfsr 0,1
  7783     1794  3F41               	moviw [1]fsr1
  7784     1795  3D00               	addwfc	0,w
  7785     1796  00A4               	movwf	??_fputc+1
  7786     1797  0823               	movf	??_fputc,w
  7787     1798  0086               	movwf	6
  7788     1799  0824               	movf	??_fputc+1,w
  7789     179A  0087               	movwf	7
  7790     179B  0820               	movf	fputc@c,w
  7791     179C  0081               	movwf	1
  7792     179D                     l5359:
  7793     179D  0822               	movf	fputc@fp,w
  7794     179E  3E02               	addlw	2
  7795     179F  0086               	movwf	6
  7796     17A0  0187               	clrf	7
  7797     17A1  3001               	movlw	1
  7798     17A2  0781               	addwf	1,f
  7799     17A3  3141               	addfsr 1,1
  7800     17A4  1803               	skipnc
  7801     17A5  0A81               	incf	1,f
  7802     17A6                     l1306:
  7803     17A6  0008               	return
  7804     17A7                     __end_of_fputc:
  7805                           
  7806                           	psect	text21
  7807     07FE                     __ptext21:	
  7808 ;; *************** function _putch *****************
  7809 ;; Defined at:
  7810 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  c               1    wreg     unsigned char 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  c               1    0[COMMON] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7824 ;;      Params:         0       0       0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0
  7827 ;;      Totals:         0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 2
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_fputc
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838     07FE                     _putch:	
  7839                           ;psect for function _putch
  7840                           
  7841     07FE                     l1317:	
  7842                           ;incstack = 0
  7843                           ; Regs used in _putch: [wreg]
  7844                           
  7845     07FE  0008               	return
  7846     07FF                     __end_of_putch:
  7847                           
  7848                           	psect	text22
  7849     08AA                     __ptext22:	
  7850 ;; *************** function ___lomod *****************
  7851 ;; Defined at:
  7852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7855 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  counter         1   17[BANK0 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  8    0[BANK0 ] unsigned long long 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7867 ;;      Params:         0      16       0       0       0       0       0       0
  7868 ;;      Locals:         0       1       0       0       0       0       0       0
  7869 ;;      Temps:          0       1       0       0       0       0       0       0
  7870 ;;      Totals:         0      18       0       0       0       0       0       0
  7871 ;;Total ram usage:       18 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 2
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_utoa
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881     08AA                     ___lomod:	
  7882                           ;psect for function ___lomod
  7883                           
  7884     08AA                     l5393:	
  7885                           ;incstack = 0
  7886                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7887                           
  7888     08AA  0020               	movlb	0	; select bank0
  7889     08AB  0820               	movf	___lomod@divisor,w
  7890     08AC  0421               	iorwf	___lomod@divisor+1,w
  7891     08AD  0422               	iorwf	___lomod@divisor+2,w
  7892     08AE  0423               	iorwf	___lomod@divisor+3,w
  7893     08AF  0424               	iorwf	___lomod@divisor+4,w
  7894     08B0  0425               	iorwf	___lomod@divisor+5,w
  7895     08B1  0426               	iorwf	___lomod@divisor+6,w
  7896     08B2  0427               	iorwf	___lomod@divisor+7,w
  7897     08B3  1903               	skipnz
  7898     08B4  28B6               	goto	u4331
  7899     08B5  28B7               	goto	u4330
  7900     08B6                     u4331:
  7901     08B6  290A               	goto	l1022
  7902     08B7                     u4330:
  7903     08B7                     l5395:
  7904     08B7  01B1               	clrf	___lomod@counter
  7905     08B8  0AB1               	incf	___lomod@counter,f
  7906     08B9  28C6               	goto	l5401
  7907     08BA                     l5397:
  7908     08BA  35A0               	lslf	___lomod@divisor,f
  7909     08BB  0DA1               	rlf	___lomod@divisor+1,f
  7910     08BC  0DA2               	rlf	___lomod@divisor+2,f
  7911     08BD  0DA3               	rlf	___lomod@divisor+3,f
  7912     08BE  0DA4               	rlf	___lomod@divisor+4,f
  7913     08BF  0DA5               	rlf	___lomod@divisor+5,f
  7914     08C0  0DA6               	rlf	___lomod@divisor+6,f
  7915     08C1  0DA7               	rlf	___lomod@divisor+7,f
  7916     08C2                     l5399:
  7917     08C2  3001               	movlw	1
  7918     08C3  00B0               	movwf	??___lomod
  7919     08C4  0830               	movf	??___lomod,w
  7920     08C5  07B1               	addwf	___lomod@counter,f
  7921     08C6                     l5401:
  7922     08C6  1FA7               	btfss	___lomod@divisor+7,7
  7923     08C7  28C9               	goto	u4341
  7924     08C8  28CA               	goto	u4340
  7925     08C9                     u4341:
  7926     08C9  28BA               	goto	l5397
  7927     08CA                     u4340:
  7928     08CA                     l5403:
  7929     08CA  0827               	movf	___lomod@divisor+7,w
  7930     08CB  022F               	subwf	___lomod@dividend+7,w
  7931     08CC  1D03               	skipz
  7932     08CD  28E8               	goto	u4355
  7933     08CE  0826               	movf	___lomod@divisor+6,w
  7934     08CF  022E               	subwf	___lomod@dividend+6,w
  7935     08D0  1D03               	skipz
  7936     08D1  28E8               	goto	u4355
  7937     08D2  0825               	movf	___lomod@divisor+5,w
  7938     08D3  022D               	subwf	___lomod@dividend+5,w
  7939     08D4  1D03               	skipz
  7940     08D5  28E8               	goto	u4355
  7941     08D6  0824               	movf	___lomod@divisor+4,w
  7942     08D7  022C               	subwf	___lomod@dividend+4,w
  7943     08D8  1D03               	skipz
  7944     08D9  28E8               	goto	u4355
  7945     08DA  0823               	movf	___lomod@divisor+3,w
  7946     08DB  022B               	subwf	___lomod@dividend+3,w
  7947     08DC  1D03               	skipz
  7948     08DD  28E8               	goto	u4355
  7949     08DE  0822               	movf	___lomod@divisor+2,w
  7950     08DF  022A               	subwf	___lomod@dividend+2,w
  7951     08E0  1D03               	skipz
  7952     08E1  28E8               	goto	u4355
  7953     08E2  0821               	movf	___lomod@divisor+1,w
  7954     08E3  0229               	subwf	___lomod@dividend+1,w
  7955     08E4  1D03               	skipz
  7956     08E5  28E8               	goto	u4355
  7957     08E6  0820               	movf	___lomod@divisor,w
  7958     08E7  0228               	subwf	___lomod@dividend,w
  7959     08E8                     u4355:
  7960     08E8  1C03               	skipc
  7961     08E9  28EB               	goto	u4351
  7962     08EA  28EC               	goto	u4350
  7963     08EB                     u4351:
  7964     08EB  28FC               	goto	l5407
  7965     08EC                     u4350:
  7966     08EC                     l5405:
  7967     08EC  0820               	movf	___lomod@divisor,w
  7968     08ED  02A8               	subwf	___lomod@dividend,f
  7969     08EE  0821               	movf	___lomod@divisor+1,w
  7970     08EF  3BA9               	subwfb	___lomod@dividend+1,f
  7971     08F0  0822               	movf	___lomod@divisor+2,w
  7972     08F1  3BAA               	subwfb	___lomod@dividend+2,f
  7973     08F2  0823               	movf	___lomod@divisor+3,w
  7974     08F3  3BAB               	subwfb	___lomod@dividend+3,f
  7975     08F4  0824               	movf	___lomod@divisor+4,w
  7976     08F5  3BAC               	subwfb	___lomod@dividend+4,f
  7977     08F6  0825               	movf	___lomod@divisor+5,w
  7978     08F7  3BAD               	subwfb	___lomod@dividend+5,f
  7979     08F8  0826               	movf	___lomod@divisor+6,w
  7980     08F9  3BAE               	subwfb	___lomod@dividend+6,f
  7981     08FA  0827               	movf	___lomod@divisor+7,w
  7982     08FB  3BAF               	subwfb	___lomod@dividend+7,f
  7983     08FC                     l5407:
  7984     08FC  36A7               	lsrf	___lomod@divisor+7,f
  7985     08FD  0CA6               	rrf	___lomod@divisor+6,f
  7986     08FE  0CA5               	rrf	___lomod@divisor+5,f
  7987     08FF  0CA4               	rrf	___lomod@divisor+4,f
  7988     0900  0CA3               	rrf	___lomod@divisor+3,f
  7989     0901  0CA2               	rrf	___lomod@divisor+2,f
  7990     0902  0CA1               	rrf	___lomod@divisor+1,f
  7991     0903  0CA0               	rrf	___lomod@divisor,f
  7992     0904  3001               	movlw	1
  7993     0905  02B1               	subwf	___lomod@counter,f
  7994     0906  1D03               	btfss	3,2
  7995     0907  2909               	goto	u4361
  7996     0908  290A               	goto	u4360
  7997     0909                     u4361:
  7998     0909  28CA               	goto	l5403
  7999     090A                     u4360:
  8000     090A                     l1022:
  8001     090A  0828               	movf	___lomod@dividend,w
  8002     090B  00A0               	movwf	?___lomod
  8003     090C  0829               	movf	___lomod@dividend+1,w
  8004     090D  00A1               	movwf	?___lomod+1
  8005     090E  082A               	movf	___lomod@dividend+2,w
  8006     090F  00A2               	movwf	?___lomod+2
  8007     0910  082B               	movf	___lomod@dividend+3,w
  8008     0911  00A3               	movwf	?___lomod+3
  8009     0912  082C               	movf	___lomod@dividend+4,w
  8010     0913  00A4               	movwf	?___lomod+4
  8011     0914  082D               	movf	___lomod@dividend+5,w
  8012     0915  00A5               	movwf	?___lomod+5
  8013     0916  082E               	movf	___lomod@dividend+6,w
  8014     0917  00A6               	movwf	?___lomod+6
  8015     0918  082F               	movf	___lomod@dividend+7,w
  8016     0919  00A7               	movwf	?___lomod+7
  8017     091A                     l1029:
  8018     091A  0008               	return
  8019     091B                     __end_of___lomod:
  8020                           
  8021                           	psect	text23
  8022     099F                     __ptext23:	
  8023 ;; *************** function ___lodiv *****************
  8024 ;; Defined at:
  8025 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8028 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  quotient        8   17[BANK0 ] unsigned long long 
  8031 ;;  counter         1   25[BANK0 ] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  8    0[BANK0 ] unsigned long long 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8041 ;;      Params:         0      16       0       0       0       0       0       0
  8042 ;;      Locals:         0       9       0       0       0       0       0       0
  8043 ;;      Temps:          0       1       0       0       0       0       0       0
  8044 ;;      Totals:         0      26       0       0       0       0       0       0
  8045 ;;Total ram usage:       26 bytes
  8046 ;; Hardware stack levels used: 1
  8047 ;; Hardware stack levels required when called: 2
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_utoa
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055     099F                     ___lodiv:	
  8056                           ;psect for function ___lodiv
  8057                           
  8058     099F                     l5371:	
  8059                           ;incstack = 0
  8060                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8061                           
  8062     099F  3031               	movlw	low ___lodiv@quotient
  8063     09A0  0086               	movwf	6
  8064     09A1  3000               	movlw	high ___lodiv@quotient
  8065     09A2  0087               	movwf	7
  8066     09A3  3008               	movlw	8
  8067     09A4  0020               	movlb	0	; select bank0
  8068     09A5  00B0               	movwf	??___lodiv
  8069     09A6  3000               	movlw	0
  8070     09A7                     u4280:
  8071     09A7  001E               	movwi fsr1++
  8072     09A8  0BB0               	decfsz	??___lodiv,f
  8073     09A9  29A7               	goto	u4280
  8074     09AA                     l5373:
  8075     09AA  0820               	movf	___lodiv@divisor,w
  8076     09AB  0421               	iorwf	___lodiv@divisor+1,w
  8077     09AC  0422               	iorwf	___lodiv@divisor+2,w
  8078     09AD  0423               	iorwf	___lodiv@divisor+3,w
  8079     09AE  0424               	iorwf	___lodiv@divisor+4,w
  8080     09AF  0425               	iorwf	___lodiv@divisor+5,w
  8081     09B0  0426               	iorwf	___lodiv@divisor+6,w
  8082     09B1  0427               	iorwf	___lodiv@divisor+7,w
  8083     09B2  1903               	skipnz
  8084     09B3  29B5               	goto	u4291
  8085     09B4  29B6               	goto	u4290
  8086     09B5                     u4291:
  8087     09B5  2A12               	goto	l1012
  8088     09B6                     u4290:
  8089     09B6                     l5375:
  8090     09B6  01B9               	clrf	___lodiv@counter
  8091     09B7  0AB9               	incf	___lodiv@counter,f
  8092     09B8  29C5               	goto	l5381
  8093     09B9                     l5377:
  8094     09B9  35A0               	lslf	___lodiv@divisor,f
  8095     09BA  0DA1               	rlf	___lodiv@divisor+1,f
  8096     09BB  0DA2               	rlf	___lodiv@divisor+2,f
  8097     09BC  0DA3               	rlf	___lodiv@divisor+3,f
  8098     09BD  0DA4               	rlf	___lodiv@divisor+4,f
  8099     09BE  0DA5               	rlf	___lodiv@divisor+5,f
  8100     09BF  0DA6               	rlf	___lodiv@divisor+6,f
  8101     09C0  0DA7               	rlf	___lodiv@divisor+7,f
  8102     09C1                     l5379:
  8103     09C1  3001               	movlw	1
  8104     09C2  00B0               	movwf	??___lodiv
  8105     09C3  0830               	movf	??___lodiv,w
  8106     09C4  07B9               	addwf	___lodiv@counter,f
  8107     09C5                     l5381:
  8108     09C5  1FA7               	btfss	___lodiv@divisor+7,7
  8109     09C6  29C8               	goto	u4301
  8110     09C7  29C9               	goto	u4300
  8111     09C8                     u4301:
  8112     09C8  29B9               	goto	l5377
  8113     09C9                     u4300:
  8114     09C9                     l5383:
  8115     09C9  35B1               	lslf	___lodiv@quotient,f
  8116     09CA  0DB2               	rlf	___lodiv@quotient+1,f
  8117     09CB  0DB3               	rlf	___lodiv@quotient+2,f
  8118     09CC  0DB4               	rlf	___lodiv@quotient+3,f
  8119     09CD  0DB5               	rlf	___lodiv@quotient+4,f
  8120     09CE  0DB6               	rlf	___lodiv@quotient+5,f
  8121     09CF  0DB7               	rlf	___lodiv@quotient+6,f
  8122     09D0  0DB8               	rlf	___lodiv@quotient+7,f
  8123     09D1                     l5385:
  8124     09D1  0827               	movf	___lodiv@divisor+7,w
  8125     09D2  022F               	subwf	___lodiv@dividend+7,w
  8126     09D3  1D03               	skipz
  8127     09D4  29EF               	goto	u4315
  8128     09D5  0826               	movf	___lodiv@divisor+6,w
  8129     09D6  022E               	subwf	___lodiv@dividend+6,w
  8130     09D7  1D03               	skipz
  8131     09D8  29EF               	goto	u4315
  8132     09D9  0825               	movf	___lodiv@divisor+5,w
  8133     09DA  022D               	subwf	___lodiv@dividend+5,w
  8134     09DB  1D03               	skipz
  8135     09DC  29EF               	goto	u4315
  8136     09DD  0824               	movf	___lodiv@divisor+4,w
  8137     09DE  022C               	subwf	___lodiv@dividend+4,w
  8138     09DF  1D03               	skipz
  8139     09E0  29EF               	goto	u4315
  8140     09E1  0823               	movf	___lodiv@divisor+3,w
  8141     09E2  022B               	subwf	___lodiv@dividend+3,w
  8142     09E3  1D03               	skipz
  8143     09E4  29EF               	goto	u4315
  8144     09E5  0822               	movf	___lodiv@divisor+2,w
  8145     09E6  022A               	subwf	___lodiv@dividend+2,w
  8146     09E7  1D03               	skipz
  8147     09E8  29EF               	goto	u4315
  8148     09E9  0821               	movf	___lodiv@divisor+1,w
  8149     09EA  0229               	subwf	___lodiv@dividend+1,w
  8150     09EB  1D03               	skipz
  8151     09EC  29EF               	goto	u4315
  8152     09ED  0820               	movf	___lodiv@divisor,w
  8153     09EE  0228               	subwf	___lodiv@dividend,w
  8154     09EF                     u4315:
  8155     09EF  1C03               	skipc
  8156     09F0  29F2               	goto	u4311
  8157     09F1  29F3               	goto	u4310
  8158     09F2                     u4311:
  8159     09F2  2A04               	goto	l5391
  8160     09F3                     u4310:
  8161     09F3                     l5387:
  8162     09F3  0820               	movf	___lodiv@divisor,w
  8163     09F4  02A8               	subwf	___lodiv@dividend,f
  8164     09F5  0821               	movf	___lodiv@divisor+1,w
  8165     09F6  3BA9               	subwfb	___lodiv@dividend+1,f
  8166     09F7  0822               	movf	___lodiv@divisor+2,w
  8167     09F8  3BAA               	subwfb	___lodiv@dividend+2,f
  8168     09F9  0823               	movf	___lodiv@divisor+3,w
  8169     09FA  3BAB               	subwfb	___lodiv@dividend+3,f
  8170     09FB  0824               	movf	___lodiv@divisor+4,w
  8171     09FC  3BAC               	subwfb	___lodiv@dividend+4,f
  8172     09FD  0825               	movf	___lodiv@divisor+5,w
  8173     09FE  3BAD               	subwfb	___lodiv@dividend+5,f
  8174     09FF  0826               	movf	___lodiv@divisor+6,w
  8175     0A00  3BAE               	subwfb	___lodiv@dividend+6,f
  8176     0A01  0827               	movf	___lodiv@divisor+7,w
  8177     0A02  3BAF               	subwfb	___lodiv@dividend+7,f
  8178     0A03                     l5389:
  8179     0A03  1431               	bsf	___lodiv@quotient,0
  8180     0A04                     l5391:
  8181     0A04  36A7               	lsrf	___lodiv@divisor+7,f
  8182     0A05  0CA6               	rrf	___lodiv@divisor+6,f
  8183     0A06  0CA5               	rrf	___lodiv@divisor+5,f
  8184     0A07  0CA4               	rrf	___lodiv@divisor+4,f
  8185     0A08  0CA3               	rrf	___lodiv@divisor+3,f
  8186     0A09  0CA2               	rrf	___lodiv@divisor+2,f
  8187     0A0A  0CA1               	rrf	___lodiv@divisor+1,f
  8188     0A0B  0CA0               	rrf	___lodiv@divisor,f
  8189     0A0C  3001               	movlw	1
  8190     0A0D  02B9               	subwf	___lodiv@counter,f
  8191     0A0E  1D03               	btfss	3,2
  8192     0A0F  2A11               	goto	u4321
  8193     0A10  2A12               	goto	u4320
  8194     0A11                     u4321:
  8195     0A11  29C9               	goto	l5383
  8196     0A12                     u4320:
  8197     0A12                     l1012:
  8198     0A12  0831               	movf	___lodiv@quotient,w
  8199     0A13  00A0               	movwf	?___lodiv
  8200     0A14  0832               	movf	___lodiv@quotient+1,w
  8201     0A15  00A1               	movwf	?___lodiv+1
  8202     0A16  0833               	movf	___lodiv@quotient+2,w
  8203     0A17  00A2               	movwf	?___lodiv+2
  8204     0A18  0834               	movf	___lodiv@quotient+3,w
  8205     0A19  00A3               	movwf	?___lodiv+3
  8206     0A1A  0835               	movf	___lodiv@quotient+4,w
  8207     0A1B  00A4               	movwf	?___lodiv+4
  8208     0A1C  0836               	movf	___lodiv@quotient+5,w
  8209     0A1D  00A5               	movwf	?___lodiv+5
  8210     0A1E  0837               	movf	___lodiv@quotient+6,w
  8211     0A1F  00A6               	movwf	?___lodiv+6
  8212     0A20  0838               	movf	___lodiv@quotient+7,w
  8213     0A21  00A7               	movwf	?___lodiv+7
  8214     0A22                     l1019:
  8215     0A22  0008               	return
  8216     0A23                     __end_of___lodiv:
  8217                           
  8218                           	psect	text24
  8219     16A7                     __ptext24:	
  8220 ;; *************** function _DHT22READ *****************
  8221 ;; Defined at:
  8222 ;;		line 90 in file "Sensores.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  port            1    wreg     unsigned char 
  8225 ;;  tris            1    6[BANK0 ] unsigned char 
  8226 ;;  entry           1    7[BANK0 ] unsigned char 
  8227 ;;  TOUT            1    8[BANK0 ] unsigned char 
  8228 ;;  dhtresult       1    9[BANK0 ] PTR unsigned char 
  8229 ;;		 -> dhtresult(4), 
  8230 ;;  COM             1   10[BANK0 ] PTR unsigned char 
  8231 ;;		 -> COM(4), 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  port            1   11[BANK0 ] unsigned char 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8243 ;;      Params:         0       5       0       0       0       0       0       0
  8244 ;;      Locals:         0       1       0       0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0
  8246 ;;      Totals:         0       6       0       0       0       0       0       0
  8247 ;;Total ram usage:        6 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 3
  8250 ;; This function calls:
  8251 ;;		_check_response
  8252 ;;		_read_byte
  8253 ;;		_start_signal
  8254 ;; This function is called by:
  8255 ;;		_DHTRESULT
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259     16A7                     _DHT22READ:	
  8260                           ;psect for function _DHT22READ
  8261                           
  8262                           
  8263                           ;incstack = 0
  8264                           ; Regs used in _DHT22READ: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8265                           ;DHT22READ@port stored from wreg
  8266     16A7  0020               	movlb	0	; select bank0
  8267     16A8  00AB               	movwf	DHT22READ@port
  8268     16A9                     l3705:
  8269                           
  8270                           ;Sensores.c: 90: void DHT22READ (unsigned char port, unsigned char tris, unsigned char e
      +                          ntry, unsigned char TOUT, unsigned char dhtresult[], unsigned char COM[]);Sensores.c: 91
      +                          : {;Sensores.c: 92:     static unsigned char check = 0;;Sensores.c: 93:     start_signal
      +                          (port, tris);
  8271     16A9  0826               	movf	DHT22READ@tris,w
  8272     16AA  00A0               	movwf	start_signal@tris
  8273     16AB  082B               	movf	DHT22READ@port,w
  8274     16AC  3196  2612  3196   	fcall	_start_signal
  8275                           
  8276                           ;Sensores.c: 94:     check = check_response(port, tris, TOUT);
  8277     16AF  0020               	movlb	0	; select bank0
  8278     16B0  0826               	movf	DHT22READ@tris,w
  8279     16B1  00A0               	movwf	check_response@tris
  8280     16B2  0828               	movf	DHT22READ@TOUT,w
  8281     16B3  00A1               	movwf	check_response@TOUT
  8282     16B4  082B               	movf	DHT22READ@port,w
  8283     16B5  3196  26FB  3196   	fcall	_check_response
  8284     16B8  0021               	movlb	1	; select bank1
  8285     16B9  00A8               	movwf	DHT22READ@check^(0+128)
  8286     16BA                     l3707:
  8287                           
  8288                           ;Sensores.c: 95:     if (!check)
  8289     16BA  0828               	movf	DHT22READ@check^(0+128),w
  8290     16BB  1D03               	btfss	3,2
  8291     16BC  2EBE               	goto	u2611
  8292     16BD  2EBF               	goto	u2610
  8293     16BE                     u2611:
  8294     16BE  2EC1               	goto	l3711
  8295     16BF                     u2610:
  8296     16BF                     l3709:
  8297                           
  8298                           ;Sensores.c: 96:        {;Sensores.c: 97:           PIE1bits.TXIE = 1;
  8299     16BF  1611               	bsf	17,4	;volatile
  8300                           
  8301                           ;Sensores.c: 98:        }
  8302     16C0  2EFA               	goto	l598
  8303     16C1                     l3711:
  8304                           
  8305                           ;Sensores.c: 100:        {;Sensores.c: 101:          dhtresult[0] = read_byte(port, tris
      +                          );
  8306     16C1  0020               	movlb	0	; select bank0
  8307     16C2  0829               	movf	DHT22READ@dhtresult,w
  8308     16C3  0086               	movwf	6
  8309     16C4  3001               	movlw	1	; select bank2/3
  8310     16C5  0087               	movwf	7
  8311     16C6  0826               	movf	DHT22READ@tris,w
  8312     16C7  00A0               	movwf	read_byte@tris
  8313     16C8  082B               	movf	DHT22READ@port,w
  8314     16C9  3196  2653  3196   	fcall	_read_byte
  8315     16CC  0081               	movwf	1
  8316                           
  8317                           ;Sensores.c: 102:          dhtresult[1] = read_byte(port, tris);
  8318     16CD  0020               	movlb	0	; select bank0
  8319     16CE  0A29               	incf	DHT22READ@dhtresult,w
  8320     16CF  0086               	movwf	6
  8321     16D0  3001               	movlw	1	; select bank2/3
  8322     16D1  0087               	movwf	7
  8323     16D2  0826               	movf	DHT22READ@tris,w
  8324     16D3  00A0               	movwf	read_byte@tris
  8325     16D4  082B               	movf	DHT22READ@port,w
  8326     16D5  3196  2653  3196   	fcall	_read_byte
  8327     16D8  0081               	movwf	1
  8328                           
  8329                           ;Sensores.c: 103:          dhtresult[2]= read_byte(port, tris);
  8330     16D9  0020               	movlb	0	; select bank0
  8331     16DA  0829               	movf	DHT22READ@dhtresult,w
  8332     16DB  3E02               	addlw	2
  8333     16DC  0086               	movwf	6
  8334     16DD  3001               	movlw	1	; select bank2/3
  8335     16DE  0087               	movwf	7
  8336     16DF  0826               	movf	DHT22READ@tris,w
  8337     16E0  00A0               	movwf	read_byte@tris
  8338     16E1  082B               	movf	DHT22READ@port,w
  8339     16E2  3196  2653  3196   	fcall	_read_byte
  8340     16E5  0081               	movwf	1
  8341                           
  8342                           ;Sensores.c: 104:          dhtresult[3] = read_byte(port, tris);
  8343     16E6  0020               	movlb	0	; select bank0
  8344     16E7  0829               	movf	DHT22READ@dhtresult,w
  8345     16E8  3E03               	addlw	3
  8346     16E9  0086               	movwf	6
  8347     16EA  3001               	movlw	1	; select bank2/3
  8348     16EB  0087               	movwf	7
  8349     16EC  0826               	movf	DHT22READ@tris,w
  8350     16ED  00A0               	movwf	read_byte@tris
  8351     16EE  082B               	movf	DHT22READ@port,w
  8352     16EF  3196  2653  3196   	fcall	_read_byte
  8353     16F2  0081               	movwf	1
  8354     16F3                     l3713:
  8355                           
  8356                           ;Sensores.c: 105:          COM[1]=entry + 48;
  8357     16F3  0020               	movlb	0	; select bank0
  8358     16F4  0A2A               	incf	DHT22READ@COM,w
  8359     16F5  0086               	movwf	6
  8360     16F6  0187               	clrf	7
  8361     16F7  0827               	movf	DHT22READ@entry,w
  8362     16F8  3E30               	addlw	48
  8363     16F9  0081               	movwf	1
  8364     16FA                     l598:
  8365     16FA  0008               	return
  8366     16FB                     __end_of_DHT22READ:
  8367                           
  8368                           	psect	text25
  8369     1612                     __ptext25:	
  8370 ;; *************** function _start_signal *****************
  8371 ;; Defined at:
  8372 ;;		line 13 in file "Sensores.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  port            1    wreg     unsigned char 
  8375 ;;  tris            1    0[BANK0 ] unsigned char 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  port            1    2[BANK0 ] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8387 ;;      Params:         0       1       0       0       0       0       0       0
  8388 ;;      Locals:         0       1       0       0       0       0       0       0
  8389 ;;      Temps:          0       1       0       0       0       0       0       0
  8390 ;;      Totals:         0       3       0       0       0       0       0       0
  8391 ;;Total ram usage:        3 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 2
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_DHT22READ
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401     1612                     _start_signal:	
  8402                           ;psect for function _start_signal
  8403                           
  8404                           
  8405                           ;incstack = 0
  8406                           ; Regs used in _start_signal: [wreg+status,2+status,0]
  8407                           ;start_signal@port stored from wreg
  8408     1612  0020               	movlb	0	; select bank0
  8409     1613  00A2               	movwf	start_signal@port
  8410     1614                     l3527:
  8411                           
  8412                           ;Sensores.c: 13: void start_signal(unsigned char port, unsigned char tris);Sensores.c: 1
      +                          4: {;Sensores.c: 15:    if(tris==0){
  8413     1614  0820               	movf	start_signal@tris,w
  8414     1615  1D03               	btfss	3,2
  8415     1616  2E18               	goto	u2361
  8416     1617  2E19               	goto	u2360
  8417     1618                     u2361:
  8418     1618  2E36               	goto	l3535
  8419     1619                     u2360:
  8420     1619                     l3529:
  8421                           
  8422                           ;Sensores.c: 16:    TRISA &= (~port);
  8423     1619  0922               	comf	start_signal@port,w	;volatile
  8424     161A  00A1               	movwf	??_start_signal
  8425     161B  0821               	movf	??_start_signal,w
  8426     161C  0021               	movlb	1	; select bank1
  8427     161D  058C               	andwf	12,f	;volatile
  8428                           
  8429                           ;Sensores.c: 17:    PORTA &= (~port);
  8430     161E  0020               	movlb	0	; select bank0
  8431     161F  0922               	comf	start_signal@port,w	;volatile
  8432     1620  00A1               	movwf	??_start_signal
  8433     1621  0821               	movf	??_start_signal,w
  8434     1622  058C               	andwf	12,f	;volatile
  8435     1623                     l3531:
  8436                           
  8437                           ;Sensores.c: 18:    _delay((unsigned long)((18)*(32000000/4000.0)));
  8438     1623  30BC               	movlw	188
  8439     1624  0020               	movlb	0	; select bank0
  8440     1625  00A1               	movwf	??_start_signal
  8441     1626  3001               	movlw	1
  8442     1627                     u6197:
  8443     1627  0B89               	decfsz	9,f
  8444     1628  2E27               	goto	u6197
  8445     1629  0BA1               	decfsz	??_start_signal,f
  8446     162A  2E27               	goto	u6197
  8447     162B  3200               	nop2
  8448     162C                     l3533:
  8449                           
  8450                           ;Sensores.c: 19:    TRISA |= port;
  8451     162C  0020               	movlb	0	; select bank0
  8452     162D  0822               	movf	start_signal@port,w	;volatile
  8453     162E  00A1               	movwf	??_start_signal
  8454     162F  0821               	movf	??_start_signal,w
  8455     1630  0021               	movlb	1	; select bank1
  8456     1631  048C               	iorwf	12,f	;volatile
  8457                           
  8458                           ;Sensores.c: 20:    _delay((unsigned long)((30)*(32000000/4000000.0)));
  8459     1632  3050               	movlw	80
  8460     1633                     u6207:
  8461     1633  0B89               	decfsz	9,f
  8462     1634  2E33               	goto	u6207
  8463                           
  8464                           ;Sensores.c: 21: }else{
  8465     1635  2E52               	goto	l537
  8466     1636                     l3535:
  8467                           
  8468                           ;Sensores.c: 22:    TRISC &= (~port);
  8469     1636  0922               	comf	start_signal@port,w	;volatile
  8470     1637  00A1               	movwf	??_start_signal
  8471     1638  0821               	movf	??_start_signal,w
  8472     1639  0021               	movlb	1	; select bank1
  8473     163A  058E               	andwf	14,f	;volatile
  8474                           
  8475                           ;Sensores.c: 23:    PORTC &= (~port);
  8476     163B  0020               	movlb	0	; select bank0
  8477     163C  0922               	comf	start_signal@port,w	;volatile
  8478     163D  00A1               	movwf	??_start_signal
  8479     163E  0821               	movf	??_start_signal,w
  8480     163F  058E               	andwf	14,f	;volatile
  8481     1640                     l3537:
  8482                           
  8483                           ;Sensores.c: 24:    _delay((unsigned long)((18)*(32000000/4000.0)));
  8484     1640  30BC               	movlw	188
  8485     1641  0020               	movlb	0	; select bank0
  8486     1642  00A1               	movwf	??_start_signal
  8487     1643  3001               	movlw	1
  8488     1644                     u6217:
  8489     1644  0B89               	decfsz	9,f
  8490     1645  2E44               	goto	u6217
  8491     1646  0BA1               	decfsz	??_start_signal,f
  8492     1647  2E44               	goto	u6217
  8493     1648  3200               	nop2
  8494     1649                     l3539:
  8495                           
  8496                           ;Sensores.c: 25:    TRISC |= port;
  8497     1649  0020               	movlb	0	; select bank0
  8498     164A  0822               	movf	start_signal@port,w	;volatile
  8499     164B  00A1               	movwf	??_start_signal
  8500     164C  0821               	movf	??_start_signal,w
  8501     164D  0021               	movlb	1	; select bank1
  8502     164E  048E               	iorwf	14,f	;volatile
  8503                           
  8504                           ;Sensores.c: 26:    _delay((unsigned long)((30)*(32000000/4000000.0)));
  8505     164F  3050               	movlw	80
  8506     1650                     u6227:
  8507     1650  0B89               	decfsz	9,f
  8508     1651  2E50               	goto	u6227
  8509     1652                     l537:
  8510     1652  0008               	return
  8511     1653                     __end_of_start_signal:
  8512                           
  8513                           	psect	text26
  8514     1653                     __ptext26:	
  8515 ;; *************** function _read_byte *****************
  8516 ;; Defined at:
  8517 ;;		line 64 in file "Sensores.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  port            1    wreg     unsigned char 
  8520 ;;  tris            1    0[BANK0 ] unsigned char 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  port            1    4[BANK0 ] unsigned char 
  8523 ;;  i               1    5[BANK0 ] unsigned char 
  8524 ;;  num             1    3[BANK0 ] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      unsigned char 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8534 ;;      Params:         0       1       0       0       0       0       0       0
  8535 ;;      Locals:         0       3       0       0       0       0       0       0
  8536 ;;      Temps:          0       2       0       0       0       0       0       0
  8537 ;;      Totals:         0       6       0       0       0       0       0       0
  8538 ;;Total ram usage:        6 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 2
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_DHT22READ
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548     1653                     _read_byte:	
  8549                           ;psect for function _read_byte
  8550                           
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _read_byte: [wreg+status,2+status,0]
  8554                           ;read_byte@port stored from wreg
  8555     1653  0020               	movlb	0	; select bank0
  8556     1654  00A4               	movwf	read_byte@port
  8557     1655                     l3609:
  8558                           
  8559                           ;Sensores.c: 64: unsigned char read_byte(unsigned char port, unsigned char tris);Sensore
      +                          s.c: 65:  { unsigned char num = 0, i=0;
  8560     1655  01A3               	clrf	read_byte@num
  8561     1656                     l3611:
  8562                           
  8563                           ;Sensores.c: 66:    TRISA |= port;
  8564     1656  0824               	movf	read_byte@port,w	;volatile
  8565     1657  00A1               	movwf	??_read_byte
  8566     1658  0821               	movf	??_read_byte,w
  8567     1659  0021               	movlb	1	; select bank1
  8568     165A  048C               	iorwf	12,f	;volatile
  8569     165B                     l3613:
  8570                           
  8571                           ;Sensores.c: 67:    for (i=0; i<8; i++)
  8572     165B  0020               	movlb	0	; select bank0
  8573     165C  01A5               	clrf	read_byte@i
  8574     165D                     l3619:
  8575                           
  8576                           ;Sensores.c: 68:    {;Sensores.c: 69:       if(tris==0){
  8577     165D  0820               	movf	read_byte@tris,w
  8578     165E  1D03               	btfss	3,2
  8579     165F  2E61               	goto	u2501
  8580     1660  2E62               	goto	u2500
  8581     1661                     u2501:
  8582     1661  2E85               	goto	l3635
  8583     1662                     u2500:
  8584     1662                     l3623:
  8585     1662  080C               	movf	12,w	;volatile
  8586     1663  0524               	andwf	read_byte@port,w
  8587     1664  1903               	btfsc	3,2
  8588     1665  2E67               	goto	u2511
  8589     1666  2E68               	goto	u2510
  8590     1667                     u2511:
  8591     1667  2E62               	goto	l3623
  8592     1668                     u2510:
  8593     1668                     l3625:
  8594                           
  8595                           ;Sensores.c: 71:       TMR2 = 0;
  8596     1668  019A               	clrf	26	;volatile
  8597     1669                     l3627:
  8598                           
  8599                           ;Sensores.c: 72:       TMR2ON = 1;
  8600     1669  151C               	bsf	28,2	;volatile
  8601     166A                     l3629:	
  8602                           ;Sensores.c: 73:       while (((PORTA & port)>0));
  8603                           
  8604     166A  080C               	movf	12,w	;volatile
  8605     166B  0524               	andwf	read_byte@port,w
  8606     166C  1D03               	btfss	3,2
  8607     166D  2E6F               	goto	u2521
  8608     166E  2E70               	goto	u2520
  8609     166F                     u2521:
  8610     166F  2E6A               	goto	l3629
  8611     1670                     u2520:
  8612     1670                     l581:
  8613                           
  8614                           ;Sensores.c: 74:       TMR2ON = 0;
  8615     1670  111C               	bcf	28,2	;volatile
  8616     1671                     l3631:
  8617                           
  8618                           ;Sensores.c: 75:       if (TMR2 > 80)
  8619     1671  3051               	movlw	81
  8620     1672  021A               	subwf	26,w	;volatile
  8621     1673  1C03               	skipc
  8622     1674  2E76               	goto	u2531
  8623     1675  2E77               	goto	u2530
  8624     1676                     u2531:
  8625     1676  2E9B               	goto	l583
  8626     1677                     u2530:
  8627     1677                     l3633:
  8628                           
  8629                           ;Sensores.c: 76:          num |= 1<<(7-i);
  8630     1677  3001               	movlw	1
  8631     1678  00A1               	movwf	??_read_byte
  8632     1679  0825               	movf	read_byte@i,w
  8633     167A  3C07               	sublw	7
  8634     167B  0A89               	incf	9,f
  8635     167C  2E7E               	goto	u2544
  8636     167D                     u2545:
  8637     167D  35A1               	lslf	??_read_byte,f
  8638     167E                     u2544:
  8639     167E  0B89               	decfsz	9,f
  8640     167F  2E7D               	goto	u2545
  8641     1680  0821               	movf	??_read_byte,w
  8642     1681  00A2               	movwf	??_read_byte+1
  8643     1682  0822               	movf	??_read_byte+1,w
  8644     1683  04A3               	iorwf	read_byte@num,f
  8645     1684  2E9B               	goto	l583
  8646     1685                     l3635:
  8647     1685  080E               	movf	14,w	;volatile
  8648     1686  0524               	andwf	read_byte@port,w
  8649     1687  1903               	btfsc	3,2
  8650     1688  2E8A               	goto	u2551
  8651     1689  2E8B               	goto	u2550
  8652     168A                     u2551:
  8653     168A  2E85               	goto	l3635
  8654     168B                     u2550:
  8655     168B                     l3637:
  8656                           
  8657                           ;Sensores.c: 79:       TMR2 = 0;
  8658     168B  019A               	clrf	26	;volatile
  8659     168C                     l3639:
  8660                           
  8661                           ;Sensores.c: 80:       TMR2ON = 1;
  8662     168C  151C               	bsf	28,2	;volatile
  8663     168D                     l3641:	
  8664                           ;Sensores.c: 81:       while (((PORTC & port)>0));
  8665                           
  8666     168D  080E               	movf	14,w	;volatile
  8667     168E  0524               	andwf	read_byte@port,w
  8668     168F  1D03               	btfss	3,2
  8669     1690  2E92               	goto	u2561
  8670     1691  2E93               	goto	u2560
  8671     1692                     u2561:
  8672     1692  2E8D               	goto	l3641
  8673     1693                     u2560:
  8674     1693                     l589:
  8675                           
  8676                           ;Sensores.c: 82:       TMR2ON = 0;
  8677     1693  111C               	bcf	28,2	;volatile
  8678     1694                     l3643:
  8679                           
  8680                           ;Sensores.c: 83:       if (TMR2 > 80)
  8681     1694  3051               	movlw	81
  8682     1695  021A               	subwf	26,w	;volatile
  8683     1696  1C03               	skipc
  8684     1697  2E99               	goto	u2571
  8685     1698  2E9A               	goto	u2570
  8686     1699                     u2571:
  8687     1699  2E9B               	goto	l583
  8688     169A                     u2570:
  8689     169A  2E77               	goto	l3633
  8690     169B                     l583:	
  8691                           ;Sensores.c: 85:    }
  8692                           
  8693                           
  8694                           ;Sensores.c: 86:     }
  8695     169B  3001               	movlw	1
  8696     169C  00A1               	movwf	??_read_byte
  8697     169D  0821               	movf	??_read_byte,w
  8698     169E  07A5               	addwf	read_byte@i,f
  8699     169F                     l3647:
  8700     169F  3008               	movlw	8
  8701     16A0  0225               	subwf	read_byte@i,w
  8702     16A1  1C03               	skipc
  8703     16A2  2EA4               	goto	u2581
  8704     16A3  2EA5               	goto	u2580
  8705     16A4                     u2581:
  8706     16A4  2E5D               	goto	l3619
  8707     16A5                     u2580:
  8708     16A5                     l3649:
  8709     16A5                     l3651:
  8710                           
  8711                           ;Sensores.c: 88:    return num;
  8712     16A5  0823               	movf	read_byte@num,w
  8713     16A6                     l591:
  8714     16A6  0008               	return
  8715     16A7                     __end_of_read_byte:
  8716                           
  8717                           	psect	text27
  8718     16FB                     __ptext27:	
  8719 ;; *************** function _check_response *****************
  8720 ;; Defined at:
  8721 ;;		line 29 in file "Sensores.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  port            1    wreg     unsigned char 
  8724 ;;  tris            1    0[BANK0 ] unsigned char 
  8725 ;;  TOUT            1    1[BANK0 ] unsigned char 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  port            1    2[BANK0 ] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      unsigned char 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8737 ;;      Params:         0       2       0       0       0       0       0       0
  8738 ;;      Locals:         0       1       0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0
  8740 ;;      Totals:         0       3       0       0       0       0       0       0
  8741 ;;Total ram usage:        3 bytes
  8742 ;; Hardware stack levels used: 1
  8743 ;; Hardware stack levels required when called: 2
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_DHT22READ
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751     16FB                     _check_response:	
  8752                           ;psect for function _check_response
  8753                           
  8754                           
  8755                           ;incstack = 0
  8756                           ; Regs used in _check_response: [wreg+status,2+status,0]
  8757                           ;check_response@port stored from wreg
  8758     16FB  0020               	movlb	0	; select bank0
  8759     16FC  00A2               	movwf	check_response@port
  8760     16FD                     l3541:
  8761                           
  8762                           ;Sensores.c: 29: unsigned char check_response(unsigned char port, unsigned char tris, un
      +                          signed char TOUT);Sensores.c: 30:  {;Sensores.c: 31:    TOUT = 0;
  8763     16FD  01A1               	clrf	check_response@TOUT
  8764                           
  8765                           ;Sensores.c: 32:    TMR2 = 0;
  8766     16FE  019A               	clrf	26	;volatile
  8767     16FF                     l3543:
  8768                           
  8769                           ;Sensores.c: 33:    TMR2ON = 1;
  8770     16FF  151C               	bsf	28,2	;volatile
  8771     1700                     l3545:
  8772                           
  8773                           ;Sensores.c: 34:    if(tris==0){
  8774     1700  0820               	movf	check_response@tris,w
  8775     1701  1D03               	btfss	3,2
  8776     1702  2F04               	goto	u2371
  8777     1703  2F05               	goto	u2370
  8778     1704                     u2371:
  8779     1704  2F2C               	goto	l3579
  8780     1705                     u2370:
  8781     1705                     l3549:
  8782     1705  080C               	movf	12,w	;volatile
  8783     1706  0522               	andwf	check_response@port,w
  8784     1707  1D03               	btfss	3,2
  8785     1708  2F0A               	goto	u2381
  8786     1709  2F0B               	goto	u2380
  8787     170A                     u2381:
  8788     170A  2F10               	goto	l3553
  8789     170B                     u2380:
  8790     170B                     l3551:
  8791     170B  0821               	movf	check_response@TOUT,w
  8792     170C  1903               	btfsc	3,2
  8793     170D  2F0F               	goto	u2391
  8794     170E  2F10               	goto	u2390
  8795     170F                     u2391:
  8796     170F  2F05               	goto	l3549
  8797     1710                     u2390:
  8798     1710                     l3553:
  8799                           
  8800                           ;Sensores.c: 36:    if (TOUT)
  8801     1710  0821               	movf	check_response@TOUT,w
  8802     1711  1903               	btfsc	3,2
  8803     1712  2F14               	goto	u2401
  8804     1713  2F15               	goto	u2400
  8805     1714                     u2401:
  8806     1714  2F17               	goto	l3561
  8807     1715                     u2400:
  8808     1715                     l3555:
  8809                           
  8810                           ;Sensores.c: 37:       return 0;
  8811     1715  3000               	movlw	0
  8812     1716  2F4F               	goto	l547
  8813     1717                     l3561:
  8814                           
  8815                           ;Sensores.c: 39:     { TMR2 = 0;
  8816     1717  019A               	clrf	26	;volatile
  8817     1718                     l3563:	
  8818                           ;Sensores.c: 40:       while (((PORTA & port)>0) && !TOUT);
  8819                           
  8820     1718  080C               	movf	12,w	;volatile
  8821     1719  0522               	andwf	check_response@port,w
  8822     171A  1903               	btfsc	3,2
  8823     171B  2F1D               	goto	u2411
  8824     171C  2F1E               	goto	u2410
  8825     171D                     u2411:
  8826     171D  2F23               	goto	l3567
  8827     171E                     u2410:
  8828     171E                     l3565:
  8829     171E  0821               	movf	check_response@TOUT,w
  8830     171F  1903               	btfsc	3,2
  8831     1720  2F22               	goto	u2421
  8832     1721  2F23               	goto	u2420
  8833     1722                     u2421:
  8834     1722  2F18               	goto	l3563
  8835     1723                     u2420:
  8836     1723                     l3567:
  8837                           
  8838                           ;Sensores.c: 41:       if (TOUT)
  8839     1723  0821               	movf	check_response@TOUT,w
  8840     1724  1903               	btfsc	3,2
  8841     1725  2F27               	goto	u2431
  8842     1726  2F28               	goto	u2430
  8843     1727                     u2431:
  8844     1727  2F29               	goto	l554
  8845     1728                     u2430:
  8846     1728  2F15               	goto	l3555
  8847     1729                     l554:	
  8848                           ;Sensores.c: 43:       else
  8849                           
  8850                           
  8851                           ;Sensores.c: 44:       { TMR2ON = 0;
  8852     1729  111C               	bcf	28,2	;volatile
  8853     172A                     l3575:
  8854                           
  8855                           ;Sensores.c: 45:          return 1;
  8856     172A  3001               	movlw	1
  8857     172B  2F4F               	goto	l547
  8858     172C                     l3579:
  8859     172C  080E               	movf	14,w	;volatile
  8860     172D  0522               	andwf	check_response@port,w
  8861     172E  1D03               	btfss	3,2
  8862     172F  2F31               	goto	u2441
  8863     1730  2F32               	goto	u2440
  8864     1731                     u2441:
  8865     1731  2F37               	goto	l3583
  8866     1732                     u2440:
  8867     1732                     l3581:
  8868     1732  0821               	movf	check_response@TOUT,w
  8869     1733  1903               	btfsc	3,2
  8870     1734  2F36               	goto	u2451
  8871     1735  2F37               	goto	u2450
  8872     1736                     u2451:
  8873     1736  2F2C               	goto	l3579
  8874     1737                     u2450:
  8875     1737                     l3583:
  8876                           
  8877                           ;Sensores.c: 50:    if (TOUT)
  8878     1737  0821               	movf	check_response@TOUT,w
  8879     1738  1903               	btfsc	3,2
  8880     1739  2F3B               	goto	u2461
  8881     173A  2F3C               	goto	u2460
  8882     173B                     u2461:
  8883     173B  2F3D               	goto	l3591
  8884     173C                     u2460:
  8885     173C  2F15               	goto	l3555
  8886     173D                     l3591:
  8887                           
  8888                           ;Sensores.c: 53:     { TMR2 = 0;
  8889     173D  019A               	clrf	26	;volatile
  8890     173E                     l3593:	
  8891                           ;Sensores.c: 54:       while (((PORTC & port)>0) && !TOUT);
  8892                           
  8893     173E  080E               	movf	14,w	;volatile
  8894     173F  0522               	andwf	check_response@port,w
  8895     1740  1903               	btfsc	3,2
  8896     1741  2F43               	goto	u2471
  8897     1742  2F44               	goto	u2470
  8898     1743                     u2471:
  8899     1743  2F49               	goto	l3597
  8900     1744                     u2470:
  8901     1744                     l3595:
  8902     1744  0821               	movf	check_response@TOUT,w
  8903     1745  1903               	btfsc	3,2
  8904     1746  2F48               	goto	u2481
  8905     1747  2F49               	goto	u2480
  8906     1748                     u2481:
  8907     1748  2F3E               	goto	l3593
  8908     1749                     u2480:
  8909     1749                     l3597:
  8910                           
  8911                           ;Sensores.c: 55:       if (TOUT)
  8912     1749  0821               	movf	check_response@TOUT,w
  8913     174A  1903               	btfsc	3,2
  8914     174B  2F4D               	goto	u2491
  8915     174C  2F4E               	goto	u2490
  8916     174D                     u2491:
  8917     174D  2F29               	goto	l554
  8918     174E                     u2490:
  8919     174E  2F15               	goto	l3555
  8920     174F                     l547:
  8921     174F  0008               	return
  8922     1750                     __end_of_check_response:
  8923                           
  8924                           	psect	intentry
  8925     0004                     __pintentry:	
  8926 ;; *************** function _INTERRUPT_InterruptManager *****************
  8927 ;; Defined at:
  8928 ;;		line 701 in file "main.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;		None
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      void 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8942 ;;      Params:         0       0       0       0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0       0
  8944 ;;      Temps:          2       0       0       0       0       0       0       0
  8945 ;;      Totals:         2       0       0       0       0       0       0       0
  8946 ;;Total ram usage:        2 bytes
  8947 ;; Hardware stack levels used: 1
  8948 ;; Hardware stack levels required when called: 1
  8949 ;; This function calls:
  8950 ;;		_TXsend
  8951 ;;		_i2cread3byte
  8952 ;;		_i2creadbyte
  8953 ;;		_i2cwrite2byte
  8954 ;;		_i2cwritebyte
  8955 ;; This function is called by:
  8956 ;;		Interrupt level 1
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960     0004                     _INTERRUPT_InterruptManager:
  8961                           
  8962                           ;incstack = 0
  8963     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8964                           
  8965                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8966     0005  3180               	pagesel	$
  8967     0006                     i1l6407:
  8968                           
  8969                           ;main.c: 705:     static unsigned char i2cstep=0;;main.c: 706:     static unsigned char 
      +                          rp=0, h=0, sspo=0;;main.c: 707:     if(RCIF){
  8970     0006  0020               	movlb	0	; select bank0
  8971     0007  1E91               	btfss	17,5	;volatile
  8972     0008  280A               	goto	u565_21
  8973     0009  280B               	goto	u565_20
  8974     000A                     u565_21:
  8975     000A  28E2               	goto	i1l377
  8976     000B                     u565_20:
  8977     000B  28CB               	goto	i1l6527
  8978     000C                     i1l6411:
  8979                           
  8980                           ;main.c: 710:             h = RCREG;
  8981     000C  0023               	movlb	3	; select bank3
  8982     000D  0819               	movf	25,w	;volatile
  8983     000E  00FC               	movwf	INTERRUPT_InterruptManager@h
  8984     000F                     i1l6413:
  8985                           
  8986                           ;main.c: 711:             if(h=='C') rp=1, h=0, sspo=0;;
  8987     000F  3043               	movlw	67
  8988     0010  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  8989     0011  1D03               	btfss	3,2
  8990     0012  2814               	goto	u566_21
  8991     0013  2815               	goto	u566_20
  8992     0014                     u566_21:
  8993     0014  281A               	goto	i1l6419
  8994     0015                     u566_20:
  8995     0015                     i1l6415:
  8996     0015  0021               	movlb	1	; select bank1
  8997     0016  01AA               	clrf	INTERRUPT_InterruptManager@rp^(0+128)
  8998     0017  0AAA               	incf	INTERRUPT_InterruptManager@rp^(0+128),f
  8999     0018                     i1l6417:
  9000     0018  01FC               	clrf	INTERRUPT_InterruptManager@h
  9001     0019  01A9               	clrf	INTERRUPT_InterruptManager@sspo^(0+128)
  9002     001A                     i1l6419:
  9003                           
  9004                           ;main.c: 712:             if(h=='R') meddone=0x3FF, h=0;
  9005     001A  3052               	movlw	82
  9006     001B  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9007     001C  1D03               	btfss	3,2
  9008     001D  281F               	goto	u567_21
  9009     001E  2820               	goto	u567_20
  9010     001F                     u567_21:
  9011     001F  2826               	goto	i1l6425
  9012     0020                     u567_20:
  9013     0020                     i1l6421:
  9014     0020  30FF               	movlw	255
  9015     0021  0021               	movlb	1	; select bank1
  9016     0022  00A2               	movwf	_meddone^(0+128)
  9017     0023  3003               	movlw	3
  9018     0024  00A3               	movwf	(_meddone^(0+128)+1)
  9019     0025                     i1l6423:
  9020     0025  01FC               	clrf	INTERRUPT_InterruptManager@h
  9021     0026                     i1l6425:
  9022                           
  9023                           ;main.c: 713:             if(h=='M') rp=3, h=0;
  9024     0026  304D               	movlw	77
  9025     0027  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9026     0028  1D03               	btfss	3,2
  9027     0029  282B               	goto	u568_21
  9028     002A  282C               	goto	u568_20
  9029     002B                     u568_21:
  9030     002B  2830               	goto	i1l6431
  9031     002C                     u568_20:
  9032     002C                     i1l6427:
  9033     002C  3003               	movlw	3
  9034     002D  0021               	movlb	1	; select bank1
  9035     002E  00AA               	movwf	INTERRUPT_InterruptManager@rp^(0+128)
  9036     002F                     i1l6429:
  9037     002F  01FC               	clrf	INTERRUPT_InterruptManager@h
  9038     0030                     i1l6431:
  9039                           
  9040                           ;main.c: 714:             if(h=='L') med_sl=5, COM[1]=48, h=0, PIE1bits.TXIE = 1;
  9041     0030  304C               	movlw	76
  9042     0031  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9043     0032  1D03               	btfss	3,2
  9044     0033  2835               	goto	u569_21
  9045     0034  2836               	goto	u569_20
  9046     0035                     u569_21:
  9047     0035  283D               	goto	i1l6439
  9048     0036                     u569_20:
  9049     0036                     i1l6433:
  9050     0036  3005               	movlw	5
  9051     0037  0021               	movlb	1	; select bank1
  9052     0038  00B8               	movwf	_med_sl^(0+128)
  9053     0039  3030               	movlw	48
  9054     003A  00ED               	movwf	(_COM^(0+128)+1)
  9055     003B                     i1l6435:
  9056     003B  01FC               	clrf	INTERRUPT_InterruptManager@h
  9057     003C                     i1l6437:
  9058     003C  1611               	bsf	17,4	;volatile
  9059     003D                     i1l6439:
  9060                           
  9061                           ;main.c: 715:             if(h=='0') meddone|= 0x01,h=0;
  9062     003D  3030               	movlw	48
  9063     003E  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9064     003F  1D03               	btfss	3,2
  9065     0040  2842               	goto	u570_21
  9066     0041  2843               	goto	u570_20
  9067     0042                     u570_21:
  9068     0042  2846               	goto	i1l6445
  9069     0043                     u570_20:
  9070     0043                     i1l6441:
  9071     0043  0021               	movlb	1	; select bank1
  9072     0044  1422               	bsf	_meddone^(0+128),0
  9073     0045                     i1l6443:
  9074     0045  01FC               	clrf	INTERRUPT_InterruptManager@h
  9075     0046                     i1l6445:
  9076                           
  9077                           ;main.c: 716:             if(h=='1') meddone|=0x02, h=0;
  9078     0046  3031               	movlw	49
  9079     0047  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9080     0048  1D03               	btfss	3,2
  9081     0049  284B               	goto	u571_21
  9082     004A  284C               	goto	u571_20
  9083     004B                     u571_21:
  9084     004B  284F               	goto	i1l6451
  9085     004C                     u571_20:
  9086     004C                     i1l6447:
  9087     004C  0021               	movlb	1	; select bank1
  9088     004D  14A2               	bsf	_meddone^(0+128),1
  9089     004E                     i1l6449:
  9090     004E  01FC               	clrf	INTERRUPT_InterruptManager@h
  9091     004F                     i1l6451:
  9092                           
  9093                           ;main.c: 717:             if(h=='2') meddone|=0x04, h=0;
  9094     004F  3032               	movlw	50
  9095     0050  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9096     0051  1D03               	btfss	3,2
  9097     0052  2854               	goto	u572_21
  9098     0053  2855               	goto	u572_20
  9099     0054                     u572_21:
  9100     0054  2858               	goto	i1l6457
  9101     0055                     u572_20:
  9102     0055                     i1l6453:
  9103     0055  0021               	movlb	1	; select bank1
  9104     0056  1522               	bsf	_meddone^(0+128),2
  9105     0057                     i1l6455:
  9106     0057  01FC               	clrf	INTERRUPT_InterruptManager@h
  9107     0058                     i1l6457:
  9108                           
  9109                           ;main.c: 718:             if(h=='3') meddone|=0x08, h=0;
  9110     0058  3033               	movlw	51
  9111     0059  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9112     005A  1D03               	btfss	3,2
  9113     005B  285D               	goto	u573_21
  9114     005C  285E               	goto	u573_20
  9115     005D                     u573_21:
  9116     005D  2861               	goto	i1l6463
  9117     005E                     u573_20:
  9118     005E                     i1l6459:
  9119     005E  0021               	movlb	1	; select bank1
  9120     005F  15A2               	bsf	_meddone^(0+128),3
  9121     0060                     i1l6461:
  9122     0060  01FC               	clrf	INTERRUPT_InterruptManager@h
  9123     0061                     i1l6463:
  9124                           
  9125                           ;main.c: 719:             if(h=='4') meddone|=0x10, h=0;
  9126     0061  3034               	movlw	52
  9127     0062  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9128     0063  1D03               	btfss	3,2
  9129     0064  2866               	goto	u574_21
  9130     0065  2867               	goto	u574_20
  9131     0066                     u574_21:
  9132     0066  286A               	goto	i1l6469
  9133     0067                     u574_20:
  9134     0067                     i1l6465:
  9135     0067  0021               	movlb	1	; select bank1
  9136     0068  1622               	bsf	_meddone^(0+128),4
  9137     0069                     i1l6467:
  9138     0069  01FC               	clrf	INTERRUPT_InterruptManager@h
  9139     006A                     i1l6469:
  9140                           
  9141                           ;main.c: 720:             if(h=='5') meddone|=0x20, h=0;
  9142     006A  3035               	movlw	53
  9143     006B  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9144     006C  1D03               	btfss	3,2
  9145     006D  286F               	goto	u575_21
  9146     006E  2870               	goto	u575_20
  9147     006F                     u575_21:
  9148     006F  2873               	goto	i1l6475
  9149     0070                     u575_20:
  9150     0070                     i1l6471:
  9151     0070  0021               	movlb	1	; select bank1
  9152     0071  16A2               	bsf	_meddone^(0+128),5
  9153     0072                     i1l6473:
  9154     0072  01FC               	clrf	INTERRUPT_InterruptManager@h
  9155     0073                     i1l6475:
  9156                           
  9157                           ;main.c: 721:             if(h=='6') meddone|=0x40, h=0;
  9158     0073  3036               	movlw	54
  9159     0074  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9160     0075  1D03               	btfss	3,2
  9161     0076  2878               	goto	u576_21
  9162     0077  2879               	goto	u576_20
  9163     0078                     u576_21:
  9164     0078  287C               	goto	i1l6481
  9165     0079                     u576_20:
  9166     0079                     i1l6477:
  9167     0079  0021               	movlb	1	; select bank1
  9168     007A  1722               	bsf	_meddone^(0+128),6
  9169     007B                     i1l6479:
  9170     007B  01FC               	clrf	INTERRUPT_InterruptManager@h
  9171     007C                     i1l6481:
  9172                           
  9173                           ;main.c: 722:             if(h=='7') meddone|=0x80, h=0;
  9174     007C  3037               	movlw	55
  9175     007D  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9176     007E  1D03               	btfss	3,2
  9177     007F  2881               	goto	u577_21
  9178     0080  2882               	goto	u577_20
  9179     0081                     u577_21:
  9180     0081  2885               	goto	i1l6487
  9181     0082                     u577_20:
  9182     0082                     i1l6483:
  9183     0082  0021               	movlb	1	; select bank1
  9184     0083  17A2               	bsf	_meddone^(0+128),7
  9185     0084                     i1l6485:
  9186     0084  01FC               	clrf	INTERRUPT_InterruptManager@h
  9187     0085                     i1l6487:
  9188                           
  9189                           ;main.c: 723:             if(h=='8') meddone|=0x100, h=0;
  9190     0085  3038               	movlw	56
  9191     0086  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9192     0087  1D03               	btfss	3,2
  9193     0088  288A               	goto	u578_21
  9194     0089  288B               	goto	u578_20
  9195     008A                     u578_21:
  9196     008A  288E               	goto	i1l6493
  9197     008B                     u578_20:
  9198     008B                     i1l6489:
  9199     008B  0021               	movlb	1	; select bank1
  9200     008C  1423               	bsf	(_meddone^(0+128)+1),0
  9201     008D                     i1l6491:
  9202     008D  01FC               	clrf	INTERRUPT_InterruptManager@h
  9203     008E                     i1l6493:
  9204                           
  9205                           ;main.c: 724:             if(h=='9') meddone|=0x200, h=0;
  9206     008E  3039               	movlw	57
  9207     008F  067C               	xorwf	INTERRUPT_InterruptManager@h,w
  9208     0090  1D03               	btfss	3,2
  9209     0091  2893               	goto	u579_21
  9210     0092  2894               	goto	u579_20
  9211     0093                     u579_21:
  9212     0093  28E2               	goto	i1l377
  9213     0094                     u579_20:
  9214     0094                     i1l6495:
  9215     0094  0021               	movlb	1	; select bank1
  9216     0095  14A3               	bsf	(_meddone^(0+128)+1),1
  9217     0096                     i1l6497:
  9218     0096  01FC               	clrf	INTERRUPT_InterruptManager@h
  9219     0097  28E2               	goto	i1l377
  9220     0098                     i1l6499:
  9221                           
  9222                           ;main.c: 729:             if(sspo<9){
  9223     0098  3009               	movlw	9
  9224     0099  0229               	subwf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9225     009A  1803               	skipnc
  9226     009B  289D               	goto	u580_21
  9227     009C  289E               	goto	u580_20
  9228     009D                     u580_21:
  9229     009D  28AB               	goto	i1l6505
  9230     009E                     u580_20:
  9231     009E                     i1l6501:
  9232                           
  9233                           ;main.c: 730:               sport[sspo]=RCREG;
  9234     009E  0829               	movf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9235     009F  3EBD               	addlw	(low (_sport| 0))& (0+255)
  9236     00A0  0086               	movwf	6
  9237     00A1  0187               	clrf	7
  9238     00A2  0023               	movlb	3	; select bank3
  9239     00A3  0819               	movf	25,w	;volatile
  9240     00A4  0081               	movwf	1
  9241     00A5                     i1l6503:
  9242                           
  9243                           ;main.c: 731:               sspo++;
  9244     00A5  3001               	movlw	1
  9245     00A6  00FA               	movwf	??_INTERRUPT_InterruptManager
  9246     00A7  087A               	movf	??_INTERRUPT_InterruptManager,w
  9247     00A8  0021               	movlb	1	; select bank1
  9248     00A9  07A9               	addwf	INTERRUPT_InterruptManager@sspo^(0+128),f
  9249                           
  9250                           ;main.c: 732:             }else{
  9251     00AA  28E2               	goto	i1l377
  9252     00AB                     i1l6505:
  9253                           
  9254                           ;main.c: 733:               rp=2;
  9255     00AB  3002               	movlw	2
  9256     00AC  00AA               	movwf	INTERRUPT_InterruptManager@rp^(0+128)
  9257     00AD  28E2               	goto	i1l377
  9258     00AE                     i1l6507:
  9259                           
  9260                           ;main.c: 737:             sport[sspo]=RCREG;
  9261     00AE  0829               	movf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9262     00AF  3EBD               	addlw	(low (_sport| 0))& (0+255)
  9263     00B0  0086               	movwf	6
  9264     00B1  0187               	clrf	7
  9265     00B2  0023               	movlb	3	; select bank3
  9266     00B3  0819               	movf	25,w	;volatile
  9267     00B4  0081               	movwf	1
  9268     00B5                     i1l6509:
  9269                           
  9270                           ;main.c: 738:             port_save=1;
  9271     00B5  0021               	movlb	1	; select bank1
  9272     00B6  01BC               	clrf	_port_save^(0+128)
  9273     00B7  0ABC               	incf	_port_save^(0+128),f
  9274     00B8                     i1l6511:
  9275                           
  9276                           ;main.c: 739:             med_sl=5;
  9277     00B8  3005               	movlw	5
  9278     00B9  00B8               	movwf	_med_sl^(0+128)
  9279     00BA                     i1l6513:
  9280                           
  9281                           ;main.c: 740:             rp=0;
  9282     00BA  01AA               	clrf	INTERRUPT_InterruptManager@rp^(0+128)
  9283                           
  9284                           ;main.c: 742:             break;
  9285     00BB  28E2               	goto	i1l377
  9286     00BC                     i1l6515:
  9287                           
  9288                           ;main.c: 744:             sport[sspo]=RCREG;
  9289     00BC  0829               	movf	INTERRUPT_InterruptManager@sspo^(0+128),w
  9290     00BD  3EBD               	addlw	(low (_sport| 0))& (0+255)
  9291     00BE  0086               	movwf	6
  9292     00BF  0187               	clrf	7
  9293     00C0  0023               	movlb	3	; select bank3
  9294     00C1  0819               	movf	25,w	;volatile
  9295     00C2  0081               	movwf	1
  9296     00C3                     i1l6517:
  9297                           
  9298                           ;main.c: 745:             port_save=1;
  9299     00C3  0021               	movlb	1	; select bank1
  9300     00C4  01BC               	clrf	_port_save^(0+128)
  9301     00C5  0ABC               	incf	_port_save^(0+128),f
  9302     00C6                     i1l6519:
  9303                           
  9304                           ;main.c: 746:             med_sl=5;
  9305     00C6  3005               	movlw	5
  9306     00C7  00B8               	movwf	_med_sl^(0+128)
  9307     00C8                     i1l6521:
  9308                           
  9309                           ;main.c: 747:             rp=0;
  9310     00C8  01AA               	clrf	INTERRUPT_InterruptManager@rp^(0+128)
  9311     00C9                     i1l6523:
  9312                           
  9313                           ;main.c: 748:             PIE1bits.TXIE = 1;
  9314     00C9  1611               	bsf	17,4	;volatile
  9315                           
  9316                           ;main.c: 749:             break;
  9317     00CA  28E2               	goto	i1l377
  9318     00CB                     i1l6527:
  9319     00CB  0021               	movlb	1	; select bank1
  9320     00CC  082A               	movf	INTERRUPT_InterruptManager@rp^(0+128),w
  9321     00CD  00FA               	movwf	??_INTERRUPT_InterruptManager
  9322     00CE  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9323                           
  9324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9325                           ; Switch size 1, requested type "simple"
  9326                           ; Number of cases is 1, Range of values is 0 to 0
  9327                           ; switch strategies available:
  9328                           ; Name         Instructions Cycles
  9329                           ; simple_byte            4     3 (average)
  9330                           ; direct_byte            8     6 (fixed)
  9331                           ; jumptable            260     6 (fixed)
  9332                           ;	Chosen strategy is simple_byte
  9333     00CF  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9334     00D0  3A00               	xorlw	0	; case 0
  9335     00D1  1903               	skipnz
  9336     00D2  28D4               	goto	i1l6907
  9337     00D3  28E2               	goto	i1l377
  9338     00D4                     i1l6907:
  9339                           
  9340                           ; Switch size 1, requested type "simple"
  9341                           ; Number of cases is 4, Range of values is 0 to 3
  9342                           ; switch strategies available:
  9343                           ; Name         Instructions Cycles
  9344                           ; simple_byte           13     7 (average)
  9345                           ; direct_byte           14     6 (fixed)
  9346                           ; jumptable            260     6 (fixed)
  9347                           ;	Chosen strategy is simple_byte
  9348     00D4  087A               	movf	??_INTERRUPT_InterruptManager,w
  9349     00D5  3A00               	xorlw	0	; case 0
  9350     00D6  1903               	skipnz
  9351     00D7  280C               	goto	i1l6411
  9352     00D8  3A01               	xorlw	1	; case 1
  9353     00D9  1903               	skipnz
  9354     00DA  2898               	goto	i1l6499
  9355     00DB  3A03               	xorlw	3	; case 2
  9356     00DC  1903               	skipnz
  9357     00DD  28AE               	goto	i1l6507
  9358     00DE  3A01               	xorlw	1	; case 3
  9359     00DF  1903               	skipnz
  9360     00E0  28BC               	goto	i1l6515
  9361     00E1  28E2               	goto	i1l377
  9362     00E2                     i1l377:	
  9363                           ;main.c: 753:     }
  9364                           
  9365                           
  9366                           ;main.c: 754:     static unsigned char plb[]="N";;main.c: 755:     if(TXIF && PIE1bits.T
      +                          XIE){
  9367     00E2  0020               	movlb	0	; select bank0
  9368     00E3  1E11               	btfss	17,4	;volatile
  9369     00E4  28E6               	goto	u581_21
  9370     00E5  28E7               	goto	u581_20
  9371     00E6                     u581_21:
  9372     00E6  298F               	goto	i1l402
  9373     00E7                     u581_20:
  9374     00E7                     i1l6529:
  9375     00E7  0021               	movlb	1	; select bank1
  9376     00E8  1E11               	btfss	17,4	;volatile
  9377     00E9  28EB               	goto	u582_21
  9378     00EA  28EC               	goto	u582_20
  9379     00EB                     u582_21:
  9380     00EB  298F               	goto	i1l402
  9381     00EC                     u582_20:
  9382     00EC  2973               	goto	i1l6575
  9383     00ED                     i1l6533:
  9384                           
  9385                           ;main.c: 785:             TXREG='{';
  9386     00ED  307B               	movlw	123
  9387     00EE  0023               	movlb	3	; select bank3
  9388     00EF  009A               	movwf	26	;volatile
  9389     00F0                     i1l6535:
  9390                           
  9391                           ;main.c: 786:             cs=1;
  9392     00F0  0021               	movlb	1	; select bank1
  9393     00F1  01BB               	clrf	_cs^(0+128)
  9394     00F2  0ABB               	incf	_cs^(0+128),f
  9395                           
  9396                           ;main.c: 787:             break;
  9397     00F3  298F               	goto	i1l402
  9398     00F4                     i1l6537:
  9399                           
  9400                           ;main.c: 789:             if(COM[1]>'9'){
  9401     00F4  303A               	movlw	58
  9402     00F5  026D               	subwf	(_COM^(0+128)+1),w
  9403     00F6  1C03               	skipc
  9404     00F7  28F9               	goto	u583_21
  9405     00F8  28FA               	goto	u583_20
  9406     00F9                     u583_21:
  9407     00F9  2904               	goto	i1l6541
  9408     00FA                     u583_20:
  9409     00FA                     i1l6539:
  9410                           
  9411                           ;main.c: 790:             TXsend(COM10, 5);
  9412     00FA  3064               	movlw	low _COM10
  9413     00FB  00F0               	movwf	TXsend@word
  9414     00FC  3001               	movlw	high _COM10
  9415     00FD  00F1               	movwf	TXsend@word+1
  9416     00FE  3005               	movlw	5
  9417     00FF  00F2               	movwf	TXsend@size
  9418     0100  3195  2540  3180   	fcall	_TXsend
  9419                           
  9420                           ;main.c: 791:             }else{
  9421     0103  298F               	goto	i1l402
  9422     0104                     i1l6541:
  9423                           
  9424                           ;main.c: 792:             TXsend(COM, 4);
  9425     0104  30EC               	movlw	low _COM
  9426     0105  00F0               	movwf	TXsend@word
  9427     0106  3000               	movlw	high _COM
  9428     0107  00F1               	movwf	TXsend@word+1
  9429     0108  3004               	movlw	4
  9430     0109  00F2               	movwf	TXsend@size
  9431     010A  3195  2540  3180   	fcall	_TXsend
  9432     010D  298F               	goto	i1l402
  9433     010E                     i1l408:	
  9434                           ;main.c: 793:             }
  9435                           
  9436                           
  9437                           ;main.c: 794:             break;
  9438     010E  298F               	goto	i1l402
  9439     010F                     i1l6543:
  9440                           
  9441                           ;main.c: 796:             if(med_sl==1){
  9442     010F  0338               	decf	_med_sl^(0+128),w
  9443     0110  1D03               	btfss	3,2
  9444     0111  2913               	goto	u584_21
  9445     0112  2914               	goto	u584_20
  9446     0113                     u584_21:
  9447     0113  291E               	goto	i1l6547
  9448     0114                     u584_20:
  9449     0114                     i1l6545:
  9450                           
  9451                           ;main.c: 797:                TXsend(DHTS, 23);
  9452     0114  30A0               	movlw	low _DHTS
  9453     0115  00F0               	movwf	TXsend@word
  9454     0116  3001               	movlw	high _DHTS
  9455     0117  00F1               	movwf	TXsend@word+1
  9456     0118  3017               	movlw	23
  9457     0119  00F2               	movwf	TXsend@size
  9458     011A  3195  2540  3180   	fcall	_TXsend
  9459                           
  9460                           ;main.c: 798:             }else if(med_sl==2){
  9461     011D  298F               	goto	i1l402
  9462     011E                     i1l6547:
  9463     011E  3002               	movlw	2
  9464     011F  0638               	xorwf	_med_sl^(0+128),w
  9465     0120  1D03               	btfss	3,2
  9466     0121  2923               	goto	u585_21
  9467     0122  2924               	goto	u585_20
  9468     0123                     u585_21:
  9469     0123  292E               	goto	i1l6551
  9470     0124                     u585_20:
  9471     0124                     i1l6549:
  9472                           
  9473                           ;main.c: 799:                TXsend(DS18B, 12);
  9474     0124  30B7               	movlw	low _DS18B
  9475     0125  00F0               	movwf	TXsend@word
  9476     0126  3001               	movlw	high _DS18B
  9477     0127  00F1               	movwf	TXsend@word+1
  9478     0128  300C               	movlw	12
  9479     0129  00F2               	movwf	TXsend@size
  9480     012A  3195  2540  3180   	fcall	_TXsend
  9481                           
  9482                           ;main.c: 800:             }else if(med_sl==3){
  9483     012D  298F               	goto	i1l402
  9484     012E                     i1l6551:
  9485     012E  3003               	movlw	3
  9486     012F  0638               	xorwf	_med_sl^(0+128),w
  9487     0130  1D03               	btfss	3,2
  9488     0131  2933               	goto	u586_21
  9489     0132  2934               	goto	u586_20
  9490     0133                     u586_21:
  9491     0133  293E               	goto	i1l6555
  9492     0134                     u586_20:
  9493     0134                     i1l6553:
  9494                           
  9495                           ;main.c: 801:                TXsend(VEML7700, 13);
  9496     0134  3057               	movlw	low _VEML7700
  9497     0135  00F0               	movwf	TXsend@word
  9498     0136  3001               	movlw	high _VEML7700
  9499     0137  00F1               	movwf	TXsend@word+1
  9500     0138  300D               	movlw	13
  9501     0139  00F2               	movwf	TXsend@size
  9502     013A  3195  2540  3180   	fcall	_TXsend
  9503                           
  9504                           ;main.c: 802:             }else if(med_sl==4){
  9505     013D  298F               	goto	i1l402
  9506     013E                     i1l6555:
  9507     013E  3004               	movlw	4
  9508     013F  0638               	xorwf	_med_sl^(0+128),w
  9509     0140  1D03               	btfss	3,2
  9510     0141  2943               	goto	u587_21
  9511     0142  2944               	goto	u587_20
  9512     0143                     u587_21:
  9513     0143  294E               	goto	i1l6559
  9514     0144                     u587_20:
  9515     0144                     i1l6557:
  9516                           
  9517                           ;main.c: 803:                TXsend(LOAD_CELL, 16);
  9518     0144  3047               	movlw	low _LOAD_CELL
  9519     0145  00F0               	movwf	TXsend@word
  9520     0146  3001               	movlw	high _LOAD_CELL
  9521     0147  00F1               	movwf	TXsend@word+1
  9522     0148  3010               	movlw	16
  9523     0149  00F2               	movwf	TXsend@size
  9524     014A  3195  2540  3180   	fcall	_TXsend
  9525                           
  9526                           ;main.c: 804:             }else if(med_sl==5){
  9527     014D  298F               	goto	i1l402
  9528     014E                     i1l6559:
  9529     014E  3005               	movlw	5
  9530     014F  0638               	xorwf	_med_sl^(0+128),w
  9531     0150  1D03               	btfss	3,2
  9532     0151  2953               	goto	u588_21
  9533     0152  2954               	goto	u588_20
  9534     0153                     u588_21:
  9535     0153  290E               	goto	i1l408
  9536     0154                     u588_20:
  9537     0154                     i1l6561:
  9538                           
  9539                           ;main.c: 805:                TXsend(sport, 10);
  9540     0154  30BD               	movlw	low _sport
  9541     0155  00F0               	movwf	TXsend@word
  9542     0156  3000               	movlw	high _sport
  9543     0157  00F1               	movwf	TXsend@word+1
  9544     0158  300A               	movlw	10
  9545     0159  00F2               	movwf	TXsend@size
  9546     015A  3195  2540  3180   	fcall	_TXsend
  9547     015D  298F               	goto	i1l402
  9548     015E                     i1l6563:
  9549                           
  9550                           ;main.c: 809:             TXREG='}';
  9551     015E  307D               	movlw	125
  9552     015F  0023               	movlb	3	; select bank3
  9553     0160  009A               	movwf	26	;volatile
  9554                           
  9555                           ;main.c: 810:             cs=4;
  9556     0161  3004               	movlw	4
  9557     0162  0021               	movlb	1	; select bank1
  9558     0163  00BB               	movwf	_cs^(0+128)
  9559                           
  9560                           ;main.c: 811:             break;
  9561     0164  298F               	goto	i1l402
  9562     0165                     i1l6565:
  9563                           
  9564                           ;main.c: 813:             TXREG=13;
  9565     0165  300D               	movlw	13
  9566     0166  0023               	movlb	3	; select bank3
  9567     0167  009A               	movwf	26	;volatile
  9568                           
  9569                           ;main.c: 814:             cs=5;
  9570     0168  3005               	movlw	5
  9571     0169  0021               	movlb	1	; select bank1
  9572     016A  00BB               	movwf	_cs^(0+128)
  9573                           
  9574                           ;main.c: 815:             break;
  9575     016B  298F               	goto	i1l402
  9576     016C                     i1l6567:
  9577                           
  9578                           ;main.c: 817:             TXREG=10;
  9579     016C  300A               	movlw	10
  9580     016D  0023               	movlb	3	; select bank3
  9581     016E  009A               	movwf	26	;volatile
  9582     016F                     i1l6569:
  9583                           
  9584                           ;main.c: 818:             cs=0;
  9585     016F  0021               	movlb	1	; select bank1
  9586     0170  01BB               	clrf	_cs^(0+128)
  9587     0171                     i1l6571:
  9588                           
  9589                           ;main.c: 819:             PIE1bits.TXIE = 0;
  9590     0171  1211               	bcf	17,4	;volatile
  9591                           
  9592                           ;main.c: 820:             break;
  9593     0172  298F               	goto	i1l402
  9594     0173                     i1l6575:
  9595     0173  083B               	movf	_cs^(0+128),w
  9596     0174  00FA               	movwf	??_INTERRUPT_InterruptManager
  9597     0175  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9598                           
  9599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9600                           ; Switch size 1, requested type "simple"
  9601                           ; Number of cases is 1, Range of values is 0 to 0
  9602                           ; switch strategies available:
  9603                           ; Name         Instructions Cycles
  9604                           ; simple_byte            4     3 (average)
  9605                           ; direct_byte            8     6 (fixed)
  9606                           ; jumptable            260     6 (fixed)
  9607                           ;	Chosen strategy is simple_byte
  9608     0176  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9609     0177  3A00               	xorlw	0	; case 0
  9610     0178  1903               	skipnz
  9611     0179  297B               	goto	i1l6909
  9612     017A  298F               	goto	i1l402
  9613     017B                     i1l6909:
  9614                           
  9615                           ; Switch size 1, requested type "simple"
  9616                           ; Number of cases is 6, Range of values is 0 to 5
  9617                           ; switch strategies available:
  9618                           ; Name         Instructions Cycles
  9619                           ; direct_byte           18     6 (fixed)
  9620                           ; simple_byte           19    10 (average)
  9621                           ; jumptable            260     6 (fixed)
  9622                           ;	Chosen strategy is simple_byte
  9623     017B  087A               	movf	??_INTERRUPT_InterruptManager,w
  9624     017C  3A00               	xorlw	0	; case 0
  9625     017D  1903               	skipnz
  9626     017E  28ED               	goto	i1l6533
  9627     017F  3A01               	xorlw	1	; case 1
  9628     0180  1903               	skipnz
  9629     0181  28F4               	goto	i1l6537
  9630     0182  3A03               	xorlw	3	; case 2
  9631     0183  1903               	skipnz
  9632     0184  290F               	goto	i1l6543
  9633     0185  3A01               	xorlw	1	; case 3
  9634     0186  1903               	skipnz
  9635     0187  295E               	goto	i1l6563
  9636     0188  3A07               	xorlw	7	; case 4
  9637     0189  1903               	skipnz
  9638     018A  2965               	goto	i1l6565
  9639     018B  3A01               	xorlw	1	; case 5
  9640     018C  1903               	skipnz
  9641     018D  296C               	goto	i1l6567
  9642     018E  298F               	goto	i1l402
  9643     018F                     i1l402:	
  9644                           ;main.c: 823:     }
  9645                           
  9646                           
  9647                           ;main.c: 824:     if(PIR1bits.SSPIF){
  9648     018F  0020               	movlb	0	; select bank0
  9649     0190  1D91               	btfss	17,3	;volatile
  9650     0191  2993               	goto	u589_21
  9651     0192  2994               	goto	u589_20
  9652     0193                     u589_21:
  9653     0193  2A58               	goto	i1l6651
  9654     0194                     u589_20:
  9655     0194                     i1l6577:
  9656                           
  9657                           ;main.c: 825:     if(i2select==1){
  9658     0194  0021               	movlb	1	; select bank1
  9659     0195  0332               	decf	_i2select^(0+128),w
  9660     0196  1D03               	btfss	3,2
  9661     0197  2999               	goto	u590_21
  9662     0198  299A               	goto	u590_20
  9663     0199                     u590_21:
  9664     0199  29DF               	goto	i1l6607
  9665     019A                     u590_20:
  9666     019A  29AE               	goto	i1l6587
  9667     019B                     i1l6581:
  9668                           
  9669                           ;main.c: 829:          i2cwrite2byte (0x20, 0x00,0x0800);
  9670     019B  01F0               	clrf	i2cwrite2byte@dir
  9671     019C  3000               	movlw	0
  9672     019D  00F1               	movwf	i2cwrite2byte@data
  9673     019E  3008               	movlw	8
  9674     019F  00F2               	movwf	i2cwrite2byte@data+1
  9675     01A0  3020               	movlw	32
  9676     01A1  3188  2002  3180   	fcall	_i2cwrite2byte
  9677                           
  9678                           ;main.c: 830:          break;
  9679     01A4  29BE               	goto	i1l6589
  9680     01A5                     i1l6583:
  9681                           
  9682                           ;main.c: 832:          i2creadbyte (0x20, 0x04, &Lum);
  9683     01A5  3004               	movlw	4
  9684     01A6  00F0               	movwf	i2creadbyte@dir
  9685     01A7  30CB               	movlw	(low (_Lum| 0))& (0+255)
  9686     01A8  00F1               	movwf	i2creadbyte@value
  9687     01A9  3020               	movlw	32
  9688     01AA  3189  211B  3180   	fcall	_i2creadbyte
  9689                           
  9690                           ;main.c: 833:          break;
  9691     01AD  29BE               	goto	i1l6589
  9692     01AE                     i1l6587:
  9693     01AE  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9694     01AF  00FA               	movwf	??_INTERRUPT_InterruptManager
  9695     01B0  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9696                           
  9697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9698                           ; Switch size 1, requested type "simple"
  9699                           ; Number of cases is 1, Range of values is 0 to 0
  9700                           ; switch strategies available:
  9701                           ; Name         Instructions Cycles
  9702                           ; simple_byte            4     3 (average)
  9703                           ; direct_byte            8     6 (fixed)
  9704                           ; jumptable            260     6 (fixed)
  9705                           ;	Chosen strategy is simple_byte
  9706     01B1  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9707     01B2  3A00               	xorlw	0	; case 0
  9708     01B3  1903               	skipnz
  9709     01B4  29B6               	goto	i1l6911
  9710     01B5  29BE               	goto	i1l6589
  9711     01B6                     i1l6911:
  9712                           
  9713                           ; Switch size 1, requested type "simple"
  9714                           ; Number of cases is 2, Range of values is 0 to 1
  9715                           ; switch strategies available:
  9716                           ; Name         Instructions Cycles
  9717                           ; simple_byte            7     4 (average)
  9718                           ; direct_byte           10     6 (fixed)
  9719                           ; jumptable            260     6 (fixed)
  9720                           ;	Chosen strategy is simple_byte
  9721     01B6  087A               	movf	??_INTERRUPT_InterruptManager,w
  9722     01B7  3A00               	xorlw	0	; case 0
  9723     01B8  1903               	skipnz
  9724     01B9  299B               	goto	i1l6581
  9725     01BA  3A01               	xorlw	1	; case 1
  9726     01BB  1903               	skipnz
  9727     01BC  29A5               	goto	i1l6583
  9728     01BD  29BE               	goto	i1l6589
  9729     01BE                     i1l6589:
  9730                           
  9731                           ;main.c: 836:      if(endi2c && (!i2cstep)) {
  9732     01BE  0021               	movlb	1	; select bank1
  9733     01BF  0837               	movf	_endi2c^(0+128),w
  9734     01C0  1903               	btfsc	3,2
  9735     01C1  29C3               	goto	u591_21
  9736     01C2  29C4               	goto	u591_20
  9737     01C3                     u591_21:
  9738     01C3  29D1               	goto	i1l6599
  9739     01C4                     u591_20:
  9740     01C4                     i1l6591:
  9741     01C4  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9742     01C5  1D03               	btfss	3,2
  9743     01C6  29C8               	goto	u592_21
  9744     01C7  29C9               	goto	u592_20
  9745     01C8                     u592_21:
  9746     01C8  29D1               	goto	i1l6599
  9747     01C9                     u592_20:
  9748     01C9                     i1l6593:
  9749                           
  9750                           ;main.c: 837:          i2cstep++;
  9751     01C9  3001               	movlw	1
  9752     01CA  00FA               	movwf	??_INTERRUPT_InterruptManager
  9753     01CB  087A               	movf	??_INTERRUPT_InterruptManager,w
  9754     01CC  07AB               	addwf	INTERRUPT_InterruptManager@i2cstep^(0+128),f
  9755     01CD                     i1l6595:
  9756                           
  9757                           ;main.c: 838:          Lectura=1;
  9758     01CD  01B9               	clrf	_Lectura^(0+128)
  9759     01CE  0AB9               	incf	_Lectura^(0+128),f
  9760     01CF                     i1l6597:
  9761                           
  9762                           ;main.c: 839:          endi2c=0;
  9763     01CF  01B7               	clrf	_endi2c^(0+128)
  9764                           
  9765                           ;main.c: 840:      }else if(endi2c && (i2cstep)){
  9766     01D0  29DF               	goto	i1l6607
  9767     01D1                     i1l6599:
  9768     01D1  0837               	movf	_endi2c^(0+128),w
  9769     01D2  1903               	btfsc	3,2
  9770     01D3  29D5               	goto	u593_21
  9771     01D4  29D6               	goto	u593_20
  9772     01D5                     u593_21:
  9773     01D5  29DF               	goto	i1l6607
  9774     01D6                     u593_20:
  9775     01D6                     i1l6601:
  9776     01D6  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9777     01D7  1903               	btfsc	3,2
  9778     01D8  29DA               	goto	u594_21
  9779     01D9  29DB               	goto	u594_20
  9780     01DA                     u594_21:
  9781     01DA  29DF               	goto	i1l6607
  9782     01DB                     u594_20:
  9783     01DB                     i1l6603:
  9784                           
  9785                           ;main.c: 841:          i2cstep=0;
  9786     01DB  01AB               	clrf	INTERRUPT_InterruptManager@i2cstep^(0+128)
  9787                           
  9788                           ;main.c: 842:          endi2c=0;
  9789     01DC  01B7               	clrf	_endi2c^(0+128)
  9790     01DD                     i1l6605:
  9791                           
  9792                           ;main.c: 843:          i2cfinish=1;
  9793     01DD  01B5               	clrf	_i2cfinish^(0+128)
  9794     01DE  0AB5               	incf	_i2cfinish^(0+128),f
  9795     01DF                     i1l6607:
  9796                           
  9797                           ;main.c: 846:     if(i2select==2){
  9798     01DF  3002               	movlw	2
  9799     01E0  0632               	xorwf	_i2select^(0+128),w
  9800     01E1  1D03               	btfss	3,2
  9801     01E2  29E4               	goto	u595_21
  9802     01E3  29E5               	goto	u595_20
  9803     01E4                     u595_21:
  9804     01E4  2A56               	goto	i1l6649
  9805     01E5                     u595_20:
  9806     01E5  2A1D               	goto	i1l6625
  9807     01E6                     i1l6611:
  9808                           
  9809                           ;main.c: 850:          i2cwrite2byte (0x2A<<1, 0x00,0x2706);
  9810     01E6  01F0               	clrf	i2cwrite2byte@dir
  9811     01E7  3006               	movlw	6
  9812     01E8  00F1               	movwf	i2cwrite2byte@data
  9813     01E9  3027               	movlw	39
  9814     01EA  00F2               	movwf	i2cwrite2byte@data+1
  9815     01EB  3054               	movlw	84
  9816     01EC  3188  2002  3180   	fcall	_i2cwrite2byte
  9817                           
  9818                           ;main.c: 851:          break;
  9819     01EF  2A39               	goto	i1l6627
  9820     01F0                     i1l6613:
  9821                           
  9822                           ;main.c: 853:          i2cwritebyte (0x2A<<1, 0x02,0x30);
  9823     01F0  3002               	movlw	2
  9824     01F1  00F0               	movwf	i2cwritebyte@dir
  9825     01F2  3030               	movlw	48
  9826     01F3  00F1               	movwf	i2cwritebyte@data
  9827     01F4  3054               	movlw	84
  9828     01F5  3187  27C2  3180   	fcall	_i2cwritebyte
  9829                           
  9830                           ;main.c: 854:          break;
  9831     01F8  2A39               	goto	i1l6627
  9832     01F9                     i1l6615:
  9833                           
  9834                           ;main.c: 856:          i2cwritebyte (0x2A<<1, 0x11,0x51);
  9835     01F9  3011               	movlw	17
  9836     01FA  00F0               	movwf	i2cwritebyte@dir
  9837     01FB  3051               	movlw	81
  9838     01FC  00F1               	movwf	i2cwritebyte@data
  9839     01FD  3054               	movlw	84
  9840     01FE  3187  27C2  3180   	fcall	_i2cwritebyte
  9841                           
  9842                           ;main.c: 857:          break;
  9843     0201  2A39               	goto	i1l6627
  9844     0202                     i1l6617:
  9845                           
  9846                           ;main.c: 859:          i2cwritebyte (0x2A<<1, 0x15,0x30);
  9847     0202  3015               	movlw	21
  9848     0203  00F0               	movwf	i2cwritebyte@dir
  9849     0204  3030               	movlw	48
  9850     0205  00F1               	movwf	i2cwritebyte@data
  9851     0206  3054               	movlw	84
  9852     0207  3187  27C2  3180   	fcall	_i2cwritebyte
  9853                           
  9854                           ;main.c: 860:          break;
  9855     020A  2A39               	goto	i1l6627
  9856     020B                     i1l6619:
  9857                           
  9858                           ;main.c: 862:          i2cwritebyte (0x2A<<1, 0x1C,0x80);
  9859     020B  301C               	movlw	28
  9860     020C  00F0               	movwf	i2cwritebyte@dir
  9861     020D  3080               	movlw	128
  9862     020E  00F1               	movwf	i2cwritebyte@data
  9863     020F  3054               	movlw	84
  9864     0210  3187  27C2  3180   	fcall	_i2cwritebyte
  9865                           
  9866                           ;main.c: 863:          break;
  9867     0213  2A39               	goto	i1l6627
  9868     0214                     i1l6621:
  9869                           
  9870                           ;main.c: 865:          i2cread3byte (0x2A<<1, 0x12, &weight);
  9871     0214  3012               	movlw	18
  9872     0215  00F0               	movwf	i2cread3byte@dir
  9873     0216  3041               	movlw	(low (_weight| (0+256)))& (0+255)
  9874     0217  00F1               	movwf	i2cread3byte@value
  9875     0218  3054               	movlw	84
  9876     0219  318A  22C6  3180   	fcall	_i2cread3byte
  9877                           
  9878                           ;main.c: 866:          break;
  9879     021C  2A39               	goto	i1l6627
  9880     021D                     i1l6625:
  9881     021D  082B               	movf	INTERRUPT_InterruptManager@i2cstep^(0+128),w
  9882     021E  00FA               	movwf	??_INTERRUPT_InterruptManager
  9883     021F  01FB               	clrf	??_INTERRUPT_InterruptManager+1
  9884                           
  9885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9886                           ; Switch size 1, requested type "simple"
  9887                           ; Number of cases is 1, Range of values is 0 to 0
  9888                           ; switch strategies available:
  9889                           ; Name         Instructions Cycles
  9890                           ; simple_byte            4     3 (average)
  9891                           ; direct_byte            8     6 (fixed)
  9892                           ; jumptable            260     6 (fixed)
  9893                           ;	Chosen strategy is simple_byte
  9894     0220  087B               	movf	??_INTERRUPT_InterruptManager+1,w
  9895     0221  3A00               	xorlw	0	; case 0
  9896     0222  1903               	skipnz
  9897     0223  2A25               	goto	i1l6913
  9898     0224  2A39               	goto	i1l6627
  9899     0225                     i1l6913:
  9900                           
  9901                           ; Switch size 1, requested type "simple"
  9902                           ; Number of cases is 6, Range of values is 0 to 5
  9903                           ; switch strategies available:
  9904                           ; Name         Instructions Cycles
  9905                           ; direct_byte           18     6 (fixed)
  9906                           ; simple_byte           19    10 (average)
  9907                           ; jumptable            260     6 (fixed)
  9908                           ;	Chosen strategy is simple_byte
  9909     0225  087A               	movf	??_INTERRUPT_InterruptManager,w
  9910     0226  3A00               	xorlw	0	; case 0
  9911     0227  1903               	skipnz
  9912     0228  29E6               	goto	i1l6611
  9913     0229  3A01               	xorlw	1	; case 1
  9914     022A  1903               	skipnz
  9915     022B  29F0               	goto	i1l6613
  9916     022C  3A03               	xorlw	3	; case 2
  9917     022D  1903               	skipnz
  9918     022E  29F9               	goto	i1l6615
  9919     022F  3A01               	xorlw	1	; case 3
  9920     0230  1903               	skipnz
  9921     0231  2A02               	goto	i1l6617
  9922     0232  3A07               	xorlw	7	; case 4
  9923     0233  1903               	skipnz
  9924     0234  2A0B               	goto	i1l6619
  9925     0235  3A01               	xorlw	1	; case 5
  9926     0236  1903               	skipnz
  9927     0237  2A14               	goto	i1l6621
  9928     0238  2A39               	goto	i1l6627
  9929     0239                     i1l6627:
  9930                           
  9931                           ;main.c: 870:      if(endi2c ==1) {
  9932     0239  0021               	movlb	1	; select bank1
  9933     023A  0337               	decf	_endi2c^(0+128),w
  9934     023B  1D03               	btfss	3,2
  9935     023C  2A3E               	goto	u596_21
  9936     023D  2A3F               	goto	u596_20
  9937     023E                     u596_21:
  9938     023E  2A46               	goto	i1l6635
  9939     023F                     u596_20:
  9940     023F                     i1l6629:
  9941                           
  9942                           ;main.c: 871:          i2cstep++;
  9943     023F  3001               	movlw	1
  9944     0240  00FA               	movwf	??_INTERRUPT_InterruptManager
  9945     0241  087A               	movf	??_INTERRUPT_InterruptManager,w
  9946     0242  07AB               	addwf	INTERRUPT_InterruptManager@i2cstep^(0+128),f
  9947     0243                     i1l6631:
  9948                           
  9949                           ;main.c: 872:          Lectura=1;
  9950     0243  01B9               	clrf	_Lectura^(0+128)
  9951     0244  0AB9               	incf	_Lectura^(0+128),f
  9952     0245                     i1l6633:
  9953                           
  9954                           ;main.c: 873:          endi2c=0;
  9955     0245  01B7               	clrf	_endi2c^(0+128)
  9956     0246                     i1l6635:
  9957     0246  3002               	movlw	2
  9958     0247  0637               	xorwf	_endi2c^(0+128),w
  9959     0248  1D03               	btfss	3,2
  9960     0249  2A4B               	goto	u597_21
  9961     024A  2A4C               	goto	u597_20
  9962     024B                     u597_21:
  9963     024B  2A56               	goto	i1l6649
  9964     024C                     u597_20:
  9965     024C                     i1l6637:
  9966                           
  9967                           ;main.c: 875:          i2cstep=0;
  9968     024C  01AB               	clrf	INTERRUPT_InterruptManager@i2cstep^(0+128)
  9969                           
  9970                           ;main.c: 876:          endi2c=0;
  9971     024D  01B7               	clrf	_endi2c^(0+128)
  9972     024E                     i1l6639:
  9973                           
  9974                           ;main.c: 877:          med_sl=5, COM[1]=48, PIE1bits.TXIE = 1;
  9975     024E  3005               	movlw	5
  9976     024F  00B8               	movwf	_med_sl^(0+128)
  9977     0250                     i1l6641:
  9978     0250  3030               	movlw	48
  9979     0251  00ED               	movwf	(_COM^(0+128)+1)
  9980     0252                     i1l6643:
  9981     0252  1611               	bsf	17,4	;volatile
  9982     0253                     i1l6645:
  9983                           
  9984                           ;main.c: 878:          i2cfinish=1;
  9985     0253  01B5               	clrf	_i2cfinish^(0+128)
  9986     0254  0AB5               	incf	_i2cfinish^(0+128),f
  9987     0255                     i1l6647:
  9988                           
  9989                           ;main.c: 879:          PIE1bits.SSPIE = 0;
  9990     0255  1191               	bcf	17,3	;volatile
  9991     0256                     i1l6649:
  9992                           
  9993                           ;main.c: 882:     PIR1bits.SSPIF = 0;
  9994     0256  0020               	movlb	0	; select bank0
  9995     0257  1191               	bcf	17,3	;volatile
  9996     0258                     i1l6651:
  9997                           
  9998                           ;main.c: 884:     if (TMR2IF || TMR2>100)
  9999     0258  1891               	btfsc	17,1	;volatile
 10000     0259  2A5B               	goto	u598_21
 10001     025A  2A5C               	goto	u598_20
 10002     025B                     u598_21:
 10003     025B  2A62               	goto	i1l444
 10004     025C                     u598_20:
 10005     025C                     i1l6653:
 10006     025C  3065               	movlw	101
 10007     025D  021A               	subwf	26,w	;volatile
 10008     025E  1C03               	skipc
 10009     025F  2A61               	goto	u599_21
 10010     0260  2A62               	goto	u599_20
 10011     0261                     u599_21:
 10012     0261  2A69               	goto	i1l445
 10013     0262                     u599_20:
 10014     0262                     i1l444:
 10015                           
 10016                           ;main.c: 885:     { TOUT = 1;
 10017     0262  0021               	movlb	1	; select bank1
 10018     0263  01BA               	clrf	_TOUT^(0+128)
 10019     0264  0ABA               	incf	_TOUT^(0+128),f
 10020     0265                     i1l6655:
 10021                           
 10022                           ;main.c: 886:       TMR2 = 0;
 10023     0265  0020               	movlb	0	; select bank0
 10024     0266  019A               	clrf	26	;volatile
 10025     0267                     i1l6657:
 10026                           
 10027                           ;main.c: 887:       TMR2ON = 0;
 10028     0267  111C               	bcf	28,2	;volatile
 10029     0268                     i1l6659:
 10030                           
 10031                           ;main.c: 888:       TMR2IF = 0;
 10032     0268  1091               	bcf	17,1	;volatile
 10033     0269                     i1l445:
 10034     0269  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10035     026A  0009               	retfie
 10036     026B                     __end_of_INTERRUPT_InterruptManager:
 10037                           
 10038                           	psect	text29
 10039     07C2                     __ptext29:	
 10040 ;; *************** function _i2cwritebyte *****************
 10041 ;; Defined at:
 10042 ;;		line 172 in file "main.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  add             1    wreg     unsigned char 
 10045 ;;  dir             1    0[COMMON] unsigned char 
 10046 ;;  data            1    1[COMMON] unsigned char 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  add             1    4[COMMON] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10058 ;;      Params:         2       0       0       0       0       0       0       0
 10059 ;;      Locals:         1       0       0       0       0       0       0       0
 10060 ;;      Temps:          2       0       0       0       0       0       0       0
 10061 ;;      Totals:         5       0       0       0       0       0       0       0
 10062 ;;Total ram usage:        5 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_INTERRUPT_InterruptManager
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071     07C2                     _i2cwritebyte:	
 10072                           ;psect for function _i2cwritebyte
 10073                           
 10074                           
 10075                           ;incstack = 0
 10076                           ; Regs used in _i2cwritebyte: [wreg-fsr0h+status,2+status,0]
 10077                           ;i2cwritebyte@add stored from wreg
 10078     07C2  00F4               	movwf	i2cwritebyte@add
 10079     07C3                     i1l3965:
 10080                           
 10081                           ;main.c: 173:    static char si3=0;;main.c: 174:     switch (si3){
 10082     07C3  2FE3               	goto	i1l3987
 10083     07C4                     i1l3967:
 10084                           
 10085                           ;main.c: 176:         SSPBUF = add;
 10086     07C4  0874               	movf	i2cwritebyte@add,w
 10087     07C5  0024               	movlb	4	; select bank4
 10088     07C6  0091               	movwf	17	;volatile
 10089     07C7                     i1l3969:
 10090                           
 10091                           ;main.c: 177:         si3=1;
 10092     07C7  0021               	movlb	1	; select bank1
 10093     07C8  01AE               	clrf	i2cwritebyte@si3^(0+128)
 10094     07C9  0AAE               	incf	i2cwritebyte@si3^(0+128),f
 10095                           
 10096                           ;main.c: 178:         break;
 10097     07CA  2FFD               	goto	i1l215
 10098     07CB                     i1l3971:
 10099                           
 10100                           ;main.c: 180:         SSPBUF = dir;
 10101     07CB  0870               	movf	i2cwritebyte@dir,w
 10102     07CC  0024               	movlb	4	; select bank4
 10103     07CD  0091               	movwf	17	;volatile
 10104                           
 10105                           ;main.c: 181:         si3=2;
 10106     07CE  3002               	movlw	2
 10107     07CF  0021               	movlb	1	; select bank1
 10108     07D0  00AE               	movwf	i2cwritebyte@si3^(0+128)
 10109                           
 10110                           ;main.c: 182:         break;
 10111     07D1  2FFD               	goto	i1l215
 10112     07D2                     i1l3973:
 10113                           
 10114                           ;main.c: 184:         SSPBUF = data;
 10115     07D2  0871               	movf	i2cwritebyte@data,w
 10116     07D3  0024               	movlb	4	; select bank4
 10117     07D4  0091               	movwf	17	;volatile
 10118                           
 10119                           ;main.c: 185:         si3=3;
 10120     07D5  3003               	movlw	3
 10121     07D6  0021               	movlb	1	; select bank1
 10122     07D7  00AE               	movwf	i2cwritebyte@si3^(0+128)
 10123                           
 10124                           ;main.c: 186:         break;
 10125     07D8  2FFD               	goto	i1l215
 10126     07D9                     i1l3975:
 10127                           
 10128                           ;main.c: 188:         si3=4;
 10129     07D9  3004               	movlw	4
 10130     07DA  00AE               	movwf	i2cwritebyte@si3^(0+128)
 10131     07DB                     i1l3977:
 10132                           
 10133                           ;main.c: 189:         SSPCON2bits.PEN = 1;
 10134     07DB  0024               	movlb	4	; select bank4
 10135     07DC  1516               	bsf	22,2	;volatile
 10136                           
 10137                           ;main.c: 190:         break;
 10138     07DD  2FFD               	goto	i1l215
 10139     07DE                     i1l3979:
 10140                           
 10141                           ;main.c: 192:         si3=0;
 10142     07DE  01AE               	clrf	i2cwritebyte@si3^(0+128)
 10143     07DF                     i1l3981:
 10144                           
 10145                           ;main.c: 193:         PIE1bits.SSPIE = 0;
 10146     07DF  1191               	bcf	17,3	;volatile
 10147     07E0                     i1l3983:
 10148                           
 10149                           ;main.c: 194:         endi2c=1;
 10150     07E0  01B7               	clrf	_endi2c^(0+128)
 10151     07E1  0AB7               	incf	_endi2c^(0+128),f
 10152                           
 10153                           ;main.c: 195:         break;
 10154     07E2  2FFD               	goto	i1l215
 10155     07E3                     i1l3987:
 10156     07E3  0021               	movlb	1	; select bank1
 10157     07E4  082E               	movf	i2cwritebyte@si3^(0+128),w
 10158     07E5  00F2               	movwf	??_i2cwritebyte
 10159     07E6  01F3               	clrf	??_i2cwritebyte+1
 10160                           
 10161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10162                           ; Switch size 1, requested type "simple"
 10163                           ; Number of cases is 1, Range of values is 0 to 0
 10164                           ; switch strategies available:
 10165                           ; Name         Instructions Cycles
 10166                           ; simple_byte            4     3 (average)
 10167                           ; direct_byte            8     6 (fixed)
 10168                           ; jumptable            260     6 (fixed)
 10169                           ;	Chosen strategy is simple_byte
 10170     07E7  0873               	movf	??_i2cwritebyte+1,w
 10171     07E8  3A00               	xorlw	0	; case 0
 10172     07E9  1903               	skipnz
 10173     07EA  2FEC               	goto	i1l6915
 10174     07EB  2FFD               	goto	i1l215
 10175     07EC                     i1l6915:
 10176                           
 10177                           ; Switch size 1, requested type "simple"
 10178                           ; Number of cases is 5, Range of values is 0 to 4
 10179                           ; switch strategies available:
 10180                           ; Name         Instructions Cycles
 10181                           ; direct_byte           16     6 (fixed)
 10182                           ; simple_byte           16     9 (average)
 10183                           ; jumptable            260     6 (fixed)
 10184                           ;	Chosen strategy is simple_byte
 10185     07EC  0872               	movf	??_i2cwritebyte,w
 10186     07ED  3A00               	xorlw	0	; case 0
 10187     07EE  1903               	skipnz
 10188     07EF  2FC4               	goto	i1l3967
 10189     07F0  3A01               	xorlw	1	; case 1
 10190     07F1  1903               	skipnz
 10191     07F2  2FCB               	goto	i1l3971
 10192     07F3  3A03               	xorlw	3	; case 2
 10193     07F4  1903               	skipnz
 10194     07F5  2FD2               	goto	i1l3973
 10195     07F6  3A01               	xorlw	1	; case 3
 10196     07F7  1903               	skipnz
 10197     07F8  2FD9               	goto	i1l3975
 10198     07F9  3A07               	xorlw	7	; case 4
 10199     07FA  1903               	skipnz
 10200     07FB  2FDE               	goto	i1l3979
 10201     07FC  2FFD               	goto	i1l215
 10202     07FD                     i1l215:
 10203     07FD  0008               	return
 10204     07FE                     __end_of_i2cwritebyte:
 10205                           
 10206                           	psect	text30
 10207     0802                     __ptext30:	
 10208 ;; *************** function _i2cwrite2byte *****************
 10209 ;; Defined at:
 10210 ;;		line 138 in file "main.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  add             1    wreg     unsigned char 
 10213 ;;  dir             1    0[COMMON] unsigned char 
 10214 ;;  data            2    1[COMMON] unsigned int 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  add             1    5[COMMON] unsigned char 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10226 ;;      Params:         3       0       0       0       0       0       0       0
 10227 ;;      Locals:         1       0       0       0       0       0       0       0
 10228 ;;      Temps:          2       0       0       0       0       0       0       0
 10229 ;;      Totals:         6       0       0       0       0       0       0       0
 10230 ;;Total ram usage:        6 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_INTERRUPT_InterruptManager
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239     0802                     _i2cwrite2byte:	
 10240                           ;psect for function _i2cwrite2byte
 10241                           
 10242                           
 10243                           ;incstack = 0
 10244                           ; Regs used in _i2cwrite2byte: [wreg-fsr0h+status,2+status,0]
 10245                           ;i2cwrite2byte@add stored from wreg
 10246     0802  00F5               	movwf	i2cwrite2byte@add
 10247     0803                     i1l3933:
 10248                           
 10249                           ;main.c: 139:    static char si3=0;;main.c: 140:     switch (si3){
 10250     0803  282A               	goto	i1l3959
 10251     0804                     i1l3935:
 10252                           
 10253                           ;main.c: 142:         SSPBUF = add;
 10254     0804  0875               	movf	i2cwrite2byte@add,w
 10255     0805  0024               	movlb	4	; select bank4
 10256     0806  0091               	movwf	17	;volatile
 10257     0807                     i1l3937:
 10258                           
 10259                           ;main.c: 143:         si3=1;
 10260     0807  0021               	movlb	1	; select bank1
 10261     0808  01AF               	clrf	i2cwrite2byte@si3^(0+128)
 10262     0809  0AAF               	incf	i2cwrite2byte@si3^(0+128),f
 10263                           
 10264                           ;main.c: 144:         break;
 10265     080A  2847               	goto	i1l203
 10266     080B                     i1l3939:
 10267                           
 10268                           ;main.c: 146:         SSPBUF = dir;
 10269     080B  0870               	movf	i2cwrite2byte@dir,w
 10270     080C  0024               	movlb	4	; select bank4
 10271     080D  0091               	movwf	17	;volatile
 10272                           
 10273                           ;main.c: 147:         si3=2;
 10274     080E  3002               	movlw	2
 10275     080F  0021               	movlb	1	; select bank1
 10276     0810  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10277                           
 10278                           ;main.c: 148:         break;
 10279     0811  2847               	goto	i1l203
 10280     0812                     i1l3941:
 10281                           
 10282                           ;main.c: 150:         SSPBUF = (unsigned char)(data & 0x00FF);
 10283     0812  0871               	movf	i2cwrite2byte@data,w
 10284     0813  0024               	movlb	4	; select bank4
 10285     0814  0091               	movwf	17	;volatile
 10286                           
 10287                           ;main.c: 151:         si3=3;
 10288     0815  3003               	movlw	3
 10289     0816  0021               	movlb	1	; select bank1
 10290     0817  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10291                           
 10292                           ;main.c: 152:         break;
 10293     0818  2847               	goto	i1l203
 10294     0819                     i1l3943:
 10295                           
 10296                           ;main.c: 154:         SSPBUF = (unsigned char)(data >> 8);
 10297     0819  0872               	movf	i2cwrite2byte@data+1,w
 10298     081A  0024               	movlb	4	; select bank4
 10299     081B  0091               	movwf	17	;volatile
 10300     081C                     i1l3945:
 10301                           
 10302                           ;main.c: 155:         si3=4;
 10303     081C  3004               	movlw	4
 10304     081D  0021               	movlb	1	; select bank1
 10305     081E  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10306                           
 10307                           ;main.c: 156:         break;
 10308     081F  2847               	goto	i1l203
 10309     0820                     i1l3947:
 10310                           
 10311                           ;main.c: 158:         si3=5;
 10312     0820  3005               	movlw	5
 10313     0821  00AF               	movwf	i2cwrite2byte@si3^(0+128)
 10314     0822                     i1l3949:
 10315                           
 10316                           ;main.c: 159:         SSPCON2bits.PEN = 1;
 10317     0822  0024               	movlb	4	; select bank4
 10318     0823  1516               	bsf	22,2	;volatile
 10319                           
 10320                           ;main.c: 160:         break;
 10321     0824  2847               	goto	i1l203
 10322     0825                     i1l3951:
 10323                           
 10324                           ;main.c: 162:         si3=0;
 10325     0825  01AF               	clrf	i2cwrite2byte@si3^(0+128)
 10326     0826                     i1l3953:
 10327                           
 10328                           ;main.c: 163:         PIE1bits.SSPIE = 0;
 10329     0826  1191               	bcf	17,3	;volatile
 10330     0827                     i1l3955:
 10331                           
 10332                           ;main.c: 164:         endi2c=1;
 10333     0827  01B7               	clrf	_endi2c^(0+128)
 10334     0828  0AB7               	incf	_endi2c^(0+128),f
 10335                           
 10336                           ;main.c: 165:         break;
 10337     0829  2847               	goto	i1l203
 10338     082A                     i1l3959:
 10339     082A  0021               	movlb	1	; select bank1
 10340     082B  082F               	movf	i2cwrite2byte@si3^(0+128),w
 10341     082C  00F3               	movwf	??_i2cwrite2byte
 10342     082D  01F4               	clrf	??_i2cwrite2byte+1
 10343                           
 10344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10345                           ; Switch size 1, requested type "simple"
 10346                           ; Number of cases is 1, Range of values is 0 to 0
 10347                           ; switch strategies available:
 10348                           ; Name         Instructions Cycles
 10349                           ; simple_byte            4     3 (average)
 10350                           ; direct_byte            8     6 (fixed)
 10351                           ; jumptable            260     6 (fixed)
 10352                           ;	Chosen strategy is simple_byte
 10353     082E  0874               	movf	??_i2cwrite2byte+1,w
 10354     082F  3A00               	xorlw	0	; case 0
 10355     0830  1903               	skipnz
 10356     0831  2833               	goto	i1l6917
 10357     0832  2847               	goto	i1l203
 10358     0833                     i1l6917:
 10359                           
 10360                           ; Switch size 1, requested type "simple"
 10361                           ; Number of cases is 6, Range of values is 0 to 5
 10362                           ; switch strategies available:
 10363                           ; Name         Instructions Cycles
 10364                           ; direct_byte           18     6 (fixed)
 10365                           ; simple_byte           19    10 (average)
 10366                           ; jumptable            260     6 (fixed)
 10367                           ;	Chosen strategy is simple_byte
 10368     0833  0873               	movf	??_i2cwrite2byte,w
 10369     0834  3A00               	xorlw	0	; case 0
 10370     0835  1903               	skipnz
 10371     0836  2804               	goto	i1l3935
 10372     0837  3A01               	xorlw	1	; case 1
 10373     0838  1903               	skipnz
 10374     0839  280B               	goto	i1l3939
 10375     083A  3A03               	xorlw	3	; case 2
 10376     083B  1903               	skipnz
 10377     083C  2812               	goto	i1l3941
 10378     083D  3A01               	xorlw	1	; case 3
 10379     083E  1903               	skipnz
 10380     083F  2819               	goto	i1l3943
 10381     0840  3A07               	xorlw	7	; case 4
 10382     0841  1903               	skipnz
 10383     0842  2820               	goto	i1l3947
 10384     0843  3A01               	xorlw	1	; case 5
 10385     0844  1903               	skipnz
 10386     0845  2825               	goto	i1l3951
 10387     0846  2847               	goto	i1l203
 10388     0847                     i1l203:
 10389     0847  0008               	return
 10390     0848                     __end_of_i2cwrite2byte:
 10391                           
 10392                           	psect	text31
 10393     091B                     __ptext31:	
 10394 ;; *************** function _i2creadbyte *****************
 10395 ;; Defined at:
 10396 ;;		line 200 in file "main.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  add             1    wreg     unsigned char 
 10399 ;;  dir             1    0[COMMON] unsigned char 
 10400 ;;  value           1    1[COMMON] PTR unsigned int 
 10401 ;;		 -> Lum(2), 
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;  add             1    5[COMMON] unsigned char 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  2    0[COMMON] unsigned int 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10413 ;;      Params:         2       0       0       0       0       0       0       0
 10414 ;;      Locals:         1       0       0       0       0       0       0       0
 10415 ;;      Temps:          3       0       0       0       0       0       0       0
 10416 ;;      Totals:         6       0       0       0       0       0       0       0
 10417 ;;Total ram usage:        6 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_INTERRUPT_InterruptManager
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426     091B                     _i2creadbyte:	
 10427                           ;psect for function _i2creadbyte
 10428                           
 10429                           
 10430                           ;incstack = 0
 10431                           ; Regs used in _i2creadbyte: [wreg-fsr1h+status,2+status,0]
 10432                           ;i2creadbyte@add stored from wreg
 10433     091B  00F5               	movwf	i2creadbyte@add
 10434     091C                     i1l3993:
 10435                           
 10436                           ;main.c: 201:    static char si2=0;;main.c: 202:     switch (si2){
 10437     091C  2975               	goto	i1l4043
 10438     091D                     i1l3995:
 10439                           
 10440                           ;main.c: 204:         SSPBUF = add;
 10441     091D  0875               	movf	i2creadbyte@add,w
 10442     091E  0024               	movlb	4	; select bank4
 10443     091F  0091               	movwf	17	;volatile
 10444     0920                     i1l3997:
 10445                           
 10446                           ;main.c: 205:         si2=1;
 10447     0920  0021               	movlb	1	; select bank1
 10448     0921  01AD               	clrf	i2creadbyte@si2^(0+128)
 10449     0922  0AAD               	incf	i2creadbyte@si2^(0+128),f
 10450                           
 10451                           ;main.c: 206:         break;
 10452     0923  299E               	goto	i1l232
 10453     0924                     i1l3999:
 10454                           
 10455                           ;main.c: 208:         SSPBUF = dir;
 10456     0924  0870               	movf	i2creadbyte@dir,w
 10457     0925  0024               	movlb	4	; select bank4
 10458     0926  0091               	movwf	17	;volatile
 10459                           
 10460                           ;main.c: 209:         si2=2;
 10461     0927  3002               	movlw	2
 10462     0928  0021               	movlb	1	; select bank1
 10463     0929  00AD               	movwf	i2creadbyte@si2^(0+128)
 10464                           
 10465                           ;main.c: 210:         break;
 10466     092A  299E               	goto	i1l232
 10467     092B                     i1l224:	
 10468                           ;main.c: 211:             case 2:
 10469                           
 10470                           
 10471                           ;main.c: 212:         SSPCON2bits.RSEN = 1;
 10472     092B  0024               	movlb	4	; select bank4
 10473     092C  1496               	bsf	22,1	;volatile
 10474     092D                     i1l4001:
 10475                           
 10476                           ;main.c: 213:         si2=3;
 10477     092D  3003               	movlw	3
 10478     092E  0021               	movlb	1	; select bank1
 10479     092F  00AD               	movwf	i2creadbyte@si2^(0+128)
 10480                           
 10481                           ;main.c: 214:         break;
 10482     0930  299E               	goto	i1l232
 10483     0931                     i1l4003:
 10484                           
 10485                           ;main.c: 216:         SSPBUF = add | 0x01;
 10486     0931  0875               	movf	i2creadbyte@add,w
 10487     0932  3801               	iorlw	1
 10488     0933  0024               	movlb	4	; select bank4
 10489     0934  0091               	movwf	17	;volatile
 10490     0935                     i1l4005:
 10491                           
 10492                           ;main.c: 217:         si2=4;
 10493     0935  3004               	movlw	4
 10494     0936  0021               	movlb	1	; select bank1
 10495     0937  00AD               	movwf	i2creadbyte@si2^(0+128)
 10496                           
 10497                           ;main.c: 218:         break;
 10498     0938  299E               	goto	i1l232
 10499     0939                     i1l4007:
 10500                           
 10501                           ;main.c: 220:         si2=5;
 10502     0939  3005               	movlw	5
 10503     093A  00AD               	movwf	i2creadbyte@si2^(0+128)
 10504     093B                     i1l4009:
 10505                           
 10506                           ;main.c: 221:         SSPCON2bits.RCEN = 1;
 10507     093B  0024               	movlb	4	; select bank4
 10508     093C  1596               	bsf	22,3	;volatile
 10509                           
 10510                           ;main.c: 222:         break;
 10511     093D  299E               	goto	i1l232
 10512     093E                     i1l4011:
 10513                           
 10514                           ;main.c: 224:         *value = SSPBUF;
 10515     093E  0024               	movlb	4	; select bank4
 10516     093F  0811               	movf	17,w	;volatile
 10517     0940  00F2               	movwf	??_i2creadbyte
 10518     0941  01F3               	clrf	??_i2creadbyte+1
 10519     0942  0871               	movf	i2creadbyte@value,w
 10520     0943  0086               	movwf	6
 10521     0944  0187               	clrf	7
 10522     0945  0872               	movf	??_i2creadbyte,w
 10523     0946  3FC0               	movwi [0]fsr1
 10524     0947  0873               	movf	??_i2creadbyte+1,w
 10525     0948  3FC1               	movwi [1]fsr1
 10526     0949                     i1l4013:
 10527                           
 10528                           ;main.c: 225:         si2=6;
 10529     0949  3006               	movlw	6
 10530     094A  0021               	movlb	1	; select bank1
 10531     094B  00AD               	movwf	i2creadbyte@si2^(0+128)
 10532     094C                     i1l4015:
 10533                           
 10534                           ;main.c: 226:         SSPCON2bits.ACKDT = 0;
 10535     094C  0024               	movlb	4	; select bank4
 10536     094D  1296               	bcf	22,5	;volatile
 10537     094E                     i1l4017:
 10538                           
 10539                           ;main.c: 227:         SSPCON2bits.ACKEN = 1;
 10540     094E  1616               	bsf	22,4	;volatile
 10541                           
 10542                           ;main.c: 228:         break;
 10543     094F  299E               	goto	i1l232
 10544     0950                     i1l4019:
 10545                           
 10546                           ;main.c: 230:         si2=7;
 10547     0950  3007               	movlw	7
 10548     0951  00AD               	movwf	i2creadbyte@si2^(0+128)
 10549     0952                     i1l4021:
 10550                           
 10551                           ;main.c: 231:         SSPCON2bits.RCEN = 1;
 10552     0952  0024               	movlb	4	; select bank4
 10553     0953  1596               	bsf	22,3	;volatile
 10554                           
 10555                           ;main.c: 232:         break;
 10556     0954  299E               	goto	i1l232
 10557     0955                     i1l4023:
 10558                           
 10559                           ;main.c: 234:         *value |= SSPBUF<<8;
 10560     0955  0024               	movlb	4	; select bank4
 10561     0956  0811               	movf	17,w	;volatile
 10562     0957  00F2               	movwf	??_i2creadbyte
 10563     0958  01F3               	clrf	??_i2creadbyte+1
 10564     0959  0872               	movf	??_i2creadbyte,w
 10565     095A  00F3               	movwf	??_i2creadbyte+1
 10566     095B  01F2               	clrf	??_i2creadbyte
 10567     095C  0871               	movf	i2creadbyte@value,w
 10568     095D  0086               	movwf	6
 10569     095E  0187               	clrf	7
 10570     095F  0872               	movf	??_i2creadbyte,w
 10571     0960  0481               	iorwf	1,f
 10572     0961  3141               	addfsr 1,1
 10573     0962  0873               	movf	??_i2creadbyte+1,w
 10574     0963  0481               	iorwf	1,f
 10575     0964                     i1l4025:
 10576                           
 10577                           ;main.c: 235:         si2=8;
 10578     0964  3008               	movlw	8
 10579     0965  0021               	movlb	1	; select bank1
 10580     0966  00AD               	movwf	i2creadbyte@si2^(0+128)
 10581     0967                     i1l4027:
 10582                           
 10583                           ;main.c: 236:         SSPCON2bits.ACKDT = 1;
 10584     0967  0024               	movlb	4	; select bank4
 10585     0968  1696               	bsf	22,5	;volatile
 10586     0969                     i1l4029:
 10587                           
 10588                           ;main.c: 237:         SSPCON2bits.ACKEN = 1;
 10589     0969  1616               	bsf	22,4	;volatile
 10590                           
 10591                           ;main.c: 238:         break;
 10592     096A  299E               	goto	i1l232
 10593     096B                     i1l4031:
 10594                           
 10595                           ;main.c: 240:         si2=9;
 10596     096B  3009               	movlw	9
 10597     096C  00AD               	movwf	i2creadbyte@si2^(0+128)
 10598     096D                     i1l4033:
 10599                           
 10600                           ;main.c: 241:         SSPCON2bits.PEN = 1;
 10601     096D  0024               	movlb	4	; select bank4
 10602     096E  1516               	bsf	22,2	;volatile
 10603                           
 10604                           ;main.c: 242:         break;
 10605     096F  299E               	goto	i1l232
 10606     0970                     i1l4035:
 10607                           
 10608                           ;main.c: 244:         si2=0;
 10609     0970  01AD               	clrf	i2creadbyte@si2^(0+128)
 10610     0971                     i1l4037:
 10611                           
 10612                           ;main.c: 245:         PIE1bits.SSPIE = 0;
 10613     0971  1191               	bcf	17,3	;volatile
 10614     0972                     i1l4039:
 10615                           
 10616                           ;main.c: 246:         endi2c=1;
 10617     0972  01B7               	clrf	_endi2c^(0+128)
 10618     0973  0AB7               	incf	_endi2c^(0+128),f
 10619                           
 10620                           ;main.c: 247:         break;
 10621     0974  299E               	goto	i1l232
 10622     0975                     i1l4043:
 10623     0975  0021               	movlb	1	; select bank1
 10624     0976  082D               	movf	i2creadbyte@si2^(0+128),w
 10625     0977  00F2               	movwf	??_i2creadbyte
 10626     0978  01F3               	clrf	??_i2creadbyte+1
 10627                           
 10628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10629                           ; Switch size 1, requested type "simple"
 10630                           ; Number of cases is 1, Range of values is 0 to 0
 10631                           ; switch strategies available:
 10632                           ; Name         Instructions Cycles
 10633                           ; simple_byte            4     3 (average)
 10634                           ; direct_byte            8     6 (fixed)
 10635                           ; jumptable            260     6 (fixed)
 10636                           ;	Chosen strategy is simple_byte
 10637     0979  0873               	movf	??_i2creadbyte+1,w
 10638     097A  3A00               	xorlw	0	; case 0
 10639     097B  1903               	skipnz
 10640     097C  297E               	goto	i1l6919
 10641     097D  299E               	goto	i1l232
 10642     097E                     i1l6919:
 10643                           
 10644                           ; Switch size 1, requested type "simple"
 10645                           ; Number of cases is 10, Range of values is 0 to 9
 10646                           ; switch strategies available:
 10647                           ; Name         Instructions Cycles
 10648                           ; direct_byte           26     6 (fixed)
 10649                           ; simple_byte           31    16 (average)
 10650                           ; jumptable            260     6 (fixed)
 10651                           ;	Chosen strategy is simple_byte
 10652     097E  0872               	movf	??_i2creadbyte,w
 10653     097F  3A00               	xorlw	0	; case 0
 10654     0980  1903               	skipnz
 10655     0981  291D               	goto	i1l3995
 10656     0982  3A01               	xorlw	1	; case 1
 10657     0983  1903               	skipnz
 10658     0984  2924               	goto	i1l3999
 10659     0985  3A03               	xorlw	3	; case 2
 10660     0986  1903               	skipnz
 10661     0987  292B               	goto	i1l224
 10662     0988  3A01               	xorlw	1	; case 3
 10663     0989  1903               	skipnz
 10664     098A  2931               	goto	i1l4003
 10665     098B  3A07               	xorlw	7	; case 4
 10666     098C  1903               	skipnz
 10667     098D  2939               	goto	i1l4007
 10668     098E  3A01               	xorlw	1	; case 5
 10669     098F  1903               	skipnz
 10670     0990  293E               	goto	i1l4011
 10671     0991  3A03               	xorlw	3	; case 6
 10672     0992  1903               	skipnz
 10673     0993  2950               	goto	i1l4019
 10674     0994  3A01               	xorlw	1	; case 7
 10675     0995  1903               	skipnz
 10676     0996  2955               	goto	i1l4023
 10677     0997  3A0F               	xorlw	15	; case 8
 10678     0998  1903               	skipnz
 10679     0999  296B               	goto	i1l4031
 10680     099A  3A01               	xorlw	1	; case 9
 10681     099B  1903               	skipnz
 10682     099C  2970               	goto	i1l4035
 10683     099D  299E               	goto	i1l232
 10684     099E                     i1l232:
 10685     099E  0008               	return
 10686     099F                     __end_of_i2creadbyte:
 10687                           
 10688                           	psect	text32
 10689     0AC6                     __ptext32:	
 10690 ;; *************** function _i2cread3byte *****************
 10691 ;; Defined at:
 10692 ;;		line 251 in file "main.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  add             1    wreg     unsigned char 
 10695 ;;  dir             1    0[COMMON] unsigned char 
 10696 ;;  value           1    1[COMMON] PTR unsigned long 
 10697 ;;		 -> weight(4), 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  add             1    9[COMMON] unsigned char 
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  4    0[COMMON] unsigned long 
 10702 ;; Registers used:
 10703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10709 ;;      Params:         2       0       0       0       0       0       0       0
 10710 ;;      Locals:         1       0       0       0       0       0       0       0
 10711 ;;      Temps:          7       0       0       0       0       0       0       0
 10712 ;;      Totals:        10       0       0       0       0       0       0       0
 10713 ;;Total ram usage:       10 bytes
 10714 ;; Hardware stack levels used: 1
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_INTERRUPT_InterruptManager
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722     0AC6                     _i2cread3byte:	
 10723                           ;psect for function _i2cread3byte
 10724                           
 10725                           
 10726                           ;incstack = 0
 10727                           ; Regs used in _i2cread3byte: [wreg-fsr1h+status,2+status,0]
 10728                           ;i2cread3byte@add stored from wreg
 10729     0AC6  00F9               	movwf	i2cread3byte@add
 10730     0AC7                     i1l4049:
 10731                           
 10732                           ;main.c: 252:    static char si2=0;;main.c: 253:     switch (si2){
 10733     0AC7  2B52               	goto	i1l4105
 10734     0AC8                     i1l4051:
 10735                           
 10736                           ;main.c: 255:         SSPBUF = add;
 10737     0AC8  0879               	movf	i2cread3byte@add,w
 10738     0AC9  0024               	movlb	4	; select bank4
 10739     0ACA  0091               	movwf	17	;volatile
 10740     0ACB                     i1l4053:
 10741                           
 10742                           ;main.c: 256:         si2=1;
 10743     0ACB  0021               	movlb	1	; select bank1
 10744     0ACC  01AC               	clrf	i2cread3byte@si2^(0+128)
 10745     0ACD  0AAC               	incf	i2cread3byte@si2^(0+128),f
 10746                           
 10747                           ;main.c: 257:         break;
 10748     0ACE  2B7E               	goto	i1l250
 10749     0ACF                     i1l4055:
 10750                           
 10751                           ;main.c: 259:         SSPBUF = dir;
 10752     0ACF  0870               	movf	i2cread3byte@dir,w
 10753     0AD0  0024               	movlb	4	; select bank4
 10754     0AD1  0091               	movwf	17	;volatile
 10755                           
 10756                           ;main.c: 260:         si2=2;
 10757     0AD2  3002               	movlw	2
 10758     0AD3  0021               	movlb	1	; select bank1
 10759     0AD4  00AC               	movwf	i2cread3byte@si2^(0+128)
 10760                           
 10761                           ;main.c: 261:         break;
 10762     0AD5  2B7E               	goto	i1l250
 10763     0AD6                     i1l241:	
 10764                           ;main.c: 262:             case 2:
 10765                           
 10766                           
 10767                           ;main.c: 263:         SSPCON2bits.RSEN = 1;
 10768     0AD6  0024               	movlb	4	; select bank4
 10769     0AD7  1496               	bsf	22,1	;volatile
 10770     0AD8                     i1l4057:
 10771                           
 10772                           ;main.c: 264:         si2=3;
 10773     0AD8  3003               	movlw	3
 10774     0AD9  0021               	movlb	1	; select bank1
 10775     0ADA  00AC               	movwf	i2cread3byte@si2^(0+128)
 10776                           
 10777                           ;main.c: 265:         break;
 10778     0ADB  2B7E               	goto	i1l250
 10779     0ADC                     i1l4059:
 10780                           
 10781                           ;main.c: 267:         SSPBUF = add + 1 ;
 10782     0ADC  0879               	movf	i2cread3byte@add,w
 10783     0ADD  3E01               	addlw	1
 10784     0ADE  0024               	movlb	4	; select bank4
 10785     0ADF  0091               	movwf	17	;volatile
 10786     0AE0                     i1l4061:
 10787                           
 10788                           ;main.c: 268:         si2=4;
 10789     0AE0  3004               	movlw	4
 10790     0AE1  0021               	movlb	1	; select bank1
 10791     0AE2  00AC               	movwf	i2cread3byte@si2^(0+128)
 10792                           
 10793                           ;main.c: 269:         break;
 10794     0AE3  2B7E               	goto	i1l250
 10795     0AE4                     i1l4063:
 10796                           
 10797                           ;main.c: 271:         si2=5;
 10798     0AE4  3005               	movlw	5
 10799     0AE5  00AC               	movwf	i2cread3byte@si2^(0+128)
 10800     0AE6                     i1l4065:
 10801                           
 10802                           ;main.c: 272:         SSPCON2bits.RCEN = 1;
 10803     0AE6  0024               	movlb	4	; select bank4
 10804     0AE7  1596               	bsf	22,3	;volatile
 10805                           
 10806                           ;main.c: 273:         break;
 10807     0AE8  2B7E               	goto	i1l250
 10808     0AE9                     i1l4067:
 10809                           
 10810                           ;main.c: 275:         *value = SSPBUF <<16;
 10811     0AE9  0024               	movlb	4	; select bank4
 10812     0AEA  0811               	movf	17,w	;volatile
 10813     0AEB  00F2               	movwf	??_i2cread3byte
 10814     0AEC  01F3               	clrf	??_i2cread3byte+1
 10815     0AED  01F4               	clrf	??_i2cread3byte+2
 10816     0AEE  01F5               	clrf	??_i2cread3byte+3
 10817     0AEF  0871               	movf	i2cread3byte@value,w
 10818     0AF0  0086               	movwf	6
 10819     0AF1  3001               	movlw	1	; select bank2/3
 10820     0AF2  0087               	movwf	7
 10821     0AF3  0872               	movf	??_i2cread3byte,w
 10822     0AF4  3FC0               	movwi [0]fsr1
 10823     0AF5  0873               	movf	??_i2cread3byte+1,w
 10824     0AF6  3FC1               	movwi [1]fsr1
 10825     0AF7  0874               	movf	??_i2cread3byte+2,w
 10826     0AF8  3FC2               	movwi [2]fsr1
 10827     0AF9  0875               	movf	??_i2cread3byte+3,w
 10828     0AFA  3FC3               	movwi [3]fsr1
 10829     0AFB                     i1l4069:
 10830                           
 10831                           ;main.c: 276:         si2=6;
 10832     0AFB  3006               	movlw	6
 10833     0AFC  0021               	movlb	1	; select bank1
 10834     0AFD  00AC               	movwf	i2cread3byte@si2^(0+128)
 10835     0AFE                     i1l4071:
 10836                           
 10837                           ;main.c: 277:         SSPCON2bits.ACKDT = 0;
 10838     0AFE  0024               	movlb	4	; select bank4
 10839     0AFF  1296               	bcf	22,5	;volatile
 10840     0B00                     i1l4073:
 10841                           
 10842                           ;main.c: 278:         SSPCON2bits.ACKEN = 1;
 10843     0B00  1616               	bsf	22,4	;volatile
 10844                           
 10845                           ;main.c: 279:         break;
 10846     0B01  2B7E               	goto	i1l250
 10847     0B02                     i1l4075:
 10848                           
 10849                           ;main.c: 281:         si2=7;
 10850     0B02  3007               	movlw	7
 10851     0B03  00AC               	movwf	i2cread3byte@si2^(0+128)
 10852     0B04                     i1l4077:
 10853                           
 10854                           ;main.c: 282:         SSPCON2bits.RCEN = 1;
 10855     0B04  0024               	movlb	4	; select bank4
 10856     0B05  1596               	bsf	22,3	;volatile
 10857                           
 10858                           ;main.c: 283:         break;
 10859     0B06  2B7E               	goto	i1l250
 10860     0B07                     i1l4079:
 10861                           
 10862                           ;main.c: 285:         *value |= SSPBUF<<8;
 10863     0B07  0024               	movlb	4	; select bank4
 10864     0B08  0811               	movf	17,w	;volatile
 10865     0B09  00F2               	movwf	??_i2cread3byte
 10866     0B0A  01F3               	clrf	??_i2cread3byte+1
 10867     0B0B  0872               	movf	??_i2cread3byte,w
 10868     0B0C  00F3               	movwf	??_i2cread3byte+1
 10869     0B0D  01F2               	clrf	??_i2cread3byte
 10870     0B0E  0872               	movf	??_i2cread3byte,w
 10871     0B0F  00F5               	movwf	??_i2cread3byte+3
 10872     0B10  0873               	movf	??_i2cread3byte+1,w
 10873     0B11  00F6               	movwf	??_i2cread3byte+4
 10874     0B12  3000               	movlw	0
 10875     0B13  1BF6               	btfsc	??_i2cread3byte+4,7
 10876     0B14  30FF               	movlw	255
 10877     0B15  00F7               	movwf	??_i2cread3byte+5
 10878     0B16  00F8               	movwf	??_i2cread3byte+6
 10879     0B17  0871               	movf	i2cread3byte@value,w
 10880     0B18  0086               	movwf	6
 10881     0B19  3001               	movlw	1	; select bank2/3
 10882     0B1A  0087               	movwf	7
 10883     0B1B  0875               	movf	??_i2cread3byte+3,w
 10884     0B1C  0481               	iorwf	1,f
 10885     0B1D  3141               	addfsr 1,1
 10886     0B1E  0876               	movf	??_i2cread3byte+4,w
 10887     0B1F  0481               	iorwf	1,f
 10888     0B20  3141               	addfsr 1,1
 10889     0B21  0877               	movf	??_i2cread3byte+5,w
 10890     0B22  0481               	iorwf	1,f
 10891     0B23  3141               	addfsr 1,1
 10892     0B24  0878               	movf	??_i2cread3byte+6,w
 10893     0B25  0481               	iorwf	1,f
 10894     0B26                     i1l4081:
 10895                           
 10896                           ;main.c: 286:         si2=8;
 10897     0B26  3008               	movlw	8
 10898     0B27  0021               	movlb	1	; select bank1
 10899     0B28  00AC               	movwf	i2cread3byte@si2^(0+128)
 10900     0B29                     i1l4083:
 10901                           
 10902                           ;main.c: 287:         SSPCON2bits.ACKDT = 0;
 10903     0B29  0024               	movlb	4	; select bank4
 10904     0B2A  1296               	bcf	22,5	;volatile
 10905     0B2B                     i1l4085:
 10906                           
 10907                           ;main.c: 288:         SSPCON2bits.ACKEN = 1;
 10908     0B2B  1616               	bsf	22,4	;volatile
 10909                           
 10910                           ;main.c: 289:         break;
 10911     0B2C  2B7E               	goto	i1l250
 10912     0B2D                     i1l4087:
 10913                           
 10914                           ;main.c: 291:         *value |= SSPBUF;
 10915     0B2D  0024               	movlb	4	; select bank4
 10916     0B2E  0811               	movf	17,w	;volatile
 10917     0B2F  00F2               	movwf	??_i2cread3byte
 10918     0B30  01F3               	clrf	??_i2cread3byte+1
 10919     0B31  01F4               	clrf	??_i2cread3byte+2
 10920     0B32  01F5               	clrf	??_i2cread3byte+3
 10921     0B33  0871               	movf	i2cread3byte@value,w
 10922     0B34  0086               	movwf	6
 10923     0B35  3001               	movlw	1	; select bank2/3
 10924     0B36  0087               	movwf	7
 10925     0B37  0872               	movf	??_i2cread3byte,w
 10926     0B38  0481               	iorwf	1,f
 10927     0B39  3141               	addfsr 1,1
 10928     0B3A  0873               	movf	??_i2cread3byte+1,w
 10929     0B3B  0481               	iorwf	1,f
 10930     0B3C  3141               	addfsr 1,1
 10931     0B3D  0874               	movf	??_i2cread3byte+2,w
 10932     0B3E  0481               	iorwf	1,f
 10933     0B3F  3141               	addfsr 1,1
 10934     0B40  0875               	movf	??_i2cread3byte+3,w
 10935     0B41  0481               	iorwf	1,f
 10936     0B42                     i1l4089:
 10937                           
 10938                           ;main.c: 292:         si2=9;
 10939     0B42  3009               	movlw	9
 10940     0B43  0021               	movlb	1	; select bank1
 10941     0B44  00AC               	movwf	i2cread3byte@si2^(0+128)
 10942     0B45                     i1l4091:
 10943                           
 10944                           ;main.c: 293:         SSPCON2bits.ACKDT = 1;
 10945     0B45  0024               	movlb	4	; select bank4
 10946     0B46  1696               	bsf	22,5	;volatile
 10947     0B47                     i1l4093:
 10948                           
 10949                           ;main.c: 294:         SSPCON2bits.ACKEN = 1;
 10950     0B47  1616               	bsf	22,4	;volatile
 10951                           
 10952                           ;main.c: 295:         break;
 10953     0B48  2B7E               	goto	i1l250
 10954     0B49                     i1l4095:
 10955                           
 10956                           ;main.c: 297:         si2=10;
 10957     0B49  300A               	movlw	10
 10958     0B4A  00AC               	movwf	i2cread3byte@si2^(0+128)
 10959     0B4B                     i1l4097:
 10960                           
 10961                           ;main.c: 298:         SSPCON2bits.PEN = 1;
 10962     0B4B  0024               	movlb	4	; select bank4
 10963     0B4C  1516               	bsf	22,2	;volatile
 10964                           
 10965                           ;main.c: 299:         break;
 10966     0B4D  2B7E               	goto	i1l250
 10967     0B4E                     i1l4099:
 10968                           
 10969                           ;main.c: 302:         si2=0;
 10970     0B4E  01AC               	clrf	i2cread3byte@si2^(0+128)
 10971     0B4F                     i1l4101:
 10972                           
 10973                           ;main.c: 303:         endi2c=2;
 10974     0B4F  3002               	movlw	2
 10975     0B50  00B7               	movwf	_endi2c^(0+128)
 10976                           
 10977                           ;main.c: 304:         break;
 10978     0B51  2B7E               	goto	i1l250
 10979     0B52                     i1l4105:
 10980     0B52  0021               	movlb	1	; select bank1
 10981     0B53  082C               	movf	i2cread3byte@si2^(0+128),w
 10982     0B54  00F2               	movwf	??_i2cread3byte
 10983     0B55  01F3               	clrf	??_i2cread3byte+1
 10984                           
 10985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10986                           ; Switch size 1, requested type "simple"
 10987                           ; Number of cases is 1, Range of values is 0 to 0
 10988                           ; switch strategies available:
 10989                           ; Name         Instructions Cycles
 10990                           ; simple_byte            4     3 (average)
 10991                           ; direct_byte            8     6 (fixed)
 10992                           ; jumptable            260     6 (fixed)
 10993                           ;	Chosen strategy is simple_byte
 10994     0B56  0873               	movf	??_i2cread3byte+1,w
 10995     0B57  3A00               	xorlw	0	; case 0
 10996     0B58  1903               	skipnz
 10997     0B59  2B5B               	goto	i1l6921
 10998     0B5A  2B7E               	goto	i1l250
 10999     0B5B                     i1l6921:
 11000                           
 11001                           ; Switch size 1, requested type "simple"
 11002                           ; Number of cases is 11, Range of values is 0 to 10
 11003                           ; switch strategies available:
 11004                           ; Name         Instructions Cycles
 11005                           ; direct_byte           28     6 (fixed)
 11006                           ; simple_byte           34    18 (average)
 11007                           ; jumptable            260     6 (fixed)
 11008                           ;	Chosen strategy is simple_byte
 11009     0B5B  0872               	movf	??_i2cread3byte,w
 11010     0B5C  3A00               	xorlw	0	; case 0
 11011     0B5D  1903               	skipnz
 11012     0B5E  2AC8               	goto	i1l4051
 11013     0B5F  3A01               	xorlw	1	; case 1
 11014     0B60  1903               	skipnz
 11015     0B61  2ACF               	goto	i1l4055
 11016     0B62  3A03               	xorlw	3	; case 2
 11017     0B63  1903               	skipnz
 11018     0B64  2AD6               	goto	i1l241
 11019     0B65  3A01               	xorlw	1	; case 3
 11020     0B66  1903               	skipnz
 11021     0B67  2ADC               	goto	i1l4059
 11022     0B68  3A07               	xorlw	7	; case 4
 11023     0B69  1903               	skipnz
 11024     0B6A  2AE4               	goto	i1l4063
 11025     0B6B  3A01               	xorlw	1	; case 5
 11026     0B6C  1903               	skipnz
 11027     0B6D  2AE9               	goto	i1l4067
 11028     0B6E  3A03               	xorlw	3	; case 6
 11029     0B6F  1903               	skipnz
 11030     0B70  2B02               	goto	i1l4075
 11031     0B71  3A01               	xorlw	1	; case 7
 11032     0B72  1903               	skipnz
 11033     0B73  2B07               	goto	i1l4079
 11034     0B74  3A0F               	xorlw	15	; case 8
 11035     0B75  1903               	skipnz
 11036     0B76  2B2D               	goto	i1l4087
 11037     0B77  3A01               	xorlw	1	; case 9
 11038     0B78  1903               	skipnz
 11039     0B79  2B49               	goto	i1l4095
 11040     0B7A  3A03               	xorlw	3	; case 10
 11041     0B7B  1903               	skipnz
 11042     0B7C  2B4E               	goto	i1l4099
 11043     0B7D  2B7E               	goto	i1l250
 11044     0B7E                     i1l250:
 11045     0B7E  0008               	return
 11046     0B7F                     __end_of_i2cread3byte:
 11047                           
 11048                           	psect	text33
 11049     1540                     __ptext33:	
 11050 ;; *************** function _TXsend *****************
 11051 ;; Defined at:
 11052 ;;		line 685 in file "main.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  word            2    0[COMMON] PTR unsigned char 
 11055 ;;		 -> COM10(5), sport(10), LOAD_CELL(16), VEML7700(13), 
 11056 ;;		 -> DS18B(12), COM(4), DHTS(23), 
 11057 ;;  size            1    2[COMMON] unsigned char 
 11058 ;; Auto vars:     Size  Location     Type
 11059 ;;		None
 11060 ;; Return value:  Size  Location     Type
 11061 ;;                  1    wreg      void 
 11062 ;; Registers used:
 11063 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11064 ;; Tracked objects:
 11065 ;;		On entry : 0/0
 11066 ;;		On exit  : 0/0
 11067 ;;		Unchanged: 0/0
 11068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11069 ;;      Params:         3       0       0       0       0       0       0       0
 11070 ;;      Locals:         0       0       0       0       0       0       0       0
 11071 ;;      Temps:          2       0       0       0       0       0       0       0
 11072 ;;      Totals:         5       0       0       0       0       0       0       0
 11073 ;;Total ram usage:        5 bytes
 11074 ;; Hardware stack levels used: 1
 11075 ;; This function calls:
 11076 ;;		Nothing
 11077 ;; This function is called by:
 11078 ;;		_INTERRUPT_InterruptManager
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082     1540                     _TXsend:	
 11083                           ;psect for function _TXsend
 11084                           
 11085     1540                     i1l5831:	
 11086                           ;incstack = 0
 11087                           ; Regs used in _TXsend: [wreg+fsr1l+fsr1h+status,2+status,0]
 11088                           
 11089                           
 11090                           ;main.c: 686:     static unsigned char i=0;;main.c: 687:     if(i==0){
 11091     1540  087D               	movf	TXsend@i,w
 11092     1541  1D03               	btfss	3,2
 11093     1542  2D44               	goto	u465_21
 11094     1543  2D45               	goto	u465_20
 11095     1544                     u465_21:
 11096     1544  2D56               	goto	i1l5837
 11097     1545                     u465_20:
 11098     1545                     i1l5833:
 11099                           
 11100                           ;main.c: 689:        TXREG=word[i];
 11101     1545  087D               	movf	TXsend@i,w
 11102     1546  00F3               	movwf	??_TXsend
 11103     1547  01F4               	clrf	??_TXsend+1
 11104     1548  0873               	movf	??_TXsend,w
 11105     1549  0770               	addwf	TXsend@word,w
 11106     154A  0086               	movwf	6
 11107     154B  0874               	movf	??_TXsend+1,w
 11108     154C  3D71               	addwfc	TXsend@word+1,w
 11109     154D  0087               	movwf	7
 11110     154E  0801               	movf	1,w
 11111     154F  0023               	movlb	3	; select bank3
 11112     1550  009A               	movwf	26	;volatile
 11113     1551                     i1l5835:
 11114                           
 11115                           ;main.c: 690:        i++;
 11116     1551  3001               	movlw	1
 11117     1552  00F3               	movwf	??_TXsend
 11118     1553  0873               	movf	??_TXsend,w
 11119     1554  07FD               	addwf	TXsend@i,f
 11120                           
 11121                           ;main.c: 691:     }
 11122     1555  2D6D               	goto	i1l364
 11123     1556                     i1l5837:
 11124     1556  087D               	movf	TXsend@i,w
 11125     1557  1903               	btfsc	3,2
 11126     1558  2D5A               	goto	u466_21
 11127     1559  2D5B               	goto	u466_20
 11128     155A                     u466_21:
 11129     155A  2D62               	goto	i1l5845
 11130     155B                     u466_20:
 11131     155B                     i1l5839:
 11132     155B  0872               	movf	TXsend@size,w
 11133     155C  027D               	subwf	TXsend@i,w
 11134     155D  1803               	skipnc
 11135     155E  2D60               	goto	u467_21
 11136     155F  2D61               	goto	u467_20
 11137     1560                     u467_21:
 11138     1560  2D62               	goto	i1l5845
 11139     1561                     u467_20:
 11140     1561  2D45               	goto	i1l5833
 11141     1562                     i1l5845:
 11142     1562  0872               	movf	TXsend@size,w
 11143     1563  027D               	subwf	TXsend@i,w
 11144     1564  1C03               	skipc
 11145     1565  2D67               	goto	u468_21
 11146     1566  2D68               	goto	u468_20
 11147     1567                     u468_21:
 11148     1567  2D6D               	goto	i1l364
 11149     1568                     u468_20:
 11150     1568                     i1l5847:
 11151                           
 11152                           ;main.c: 696:         i=0;
 11153     1568  01FD               	clrf	TXsend@i
 11154     1569                     i1l5849:
 11155                           
 11156                           ;main.c: 697:         cs=cs+1;
 11157     1569  0021               	movlb	1	; select bank1
 11158     156A  083B               	movf	_cs^(0+128),w
 11159     156B  3E01               	addlw	1
 11160     156C  00BB               	movwf	_cs^(0+128)
 11161     156D                     i1l364:
 11162     156D  0008               	return
 11163     156E                     __end_of_TXsend:
 11164     007E                     btemp	set	126	;btemp
 11165     007E                     int$flags	set	126
 11166     007E                     wtemp0	set	126
 11167                           
 11168                           	psect	idloc
 11169                           
 11170                           ;Config register IDLOC0 @ 0x8000
 11171                           ;	unspecified, using default values
 11172     8000                     	org	32768
 11173     8000  3FFF               	dw	16383
 11174                           
 11175                           ;Config register IDLOC1 @ 0x8001
 11176                           ;	unspecified, using default values
 11177     8001                     	org	32769
 11178     8001  3FFF               	dw	16383
 11179                           
 11180                           ;Config register IDLOC2 @ 0x8002
 11181                           ;	unspecified, using default values
 11182     8002                     	org	32770
 11183     8002  3FFF               	dw	16383
 11184                           
 11185                           ;Config register IDLOC3 @ 0x8003
 11186                           ;	unspecified, using default values
 11187     8003                     	org	32771
 11188     8003  3FFF               	dw	16383
 11189                           
 11190                           	psect	config
 11191                           
 11192                           ;Config register CONFIG1 @ 0x8007
 11193                           ;	Oscillator Selection
 11194                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11195                           ;	Watchdog Timer Enable
 11196                           ;	WDTE = ON, WDT enabled
 11197                           ;	Power-up Timer Enable
 11198                           ;	PWRTE = OFF, PWRT disabled
 11199                           ;	MCLR Pin Function Select
 11200                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11201                           ;	Flash Program Memory Code Protection
 11202                           ;	CP = OFF, Program memory code protection is disabled
 11203                           ;	Data Memory Code Protection
 11204                           ;	CPD = OFF, Data memory code protection is disabled
 11205                           ;	Brown-out Reset Enable
 11206                           ;	BOREN = OFF, Brown-out Reset disabled
 11207                           ;	Clock Out Enable
 11208                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11209                           ;	Internal/External Switchover
 11210                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11211                           ;	Fail-Safe Clock Monitor Enable
 11212                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11213     8007                     	org	32775
 11214     8007  39FC               	dw	14844
 11215                           
 11216                           ;Config register CONFIG2 @ 0x8008
 11217                           ;	Flash Memory Self-Write Protection
 11218                           ;	WRT = OFF, Write protection off
 11219                           ;	Voltage Regulator Capacitor Enable
 11220                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 11221                           ;	PLL Enable
 11222                           ;	PLLEN = ON, 4x PLL enabled
 11223                           ;	Stack Overflow/Underflow Reset Enable
 11224                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11225                           ;	Brown-out Reset Voltage Selection
 11226                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11227                           ;	Low-Voltage Programming Enable
 11228                           ;	LVP = ON, Low-voltage programming enabled
 11229     8008                     	org	32776
 11230     8008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        75
    BSS         116
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      79
    BANK1            80     31      80
    BANK2            80      0      73
    BANK3            80      0      67
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    DS18B20_Read@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATC(SFR2[1]), LATA(SFR2[1]), 

    DS18B20_Read@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTA(SFR0[1]), 

    DS18B20_Read@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR1[1]), TRISA(SFR1[1]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1033$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> KG(BANK2[8]), LUX(BANK2[5]), TEMPDS(BANK2[4]), humar(BANK2[4]), 
		 -> tempar(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S985$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S985$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    OW_read_byte@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_read_byte@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    OW_read_byte@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_write_byte@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_write_byte@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_read_bit@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    OW_read_bit@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_read_bit@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_write_bit@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_write_bit@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    OW_reset_pulse@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    OW_reset_pulse@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    OW_reset_pulse@LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATA(SFR2[1]), 

    read_OW@PORT	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    read_OW@TRIS	PTR unsigned char  size(2) Largest target is 1
		 -> TRISA(SFR1[1]), 

    DHT22READ@COM	PTR unsigned char  size(1) Largest target is 4
		 -> COM(BANK1[4]), 

    DHT22READ@dhtresult	PTR unsigned char  size(1) Largest target is 4
		 -> dhtresult(BANK2[4]), 

    TXsend@word	PTR unsigned char  size(2) Largest target is 23
		 -> COM10(BANK2[5]), sport(BANK1[10]), LOAD_CELL(BANK2[16]), VEML7700(BANK2[13]), 
		 -> DS18B(BANK3[12]), COM(BANK1[4]), DHTS(BANK3[23]), 

    port_config@stype	PTR unsigned char  size(1) Largest target is 10
		 -> sport(BANK1[10]), 

    i2cread3byte@value	PTR unsigned long  size(1) Largest target is 4
		 -> weight(BANK2[4]), 

    i2creadbyte@value	PTR unsigned int  size(1) Largest target is 2
		 -> Lum(BANK1[2]), 

    DHTRESULT@COM	PTR unsigned char  size(1) Largest target is 4
		 -> COM(BANK1[4]), 

    DHTRESULT@dht	PTR unsigned char  size(1) Largest target is 4
		 -> dhtresult(BANK2[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2cread3byte

Critical Paths under _main in BANK0

    _main->_DHTRESULT
    _main->_DS18B20_Read
    _Sys_Init->_Reg_init
    _OW_write_byte->_OW_write_bit
    _OW_reset_pulse->_read_OW
    _OW_read_byte->_OW_read_bit
    _OW_read_bit->_read_OW
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->___lodiv
    _pad->_fputs
    _fputs->_fputc
    _DHT22READ->_read_byte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DHTRESULT
    _main->_DS18B20_Read
    _i2c_Read->_sprintf
    _DS18B20_Read->_sprintf
    _DHTRESULT->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38545
                                             27 BANK1      4     4      0
                          _DHTRESULT
                       _DS18B20_Read
                           _Sys_Init
                           _i2c_Read
                        _port_config
 ---------------------------------------------------------------------------------
 (1) _port_config                                          2     2      0     264
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_Read                                             7     7      0    6950
                                             74 BANK0      2     2      0
                                             19 BANK1      5     5      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Sys_Init                                             0     0      0       0
                           _Pin_init
                           _Reg_init
 ---------------------------------------------------------------------------------
 (2) _Reg_init                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS18B20_Read                                        13     5      8   17840
                                             74 BANK0      5     5      0
                                             19 BANK1      8     0      8
                       _OW_read_byte
                     _OW_reset_pulse
                      _OW_write_byte
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _OW_write_byte                                        8     3      5    2072
                                              7 BANK0      8     3      5
                       _OW_write_bit
 ---------------------------------------------------------------------------------
 (3) _OW_write_bit                                         7     2      5     797
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (2) _OW_reset_pulse                                       9     2      7    2259
                                              7 BANK0      8     1      7
                            _read_OW
 ---------------------------------------------------------------------------------
 (2) _OW_read_byte                                        10     3      7    2391
                                             16 BANK0     10     3      7
                        _OW_read_bit
 ---------------------------------------------------------------------------------
 (3) _OW_read_bit                                          9     2      7    1439
                                              7 BANK0      9     2      7
                            _read_OW
 ---------------------------------------------------------------------------------
 (3) _read_OW                                              7     2      5     704
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _DHTRESULT                                           13     8      5   13200
                                             74 BANK0      5     5      0
                                             19 BANK1      8     3      5
                          _DHT22READ
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    13      8    6628
                                              0 BANK1     19    11      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    5672
                                             67 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    20      2    5265
                                             50 BANK0     17    15      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3752
                                             26 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2425
                                             15 BANK0      9     6      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1123
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     412
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     421
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _DHT22READ                                            6     1      5    2020
                                              6 BANK0      6     1      5
                     _check_response
                          _read_byte
                       _start_signal
 ---------------------------------------------------------------------------------
 (3) _start_signal                                         3     2      1     230
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _read_byte                                            6     5      1     553
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _check_response                                       3     1      2     439
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0    2646
                                             10 COMMON     2     2      0
                             _TXsend
                       _i2cread3byte
                        _i2creadbyte
                      _i2cwrite2byte
                       _i2cwritebyte
 ---------------------------------------------------------------------------------
 (11) _i2cwritebyte                                        5     3      2     674
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (11) _i2cwrite2byte                                       6     3      3     392
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (11) _i2creadbyte                                         6     4      2     262
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (11) _i2cread3byte                                       10     8      2     284
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (11) _TXsend                                              5     2      3    1034
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHTRESULT
     _DHT22READ
       _check_response
       _read_byte
       _start_signal
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
   _DS18B20_Read
     _OW_read_byte
       _OW_read_bit
         _read_OW
     _OW_reset_pulse
       _read_OW
     _OW_write_byte
       _OW_write_bit
     _sprintf
   _Sys_Init
     _Pin_init
     _Reg_init
   _i2c_Read
     _sprintf
   _port_config

 _INTERRUPT_InterruptManager (ROOT)
   _TXsend
   _i2cread3byte
   _i2creadbyte
   _i2cwrite2byte
   _i2cwritebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     139       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1F      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      49      10       91.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      43      12       83.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     139      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 14 16:40:15 2022

                   DS18B20_Read@LAT 00E4                     DS18B20_Read@PIN 00E6  
                                _KG 0128                                  _cs 00BB  
                  DS18B20_Read@PORT 00E2                    DS18B20_Read@TRIS 00E0  
                       i2c_Read@com 00E0                                 l182 0E8C  
                               l190 0FFF                                 l510 142F  
                               l262 0DF6                                 l271 0C9E  
                               l184 0EDC                                 l513 159D  
                               l281 0D11                                 l273 0CB5  
                               l265 0C5A                                 l610 08A9  
                               l290 02DE                                 l283 0D18  
                               l275 0CCC                                 l267 0C70  
                               l291 02F8                                 l516 1417  
                               l277 0CE3                                 l269 0C87  
                               l607 1448                                 l615 17FF  
                               l623 1484                                 l279 0CFA  
                               l296 0300                                 l537 1652  
                               l554 1729                                 l618 1611  
                               l547 174F                                 l299 0325  
                               l581 1670                                 l629 153F  
                               l591 16A6                                 l583 169B  
                               l589 1693                                 l598 16FA  
                               _COM 00EC                                 _RA0 0060  
                               _RA1 0061                                 _RA2 0062  
                               _RB0 0068                                 _RA3 0063  
                               _RB1 0069                                 _RB2 006A  
                               _RA4 0064                                 _RC0 0070  
                               _RC1 0071                                 _RB3 006B  
                               _RA5 0065                                 _RC2 0072  
                               _RA6 0066                                 _RB4 006C  
                               _RB5 006D                                 _RA7 0067  
                               _RC5 0075                                 _LUX 0130  
                               _Lum 00CB                 __end_of_OW_read_bit 1612  
                               _pad 159E                   i2cwrite2byte@data 0071  
                               wreg 0009                                l1012 0A12  
                              l1022 090A                                l1019 0A22  
                              l1029 091A                                l1306 17A6  
                              l1314 14F0                                l1242 1515  
                              l1317 07FE                                l1262 15AB  
                              l1272 0B9F                                l1266 15D2  
                              l1278 0C49                                l1294 1464  
                              l1287 0AC5                                l4221 0C5C  
                              l4231 0C82                                l4223 0C61  
                              l4241 0CA5                                l4233 0C89  
                              l4225 0C6B                                l4217 0C4C  
                              l6001 042E                                l3611 1656  
                              l3531 1623                                l4251 0CCE  
                              l4243 0CB0                                l4235 0C8E  
                              l4227 0C72                                l4219 0C55  
                              l6011 043E                                l6003 0434  
                              l3541 16FD                                l3613 165B  
                              l3533 162C                                l4261 0CF5  
                              l4253 0CD3                                l4245 0CB7  
                              l4237 0C99                                l4229 0C77  
                              l6101 0516                                l6021 0451  
                              l6013 0440                                l6005 0439  
                              l3551 170B                                l3543 16FF  
                              l3631 1671                                l3623 1662  
                              l3535 1636                                l3527 1614  
                              l3711 16C1                                l4271 1411  
                              l4263 0CFC                                l4255 0CDE  
                              l4247 0CBC                                l4239 0CA0  
                              l6111 0526                                l6103 051C  
                              l6031 045A                                l6023 0452  
                              l6015 0442                                l6007 043A  
                              l3561 1717                                l3553 1710  
                              l3545 1700                                l3641 168D  
                              l3633 1677                                l3625 1668  
                              l3609 1655                                l3537 1640  
                              l3529 1619                                l3713 16F3  
                              l3705 16A9                                l5401 08C6  
                              l3801 142D                                l4265 0D01  
                              l4257 0CE5                                l4249 0CC7  
                              l6201 05FF                                l6121 0539  
                              l6113 0528                                l6105 0521  
                              l6041 047A                                l6025 0454  
                              l6009 043C                                l6017 0446  
                              l6033 045E                                l3563 1718  
                              l3555 1715                                l3651 16A5  
                              l3643 1694                                l3627 1669  
                              l3635 1685                                l3619 165D  
                              l3539 1649                                l3707 16BA  
                              l5403 08CA                                l5411 15A4  
                              l3803 142E                                l3811 157F  
                              l4267 0D0C                                l4259 0CEA  
                              l6211 060F                                l6203 0605  
                              l6131 0542                                l6123 053A  
                              l6115 052A                                l6107 0522  
                              l6051 04A2                                l6043 047F  
                              l6035 0462                                l6027 0456  
                              l6019 044C                                l3581 1732  
                              l3565 171E                                l3549 1705  
                              l3637 168B                                l3629 166A  
                              l3709 16BF                                l5405 08EC  
                              l5421 15CB                                l5413 15A9  
                              l3821 158F                                l3813 1586  
                              l3805 156E                                l4269 0D13  
                              l6301 06E7                                l6221 0622  
                              l6213 0611                                l6205 060A  
                              l6141 0562                                l6125 053C  
                              l6109 0524                                l6117 052E  
                              l6133 0546                                l6061 04B2  
                              l6053 04A8                                l6045 0485  
                              l6037 0468                                l6029 0458  
                              ?_pad 002F                                l3591 173D  
                              l3583 1737                                l3575 172A  
                              l3567 1723                                l3647 169F  
                              l3639 168C                                l5407 08FC  
                              l5351 175B                                l5415 15AE  
                              l5431 0BBB                                l5423 0B81  
                              l5511 17C1                                l3823 1590  
                              l3815 1588                                l3807 1571  
                              l6311 06F7                                l6303 06ED  
                              l6231 062B                                l6223 0623  
                              l6215 0613                                l6207 060B  
                              l6151 058A                                l6143 0567  
                              l6135 054A                                l6127 053E  
                              l6119 0534                                l6071 04C5  
                              l6063 04B4                                l6055 04AD  
                              l6047 048A                                l6039 046D  
                              l3593 173E                                l3649 16A5  
                              l5353 1760                                l5417 15B8  
                              l5409 15A0                                l5441 0BF0  
                              l5433 0BBE                                l5425 0B91  
                              l5601 1516                                l5521 17EA  
                              l5513 17CA                                l5505 17A9  
                              l3825 1599                                l3817 158A  
                              l3809 1572                                l6401 07B7  
                              l6321 0709                                l6313 06F9  
                              l6305 06F2                                l6241 064B  
                              l6225 0625                                l6209 060D  
                              l6217 0617                                l6233 062F  
                              l6161 059A                                l6153 0590  
                              l6145 056D                                l6137 0550  
                              l6129 0540                                l6081 04CE  
                              l6073 04C6                                l6065 04B6  
                              l6057 04AE                                l6049 049D  
                              l3595 1744                                l3579 172C  
                              l5371 099F                                l5355 176A  
                              l5347 1750                                l5363 14CE  
                              l5419 15BD                                l5435 0BC3  
                              l5443 0C1D                                l5427 0B97  
                              l5531 15E7                                l5611 1531  
                              l5523 17F3                                l5515 17D2  
                              l5507 17AE                                l3827 159B  
                              l3819 158D                                l6403 07B9  
                              l6323 070B                                l6307 06F3  
                              l6315 06FD                                l6331 0715  
                              l6251 0673                                l6243 0650  
                              l6235 0633                                l6227 0627  
                              l6219 061D                                l6171 05AD  
                              l6163 059C                                l6155 0595  
                              l6147 0572                                l6139 0555  
                              l6091 04EE                                l6075 04C8  
                              l6059 04B0                                l6067 04BA  
                              l6083 04D2                                l3597 1749  
                              l5381 09C5                                l5373 09AA  
                              l5357 1788                                l5349 1756  
                              l5365 14D1                                l5445 0C24  
                              l5437 0BE8                                l5429 0BA7  
                              l5621 0DF9                                l5461 1446  
                              l5453 1430                                l5541 160F  
                              l5533 15F0                                l5613 1533  
                              l5525 17FB                                l5509 17BE  
                              l5517 17D7                                l5701 0FD5  
                              l3781 1418                                l6405 07BB  
                              l6341 0736                                l6333 0719  
                              l6325 070D                                l6317 0703  
                              l6309 06F5                                l6261 0683  
                              l6253 0679                                l6245 0656  
                              l6237 0639                                l6229 0629  
                              l6181 05B6                                l6173 05AE  
                              l6165 059E                                l6157 0596  
                              l6149 0585                                l6093 04F3  
                              l6085 04D6                                l6077 04CA  
                              l6069 04C0                                l5391 0A04  
                              l5383 09C9                                l5375 09B6  
                              l5359 179D                                l5367 14DD  
                              l5447 0C30                                l5439 0BEC  
                              l5471 0A3E                                l5551 1462  
                              l5631 0E77                                l5623 0E11  
                              l5463 1447                                l5455 1430  
                              l5535 15F8                                l5527 15D3  
                              l5615 1538                                l5607 1519  
                              l5519 17E7                                l5711 0FF2  
                              l5703 0FE2                                l3791 1425  
                              l3783 141C                                l6351 075F  
                              l6343 073C                                l6335 071F  
                              l6327 070F                                l6319 0708  
                              l6271 0696                                l6263 0685  
                              l6255 067E                                l6247 065B  
                              l6239 063E                                l6191 05D7  
                              l6175 05B0                                l6159 0598  
                              l6167 05A2                                l6183 05BA  
                              l6095 04F9                                l6087 04DC  
                              l6079 04CC                                l5385 09D1  
                              l5377 09B9                                l5393 08AA  
                              l5369 14E2                                l5449 0C3D  
                              l5481 0A6F                                l5473 0A47  
                              l5545 144B                                l5561 14FC  
                              l5641 0E95                                l5625 0E2F  
                              l5457 1439                                l5537 15FB  
                              l5529 15E4                                l5617 153E  
                              l5609 151B                                l5721 0FFB  
                              l5713 0FF6                                l5705 0FE6  
                              l3793 1426                                l3785 141F  
                              l5801 0DC8                                l6361 076B  
                              l6353 0764                                l6345 0741  
                              l6337 0724                                l6329 0711  
                              l6281 069F                                l6273 0697  
                              l6265 0687                                l6257 067F  
                              l6249 066E                                l6193 05DC  
                              l6185 05BE                                l6177 05B2  
                              l6169 05A8                                l6097 04FE  
                              l6089 04E1                                l5387 09F3  
                              l5379 09C1                                l5395 08B7  
                              l5483 0A7D                                l5491 0AA3  
                              l5475 0A4B                                l5467 0A25  
                              l5547 1450                                l5563 1509  
                              l5555 14F1                                l5651 0EC0  
                              l5643 0E9B                                l5627 0E4F  
                              l5459 1443                                l5539 160B  
                              l5571 0861                                l5723 0FFE  
                              l5715 0FF8                                l5707 0FEA  
                              l3795 1428                                l3787 1421  
                              l5811 0DE4                                l5803 0DCC  
                              l5731 0D2E                                l6371 077D  
                              l6355 0765                                l6363 076F  
                              l6347 0754                                l6339 0731  
                              l6291 06BF                                l6275 0699  
                              l6259 0681                                l6267 068B  
                              l6283 06A3                                l6195 05E2  
                              l6187 05C4                                l6179 05B4  
                              l6099 0511                                l5389 0A03  
                              l5397 08BA                                l5477 0A53  
                              l5469 0A36                                l5549 1458  
                              l5557 14F8                                l5661 0ED6  
                              l5653 0EC1                                l5645 0E9F  
                              l5637 0E7A                                l5629 0E63  
                              l5581 0898                                l5573 087A  
                              l5717 0FF9                                l5709 0FEE  
                              l3797 1429                                l3789 1423  
                              l5821 0DEE                                l5813 0DE6  
                              l5805 0DDB                                l5741 0D4B  
                              l5733 0D30                                l5725 0D1B  
                              l6381 078B                                l6373 077F  
                              l6365 0775                                l6357 0767  
                              l6349 0759                                l6293 06C4  
                              l6285 06A7                                l6277 069B  
                              l6269 0691                                l6197 05E7  
                              l6189 05C9                                l5901 032C  
                              l5399 08C2                                l5479 0A5D  
                              l5495 0AAD                                l5559 14FA  
                              l5663 0ED7                                l5655 0EC2  
                              l5647 0EAE                                l5639 0E85  
                              l5583 08A1                                l5575 087E  
                              l5567 0848                                l5719 0FFA  
                              l5671 0F13                                l3799 142B  
                              l5823 0DF0                                l5815 0DE8  
                              l5807 0DDF                                l5751 0D60  
                              l5727 0D20                                l5735 0D32  
                              l6391 07A5                                l6383 0791  
                              l6375 0781                                l6367 077A  
                              l6359 0769                                l6295 06CA  
                              l6287 06AD                                l6279 069D  
                              l6199 05FA                                l5911 0339  
                              l5903 032D                                l5489 0A92  
                              l5665 0ED8                                l5657 0ED3  
                              l5649 0EBE                                l5577 088C  
                              l5569 0859                                l5593 1468  
                              l5681 0F59                                l5673 0F20  
                              l5825 0DF3                                l5817 0DEA  
                              l5809 0DE2                                l5761 0D7C  
                              l5753 0D64                                l5737 0D37  
                              l5729 0D2C                                l6393 07A9  
                              l6385 0796                                l6377 0783  
                              l6369 077B                                l6297 06CF  
                              l6289 06B2                                l5921 0356  
                              l5913 033F                                l5905 032E  
                              l5667 0EDB                                l5659 0ED5  
                              l5579 0892                                l5595 1477  
                              l5587 1467                                l5683 0F77  
                              l5675 0F34                                l5827 0DF4  
                              l5819 0DEC                                l5771 0D84  
                              l5763 0D7E                                l5755 0D73  
                              l5747 0D4E                                l5739 0D3C  
                              l6395 07AF                                l6387 079A  
                              l6379 0787                                l6299 06E2  
                              l5931 036B                                l5923 0362  
                              l5915 0343                                l5907 0333  
                              l5851 02AF                                l5597 147A  
                              l5685 0F98                                l5677 0F45  
                              l5669 0EDD                                l5829 0DF5  
                              l5781 0D8B                                l5773 0D85  
                              l5765 0D80                                l5757 0D77  
                              l5749 0D59                                l6397 07B4  
                              l6389 07A0                                l5941 0392  
                              l5933 0370                                l5925 0364  
                              l5917 034F                                l5909 0334  
                              l5861 02B6                                l5853 02B2  
                              l5599 147E                                l5695 0FBF  
                              l5687 0FAC                                l5679 0F56  
                              l5791 0DB3                                l5783 0D8C  
                              l5775 0D86                                l5767 0D82  
                              l5759 0D7A                                l6399 07B5  
                              l5951 03BA                                l5935 0376  
                              l5943 0397                                l5927 0366  
                              l5919 0351                                l5871 02DA  
                              l5863 02C0                                l5855 02B5  
                              l6905 0A9E                                l5697 0FCA  
                              l5689 0FBC                                l5777 0D87  
                              l5769 0D83                                l5785 0D8D  
                              l5961 03CA                                l5953 03C0  
                              l5945 039D                                l5937 037B  
                              l5929 0367                                l5881 02FF  
                              l5873 02E2                                l5865 02C6  
                              l5699 0FD1                                l5787 0D92  
                              l5779 0D8A                                l5971 03DD  
                              l5963 03CC                                l5955 03C5  
                              l5947 03A2                                l5939 0384  
                              l5891 0318                                l5875 02E8  
                              l5867 02C7                                l5797 0DB6  
                              l5789 0D98                                l5981 03E6  
                              l5973 03DE                                l5965 03CE  
                              l5957 03C6                                l5949 03B5  
                              l5893 031E                                l5877 02EC  
                              l5869 02CF                                l5799 0DC1  
                              l5991 0406                                l5975 03E0  
                              l5959 03C8                                l5967 03D2  
                              l5983 03EA                                l5895 0320  
                              l5887 0305                                l5879 02F9  
                              l5993 040B                                l5985 03EE  
                              l5977 03E2                                l5969 03D8  
                              l5897 0324                                l5889 0310  
                              l5995 0411                                l5987 03F4  
                              l5979 03E4                                l5899 0328  
                              l5997 0416                                l5989 03F9  
                              l5999 0429                                STR_1 1800  
                              STR_2 1800                                STR_3 1800  
                              STR_4 1800                                STR_5 1800  
                              _DHTS 01A0                                _LATA 010C  
                              _LATB 010D                                _LATC 010E  
                              u2400 1715                                u2401 1714  
                              u2410 171E                                u2411 171D  
                              u2420 1723                                u2500 1662  
                              u2421 1722                                u2501 1661  
                              u2430 1728                                u2510 1668  
                              u2431 1727                                u2511 1667  
                              u2440 1732                                u2520 1670  
                              u2360 1619                                u5000 04A8  
                              u2441 1731                                u2521 166F  
                              u2361 1618                                u5001 04A7  
                              u2450 1737                                u2370 1705  
                              u2530 1677                                u2610 16BF  
                              u5010 04AD                                u2451 1736  
                              u2371 1704                                u2531 1676  
                              u2611 16BE                                u5011 04AC  
                              u2460 173C                                u2380 170B  
                              u4300 09C9                                u5100 0521  
                              u5020 04C0                                u2461 173B  
                              u2381 170A                                u4301 09C8  
                              u5101 0520                                u5021 04BF  
                              u2470 1744                                u2390 1710  
                              u2550 168B                                u4310 09F3  
                              u4230 1756                                u5110 0534  
                              u5030 04C5                                u2471 1743  
                              u2391 170F                                u2551 168A  
                              u4311 09F2                                u4231 1755  
                              u5111 0533                                u5031 04C4  
                              u2480 1749                                u2560 1693  
                              u2544 167E                                u4320 0A12  
                              u4240 175B                                u4400 0C24  
                              u2800 0C6B                                u5200 05A8  
                              u5120 0539                                u5040 04D6  
                              u2481 1748                                u2561 1692  
                              u2545 167D                                u4321 0A11  
                              u4241 175A                                u4401 0C23  
                              u2801 0C6A                                u5201 05A7  
                              u5121 0538                                u5041 04D5  
                              u2490 174E                                u2570 169A  
                              u4330 08B7                                u4250 176A  
                              u4410 0C30                                u2810 0C82  
                              u5210 05AD                                u5130 054A  
                              u5050 04DC                                u2491 174D  
                              u2571 1699                                u4315 09EF  
                              u4331 08B6                                u4251 1769  
                              u4411 0C2F                                u2811 0C81  
                              u5211 05AC                                u5131 0549  
                              u5051 04DB                                u2580 16A5  
                              u4340 08CA                                u4260 1788  
                              u4420 0C3D                                u4500 153E  
                              u2820 0C99                                u5300 0622  
                              u5220 05BE                                u5140 0550  
                              u5060 04E1                                u2581 16A4  
                              u4341 08C9                                u4261 1787  
                              u4421 0C3C                                u4501 153D  
                              u2821 0C98                                u5301 0621  
                              u5221 05BD                                u5141 054F  
                              u5061 04E0                                u4350 08EC  
                              u4270 14F0                                u4510 0E85  
                              u4430 1443                                u2830 0CB0  
                              u5310 0633                                u5230 05C4  
                              u5150 0555                                u5070 04F9  
                              u4351 08EB                                u4271 14EF  
                              u4511 0E84                                u4431 1442  
                              u2831 0CAF                                u5311 0632  
                              u5231 05C3                                u5151 0554  
                              u5071 04F8                                u6007 02F2  
                              u4280 09A7                                u4360 090A  
                              u4440 0A36                                u4520 0E95  
                              u4600 0D73                                u2840 0CC7  
                              u5400 06A7                                u5320 0639  
                              u5240 05C9                                u5160 056D  
                              u5080 04FE                                u4361 0909  
                              u4265 1784                                u4425 0C39  
                              u4441 0A35                                u4521 0E94  
                              u4601 0D72                                u2841 0CC6  
                              u5401 06A6                                u5321 0638  
                              u5241 05C8                                u5161 056C  
                              u5081 04FD                                u6017 0349  
                              u4290 09B6                                u4370 15A4  
                              u4450 0A5D                                u4530 0EAE  
                              u4610 0D92                                u2850 0CDE  
                              u5410 06AD                                u5330 063E  
                              u5250 05E2                                u5170 0572  
                              u5090 051C                                u4291 09B5  
                              u4355 08E8                                u4371 15A3  
                              u4451 0A5C                                u4531 0EAD  
                              u6107 17FC                                u4611 0D91  
                              u2851 0CDD                                u5411 06AC  
                              u5331 063D                                u5251 05E1  
                              u5171 0571                                u5091 051B  
                              u6027 035C                                u4380 15CB  
                              u4460 17AE                                u4540 0FCA  
                              u4620 0D98                                u2860 0CF5  
                              u5500 071F                                u5420 06B2  
                              u5340 0656                                u5260 05E7  
                              u5180 0590                                u4700 02E8  
                              u4381 15CA                                u6117 085D  
                              u4461 17AD                                u4541 0FC9  
                              u4621 0D97                                u4605 0D6F  
                              u2861 0CF4                                u5501 071E  
                              u5421 06B1                                u5341 0655  
                              u5261 05E6                                u5181 058F  
                              u6037 037F                                u4701 02E7  
                              u4390 0B91                                u4470 1462  
                              u4550 0FE2                                u4630 0DC1  
                              u2870 0D0C                                u2790 0C55  
                              u5510 0724                                u5430 06CA  
                              u5350 065B                                u5270 0605  
                              u5190 0595                                u4710 02FF  
                              u6207 1633                                u4391 0B90  
                              u4471 1461                                u4535 0EAA  
                              u6127 0865                                u4551 0FE1  
                              u4631 0DC0                                u6047 0D26  
                              u2871 0D0B                                u2791 0C54  
                              u5511 0723                                u5431 06C9  
                              u5351 065A                                u5271 0604  
                              u5191 0594                                u4711 02FE  
                              u4480 1484                                u4640 0DDB  
                              u4560 0D20                                u5600 0796  
                              u5520 073C                                u5440 06CF  
                              u5360 0679                                u5280 060A  
                              u4800 039D                                u4720 0305  
                              u6217 1644                                u4385 15C7  
                              u6137 087B                                u4481 1483  
                              u6057 1594                                u4641 0DDA  
                              u4561 0D1F                                u5601 0795  
                              u5521 073B                                u5441 06CE  
                              u5361 0678                                u5281 0609  
                              u4801 039C                                u4721 0304  
                              u4490 1531                                u4570 0D37  
                              u5610 07A0                                u5530 0741  
                              u5450 06ED                                u5370 067E  
                              u5290 061D                                u4810 03A2  
                              u4730 0324                                u6227 1650  
                              u4395 0B8D                                u4491 1530  
                              u6147 088D                                u4555 0FDE  
                              u6067 0F19                                u4571 0D36  
                              u5611 079F                                u5531 0740  
                              u5451 06EC                                u5371 067D  
                              u5291 061C                                u4811 03A1  
                              u4731 0323                                u4580 0D3C  
                              u5620 07A5                                u5540 075F  
                              u5460 06F2                                u5380 0691  
                              u4900 0416                                u4820 03C0  
                              u4740 0333                                _RCIF 008D  
                              u6157 0893                                u6077 17BF  
                              u4645 0DD7                                u4581 0D3B  
                              u5621 07A4                                u5541 075E  
                              u5461 06F1                                u5381 0690  
                              u4901 0415                                u4821 03BF  
                              u4741 0332                   DS18B20_Read@entry 00E7  
                              u4590 0D59                                u5630 07AF  
                              u5550 0764                                u5470 0703  
                              u5390 0696                                u4910 0434  
                              u4830 03C5                                u4750 033F  
                              u6167 15E5                                u6087 17D3  
                              u4591 0D58                                u5631 07AE  
                              u5551 0763                                u5471 0702  
                              u5391 0695                                u4911 0433  
                              u4831 03C4                                u4751 033E  
                              u5640 07B4                                u5560 0775  
                              u5480 0708                                u4920 0439  
                              u4840 03D8                                u4760 0356  
                              u6177 15F9                                u6097 17E8  
                              u5641 07B3                                u5561 0774  
                              u5481 0707                                u4921 0438  
                              u4841 03D7                                u4761 0355  
                              u5570 077A                                u5490 0719  
                              u4930 044C                                u4850 03DD  
                              u4770 0370                                u4690 02DA  
                              u6187 160C                                u5571 0779  
                              u5491 0718                                u4931 044B  
                              u4851 03DC                                u4771 036F  
                              u4691 02D9                                u5580 078B  
                              u4940 0451                                u4860 03EE  
                              u4780 0376                                u6197 1627  
                              u5581 078A                                u4941 0450  
                              u4861 03ED                                u4781 0375  
                              u5590 0791                                u4950 0462  
                              u4870 03F4                                u4790 037B  
                              u5591 0790                                u4951 0461  
                              u4871 03F3                                u4791 037A  
                              u4960 0468                                u4880 03F9  
                              u4961 0467                                u4881 03F8  
                              u4970 046D                                u4890 0411  
                              u4971 046C                                u4891 0410  
                              u4980 0485                                u4981 0484  
                              u4990 048A                                u4991 0489  
                              _TMR2 001A                                _TXIF 008C  
                              _TOUT 00BA                                _WPUB 020D  
                              _WPUE 0210                      _check_response 16FB  
                              _Temp 00A4                                _dbuf 01C3  
                  read_OW@read_data 0026                                _main 02AF  
              __end_of_OW_read_byte 1540                                _prec 00A0  
                              pad@i 0033                                pad@p 0030  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              pad@w 0035                        _start_signal 1612  
                              btemp 007E                                _utoa 0B7F  
                      _DS18B20_Read 0EDD                                start 026B  
                             ??_pad 0032                       i2c_Read@j_346 00E3  
                        TXsend@size 0072                          TXsend@word 0070  
                             ?_main 0070                       ??_i2creadbyte 0072  
                             _DS18B 01B7                               _EEADR 0191  
                             _COM10 0164                               ?_utoa 003A  
                   __end_of___lodiv 0A23                               _T1CON 0018  
                             _T2CON 001C                     __end_of___lomod 091B  
                             i1l203 0847                               i1l215 07FD  
                             i1l224 092B                               i1l232 099E  
                             i1l241 0AD6                               i1l250 0B7E  
                             i1l402 018F                               i1l408 010E  
                             i1l364 156D                               i1l444 0262  
                             i1l445 0269                               i1l377 00E2  
                             _RCREG 0199                               _RCSTA 019D  
                      vfpfcnvrt@fmt 0052                               _SPBRG 019B  
                             _PORTA 000C                               _PORTB 000D  
                             _PORTC 000E                               _TRISA 008C  
                             _TRISB 008D                               _TRISC 008E  
                             _TXREG 019A                               _TXSTA 019E  
                     ?_i2cread3byte 0070                               _i2cqt 00B3  
                             _debug 0126                               _flags 00A6  
                   __end_of_read_OW 1449                               _fputc 1750  
                             _fputs 14CC                               _humar 0139  
            __end_of_check_response 1750                               pad@fp 0037  
                             _width 0120                               _putch 07FE  
                             main@i 00EB                               _sport 00BD  
                   i2cread3byte@add 0079                     i2cread3byte@si2 00AC  
                   i2cread3byte@dir 0070                   __end_of_DHT22READ 16FB  
              __end_of_OW_write_bit 1800                               utoa@d 003A  
                             utoa@i 0050                               utoa@n 0048  
                             utoa@p 0046                               utoa@w 0044  
                             status 0003                               wtemp0 007E  
                   __end_of_sprintf 1516                    ___lodiv@dividend 0028  
                   __initialization 026D                   __end_of_DHTRESULT 0EDD  
                      __end_of_main 07C2                    __end_of_i2c_Read 0DF7  
                      __end_of_utoa 0C4A                         _OW_read_bit 15D3  
       ?_INTERRUPT_InterruptManager 0070                    __end_of_Reg_init 159E  
                            ??_main 00E8                    __end_of_Pin_init 1430  
                            ??_utoa 0042         INTERRUPT_InterruptManager@h 007C  
                    ??_i2cread3byte 0072                    ___lodiv@quotient 0031  
                    i2creadbyte@add 0075                      i2creadbyte@si2 00AD  
                    i2creadbyte@dir 0070                 __end_of_i2creadbyte 099F  
                            ?_fputc 0020                              ?_fputs 0028  
                            _EEDATA 0193                              _EECON1 0195  
                            _EECON2 0196                     ?_check_response 0020  
                     ?_i2cwritebyte 0070                              _APFCON 011D  
                  __end_of_Sys_Init 1418                              _ANSELA 018C  
                            ?_putch 0070                              _ANSELB 018D  
                            _BORCON 0116                              i1l4001 092D  
                            i1l4011 093E                              i1l4003 0931  
                            i1l4101 0B4F                              i1l4021 0952  
                            i1l4013 0949                              i1l4005 0935  
                            i1l4031 096B                              i1l4023 0955  
                            i1l4015 094C                              i1l4007 0939  
                            i1l4105 0B52                              i1l4033 096D  
                            i1l4025 0964                              i1l4017 094E  
                            i1l4009 093B                              i1l4051 0AC8  
                            i1l4035 0970                              i1l4027 0967  
                            i1l4019 0950                              i1l4043 0975  
                            i1l4061 0AE0                              i1l4053 0ACB  
                            i1l4037 0971                              i1l4029 0969  
                            i1l4071 0AFE                              i1l4063 0AE4  
                            i1l4055 0ACF                              i1l4039 0972  
                            i1l4081 0B26                              i1l4073 0B00  
                            i1l4065 0AE6                              i1l4057 0AD8  
                            i1l4049 0AC7                              i1l4091 0B45  
                            i1l4083 0B29                              i1l4075 0B02  
                            i1l4067 0AE9                              i1l4059 0ADC  
                            i1l4093 0B47                              i1l4085 0B2B  
                            i1l4077 0B04                              i1l4069 0AFB  
                            i1l4095 0B49                              i1l4087 0B2D  
                            i1l4079 0B07                              i1l4097 0B4B  
                            i1l4089 0B42                              i1l4099 0B4E  
                            i1l6411 000C                              i1l3941 0812  
                            i1l3933 0803                              i1l6501 009E  
                            i1l6421 0020                              i1l6413 000F  
                            i1l3951 0825                              i1l3943 0819  
                            i1l3935 0804                              i1l6511 00B8  
                            i1l6503 00A5                              i1l6431 0030  
                            i1l6423 0025                              i1l6415 0015  
                            i1l6407 0006                              i1l3953 0826  
                            i1l3945 081C                              i1l3937 0807  
                            i1l6601 01D6                              i1l6521 00C8  
                            i1l6513 00BA                              i1l6505 00AB  
                            i1l6441 0043                              i1l6433 0036  
                            i1l6425 0026                              i1l6417 0018  
                            i1l3955 0827                              i1l3947 0820  
                            i1l3939 080B                              i1l3971 07CB  
                            i1l6611 01E6                              i1l6603 01DB  
                            i1l6523 00C9                              i1l6515 00BC  
                            i1l6507 00AE                              i1l6451 004F  
                            i1l6443 0045                              i1l6435 003B  
                            i1l6427 002C                              i1l6419 001A  
                            i1l3949 0822                              i1l3981 07DF  
                            i1l3973 07D2                              i1l3965 07C3  
                            i1l6621 0214                              i1l6613 01F0  
                            i1l6605 01DD                              i1l6541 0104  
                            i1l6533 00ED                              i1l6517 00C3  
                            i1l6509 00B5                              i1l6461 0060  
                            i1l6453 0055                              i1l6445 0046  
                            i1l6437 003C                              i1l6429 002F  
                            i1l5831 1540                              i1l3959 082A  
                            i1l3983 07E0                              i1l3975 07D9  
                            i1l3967 07C4                              i1l6631 0243  
                            i1l6615 01F9                              i1l6607 01DF  
                            i1l6551 012E                              i1l6543 010F  
                            i1l6535 00F0                              i1l6519 00C6  
                            i1l6471 0070                              i1l6463 0061  
                            i1l6455 0057                              i1l6447 004C  
                            i1l6439 003D                              i1l6527 00CB  
                            i1l5833 1545                              i1l3993 091C  
                            i1l3977 07DB                              i1l3969 07C7  
                            i1l6641 0250                              i1l6633 0245  
                            i1l6617 0202                              i1l6625 021D  
                            i1l6561 0154                              i1l6553 0134  
                            i1l6545 0114                              i1l6537 00F4  
                            i1l6529 00E7                              i1l6481 007C  
                            i1l6473 0072                              i1l6465 0067  
                            i1l6457 0058                              i1l6449 004E  
                            i1l5835 1551                              i1l3995 091D  
                            i1l3979 07DE                              i1l3987 07E3  
                            i1l6643 0252                              i1l6635 0246  
                            i1l6619 020B                              i1l6627 0239  
                            i1l6651 0258                              i1l6571 0171  
                            i1l6563 015E                              i1l6555 013E  
                            i1l6547 011E                              i1l6539 00FA  
                            i1l6491 008D                              i1l6483 0082  
                            i1l6475 0073                              i1l6467 0069  
                            i1l6459 005E                              i1l5845 1562  
                            i1l5837 1556                              i1l3997 0920  
                            i1l6653 025C                              i1l6645 0253  
                            i1l6637 024C                              i1l6629 023F  
                            i1l6581 019B                              i1l6565 0165  
                            i1l6557 0144                              i1l6549 0124  
                            i1l6493 008E                              i1l6485 0084  
                            i1l6477 0079                              i1l6469 006A  
                            i1l5847 1568                              i1l5839 155B  
                            i1l3999 0924                              i1l6655 0265  
                            i1l6647 0255                              i1l6639 024E  
                            i1l6591 01C4                              i1l6911 01B6  
                            i1l6583 01A5                              i1l6567 016C  
                            i1l6559 014E                              i1l6575 0173  
                            i1l6495 0094                              i1l6487 0085  
                            i1l6479 007B                              i1l5849 1569  
                            i1l6921 0B5B                              i1l6657 0267  
                            i1l6913 0225                              i1l6649 0256  
                            i1l6593 01C9                              i1l6577 0194  
                            i1l6569 016F                              i1l6497 0096  
                            i1l6489 008B                              i1l6915 07EC  
                            i1l6659 0268                              i1l6595 01CD  
                            i1l6587 01AE                              i1l6907 00D4  
                            i1l6499 0098                              i1l6917 0833  
                            i1l6597 01CF                              i1l6589 01BE  
                            i1l6909 017B                              i1l6919 097E  
                            i1l6599 01D1                              _INTCON 000B  
                       read_OW@PORT 0022                         read_OW@TRIS 0020  
                            u465_20 1545                              u465_21 1544  
                            u466_20 155B                              u570_20 0043  
                            _OSCCON 0099                              u466_21 155A  
                            u570_21 0042                              u467_20 1561  
                            u571_20 004C                              u467_21 1560  
                            u571_21 004B                              u468_20 1568  
                            u580_20 009E                              u572_20 0055  
                            u468_21 1567                              u580_21 009D  
                            u572_21 0054                              u581_20 00E7  
                            u573_20 005E                              u565_20 000B  
                            u581_21 00E6                              u573_21 005D  
                            u565_21 000A                              u590_20 019A  
                            u582_20 00EC                              u574_20 0067  
                            u566_20 0015                              u590_21 0199  
                            u582_21 00EB                              u574_21 0066  
                            u566_21 0014                              u591_20 01C4  
                            u583_20 00FA                              u575_20 0070  
                            u567_20 0020                              u591_21 01C3  
                            u583_21 00F9                              u575_21 006F  
                            u567_21 001F                              u592_20 01C9  
                            u584_20 0114                              u576_20 0079  
                            u568_20 002C                              u592_21 01C8  
                            u584_21 0113                              u576_21 0078  
                            u568_21 002B                              _TEMPDS 0135  
                            u593_20 01D6                              u585_20 0124  
                            u577_20 0082                              u569_20 0036  
                            u593_21 01D5                              u585_21 0123  
                            u577_21 0081                              u569_21 0035  
                            u594_20 01DB                              u586_20 0134  
                            u578_20 008B                              u594_21 01DA  
                            u586_21 0133                              u578_21 008A  
                            u595_20 01E5                              u587_20 0144  
                            u579_20 0094                              u595_21 01E4  
                            u587_21 0143                              u579_21 0093  
                            u596_20 023F                              u588_20 0154  
                            u596_21 023E                              u588_21 0153  
                            u597_20 024C                              u589_20 0194  
                            u597_21 024B                              u589_21 0193  
                            u598_20 025C                              _TMR2IF 0089  
                            u598_21 025B                              u599_20 0262  
                            u599_21 0261                              _TMR2ON 00E2  
                            _WDTCON 0097                              _SSPADD 0212  
                            _SSPBUF 0211                  check_response@TOUT 0021  
                            _i2cena 00B4                              _TXsend 1540  
                            _i2busy 00B1                  check_response@port 0022  
                check_response@tris 0020                        vfprintf@cfmt 0068  
    INTERRUPT_InterruptManager@sspo 00A9                              _endi2c 00B7  
                         ??___lodiv 0030                           ??___lomod 0030  
                            _med_sl 00B8                              _tempar 00C7  
                            _weight 0141                              pad@buf 002F  
                            fputc@c 0020                           ??_read_OW 0025  
                            fputs@c 002C                              fputs@i 002D  
                            fputs@s 002B                              putch@c 0070  
                  __end_of_vfprintf 1465               __end_of_OW_write_byte 1485  
                    ??_i2cwritebyte 0072                              utoa@fp 0043  
                         ??_sprintf 006A             __end_of__initialization 02AB  
                    _OW_reset_pulse 0848                        ?_port_config 0070  
                    __pcstackCOMMON 0070                        __pidataBANK1 1401  
                      __pidataBANK2 14A8                        __pidataBANK3 1485  
                     _i2cwrite2byte 0802                       __end_of_fputc 17A7  
                     __end_of_fputs 14F1                       __end_of_putch 07FF  
                      _OW_read_byte 1516                         _i2creadbyte 091B  
                           ??_fputc 0023                             ??_fputs 0029  
                           ??_putch 0020              __end_of_OW_reset_pulse 08AA  
             OW_write_bit@write_bit 0026                           ?_i2c_Read 0070  
                        __pbssBANK1 00A0                          __pbssBANK2 0120  
                        __pbssBANK3 01C3                           ?_Reg_init 0070  
                         ?_Pin_init 0070                __end_of_i2cread3byte 0B7F  
                           ?_TXsend 0070                          __pmaintext 02AF  
                    ?_i2cwrite2byte 0070                          __pintentry 0004  
                           _BAUDCON 019F                           ?_Sys_Init 0070  
                 OW_reset_pulse@LAT 002B                   OW_reset_pulse@PIN 002D  
                      _OW_write_bit 17A7                             _OSCTUNE 0098  
                           _SSPCON1 0215                             _SSPCON2 0216  
                   i2cwritebyte@add 0074                     i2cwritebyte@si3 00AE  
                   i2cwritebyte@dir 0070                             _SSPSTAT 0214  
                  ___lomod@dividend 0028                          ??_i2c_Read 006A  
                   ?_OW_reset_pulse 0027                    OW_read_byte@PORT 0032  
                           TXsend@i 007D                    OW_read_byte@TRIS 0030  
                        ??_Reg_init 0020                             _Lectura 00B9  
                           _i2cbgin 00B6                    OW_read_byte@loop 0039  
                         _DHT22READ 16A7                          ??_Pin_init 0020  
              __end_of_i2cwritebyte 07FE                             ___lodiv 099F  
                           ___lomod 08AA                        ?_OW_read_bit 0027  
                         ?_vfprintf 0063                             _act_com 00B0  
                        ??_Sys_Init 0021                        DHT22READ@COM 002A  
                         _DHTRESULT 0DF7                             __ptext1 0C4A  
                           __ptext2 0D19                             __ptext3 1411  
                           __ptext4 156E                             __ptext5 1418  
                           __ptext6 0EDD                             __ptext7 1465  
                           __ptext8 17A7                             __ptext9 0848  
                           _meddone 00A2                             _read_OW 1430  
                  ??_check_response 0022                   __end_of_read_byte 16A7  
                           _sprintf 14F1                             clrloop0 1406  
                         _LOAD_CELL 0147                end_of_initialization 02AB  
                        DHTRESULT@j 00E6                             fputc@fp 0022  
                           init_ram 140B                             fputs@fp 0028  
                           initloop 140C                   i2cread3byte@value 0071  
                        ?_DHT22READ 0026                     ??_i2cwrite2byte 0073  
                 __end_of_vfpfcnvrt 0AC6                    OW_write_bit@TRIS 0020  
                  vfpfcnvrt@convarg 0058                        read_byte@num 0023  
                        ??_vfprintf 0066                          ?_DHTRESULT 00E0  
                  OW_write_byte@LAT 0029                    OW_write_byte@PIN 002B  
                  port_config@stype 0021                       DS18B20_Read@j 006D  
                         i2c_Read@j 00E1                    i2cwrite2byte@add 0075  
                  i2cwrite2byte@si3 00AF                    i2cwrite2byte@dir 0070  
                    __end_of_TXsend 156E                         vfpfcnvrt@ap 0053  
                       vfpfcnvrt@cp 0061                         vfpfcnvrt@fp 0060  
                      ?_i2creadbyte 0070                 start_initialization 026D  
                   ___lodiv@divisor 0020                        _i2cread3byte 0AC6  
                   ___lodiv@counter 0039                         __end_of_pad 15D3  
                         _i2cfinish 00B5                  OW_read_byte@result 0038  
                     ?_start_signal 0020                       ?_DS18B20_Read 00E0  
                        read_OW@PIN 0024                         ??_DHT22READ 002B  
              OW_read_bit@read_data 002F                       DHTRESULT@TOUT 00E2  
                          ??_TXsend 0073                   DHTRESULT@conector 00E1  
                       vfprintf@fmt 0063                       DHTRESULT@temp 0124  
                     DHTRESULT@port 00E5                       DHTRESULT@tris 00E0  
                       __pdataBANK1 00EC                         __pdataBANK2 0145  
                       __pdataBANK3 01A0                         ??_DHTRESULT 006A  
                        read_byte@i 0025                         __pbssCOMMON 007C  
                  ??_OW_reset_pulse 002E                           ___latbits 0002  
                     __pcstackBANK0 0020                       __pcstackBANK1 00CD  
                      _i2cwritebyte 07C2                      ??_start_signal 0021  
                    ??_DS18B20_Read 006A                     OW_read_bit@PORT 0029  
                   OW_read_bit@TRIS 0027                            ?___lodiv 0020  
                          ?___lomod 0020                      DHT22READ@check 00A8  
                    DHT22READ@entry 0027        ??_INTERRUPT_InterruptManager 007A  
                         _dhtresult 013D                     ___lomod@divisor 0020  
                  i2creadbyte@value 0071                     OW_read_byte@LAT 0034  
                   ___lomod@counter 0031                     OW_read_byte@PIN 0036  
                          ?_read_OW 0020   INTERRUPT_InterruptManager@i2cstep 00AB  
                          ?_sprintf 00CD                  OW_reset_pulse@PORT 0029  
                OW_reset_pulse@TRIS 0027                       _OW_write_byte 1465  
                         _read_byte 1653                           clear_ram0 1405  
                          _PIE1bits 0091                            _PIR1bits 0011  
                          _VEML7700 0157                     OW_write_bit@LAT 0022  
                   OW_write_bit@PIN 0024                           _vfpfcnvrt 0A23  
                  i2cwritebyte@data 0071                           _port_save 00BC  
                         main@i_364 00EA                         _macro_delay 00A7  
                    ?_OW_write_byte 0027                          ?_read_byte 0020  
                          _i2c_Read 0D19                       ??_port_config 0020  
                          _Reg_init 156E                          _EECON1bits 0195  
                          _i2select 00B2                            _Pin_init 1418  
                      DHTRESULT@COM 00E4                        DHTRESULT@dht 00E3  
                        vfprintf@ap 0065                        DHTRESULT@hum 0122  
                        vfprintf@fp 0067               __end_of_i2cwrite2byte 0848  
     INTERRUPT_InterruptManager@plb 0145             OW_write_byte@write_data 002D  
                        ?_vfpfcnvrt 0052                            _Sys_Init 1411  
              __end_of_start_signal 1653                       ?_OW_read_byte 0030  
              __end_of_DS18B20_Read 1000                          sprintf@fmt 00CF  
                    OW_read_bit@LAT 002B                      OW_read_bit@PIN 002D  
                     DHT22READ@TOUT 0028                            __ptext10 1516  
                          __ptext11 15D3                            __ptext20 1750  
                          __ptext12 1430                            __ptext21 07FE  
                          __ptext13 0DF7                            __ptext30 0802  
                          __ptext22 08AA                            __ptext14 14F1  
                          __ptext31 091B                            __ptext23 099F  
                          __ptext15 1449                            __ptext32 0AC6  
                          __ptext24 16A7                            __ptext16 0A23  
                          __ptext33 1540                            __ptext25 1612  
                          __ptext17 0B7F                            __ptext26 1653  
                          __ptext18 159E                            __ptext27 16FB  
                          __ptext19 14CC                            __ptext29 07C2  
                     DHT22READ@port 002B                       DHT22READ@tris 0026  
                DHT22READ@dhtresult 0029                 __end_of_port_config 0D19  
                          int$flags 007E                            _vfprintf 1449  
__end_of_INTERRUPT_InterruptManager 026B          _INTERRUPT_InterruptManager 0004  
                    ??_OW_read_byte 0037                       ?_OW_write_bit 0020  
                        _INTCONbits 000B                     ??_OW_write_byte 002C  
      INTERRUPT_InterruptManager@rp 00AA                         ??_read_byte 0021  
                          intlevel1 0000                    start_signal@port 0022  
                         sprintf@ap 00D5                    start_signal@tris 0020  
                     ??_OW_read_bit 002E                         ??_vfpfcnvrt 0054  
                    ??_OW_write_bit 0025                       read_byte@port 0024  
                     read_byte@tris 0020                       __pstringtext1 1800  
                     __pstringtext2 0000                            sprintf@f 00D6  
                          sprintf@s 00CD                         _SSPCON1bits 0215  
                       _SSPCON2bits 0216                          _STATUSbits 0003  
                 OW_write_byte@TRIS 0027                         _port_config 0C4A  
                 OW_write_byte@loop 002E  
